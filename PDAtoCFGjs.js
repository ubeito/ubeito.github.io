/* Generated by the Nim Compiler v1.6.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI956308033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956308108 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956308119 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956308116 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956308113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555115 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI956308013 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956308012 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956308020 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI436209557 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956307478 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956307489 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956307480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956307479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956306839 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956306841 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956307432 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956306840 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956307241 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956306969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956306628 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956306519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956305251 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956305396 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956304935 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956304932 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956304929 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI436209140 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956304452 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956304592 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956303009 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956302992 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956303007 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956303004 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956303001 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956302993 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956304922 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405126 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405333 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845818 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1174405637 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405636 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405632 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405729 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405731 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405730 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308622870 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1308622864 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1308622853 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956302920 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956302846 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956302799 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956302800 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956302825 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI620757354 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1191182851 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855762 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855751 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855761 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855750 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855759 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855748 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855758 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855790 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855789 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855781 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855779 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855754 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI989855767 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855756 = {size: 0,kind: 33,base: null,node: null,finalizer: null};
var NTI989855766 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI905969667 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI989855755 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI989855757 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI989855763 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI989855753 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405330 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1157628048 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1157628045 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157628042 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308624678 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1308624129 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1308623526 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1174405331 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1308623426 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI33554459 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1040187443 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI33554458 = {size: 0,kind: 33,base: null,node: null,finalizer: null};
var NTI989856012 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI1174405629 = {size: 0,kind: 33,base: null,node: null,finalizer: null};
var NTI1174405631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405667 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI704643133 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956301382 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI436208489 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI436208618 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI620757366 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI419430695 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956301438 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956301437 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956301436 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956301415 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1392508936 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555126 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1342177302 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI33554474 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1342177285 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1342177284 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1342177300 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1342177297 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1342177294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1342177283 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI956301316 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956301315 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637534211 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301429 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI956301426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI956301423 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555918 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555918 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554440, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554440, name: "Field2", sons: null}]};
NTI33555918.node = NNI33555918;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
NTI956301316.base = NTI33554439;
NTI956301315.base = NTI956301316;
var NNI956301429 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI956301315, name: "Field2", sons: null}]};
NTI956301429.node = NNI956301429;
NTI956301426.base = NTI956301429;
var NNI956301423 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI956301426, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI956301423.node = NNI956301423;
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
NTI33555129.base = NTI33555113;
var NNI1342177283 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1342177283, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1342177283, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1342177283, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1342177283, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1342177283, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1342177283, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1342177283, name: "JArray", len: 0, sons: null}}};
NTI1342177283.node = NNI1342177283;
NTI1342177302.base = NTI1342177284;
var NNI1342177285 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1342177283, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554439, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI33554474, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554435, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1342177294, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1342177302, name: "elems", sons: null}]]}]};
NTI1342177285.node = NNI1342177285;
NTI1342177284.base = NTI1342177285;
var NNI1342177300 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1342177284, name: "Field3", sons: null}]};
NTI1342177300.node = NNI1342177300;
NTI1342177297.base = NTI1342177300;
var NNI1342177294 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1342177297, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI1342177294.node = NNI1342177294;
var NNI33555126 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555126.node = NNI33555126;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI33555126.base = NTI33555125;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI1392508936 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1392508936.node = NNI1392508936;
NTI1392508936.base = NTI33555125;
NTI956301436.base = NTI33554439;
NTI956301437.base = NTI33554456;
NTI956301438.base = NTI33554456;
var NNI956301415 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI956301423, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI956301423, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI956301315, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI956301436, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI956301437, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI956301438, name: "Field5", sons: null}]};
NTI956301415.node = NNI956301415;
NTI419430695.base = NTI33554439;
NTI620757366.base = NTI33554439;
NTI436208618.base = NTI33554439;
NTI436208489.base = NTI33554439;
NTI956301382.base = NTI33554439;
var NNI704643133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI704643133.node = NNI704643133;
var NNI1174405631 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1174405629, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1174405123, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI704643133, name: "Field2", sons: null}]};
NTI1174405631.node = NNI1174405631;
NTI1174405667.base = NTI1174405631;
NTI989856012.base = NTI33554458;
NTI1040187443.base = NTI33554459;
var NNI1174405331 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405331, name: "mfShortestMatch", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405331, name: "mfNoCaptures", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405331, name: "mfFindMatch", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405331, name: "mfFindMatchOpt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405331, name: "mfAnchored", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405331, name: "mfBwMatch", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405331, name: "mfReverseCapts", len: 0, sons: null}}};
NTI1174405331.node = NNI1174405331;
NTI1308623426.base = NTI1174405331;
NTI1308623526.base = NTI1174405331;
NTI1308624129.base = NTI1174405331;
NTI1308624678.base = NTI1174405331;
var NNI1157628048 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554458, name: "Field3", sons: null}]};
NTI1157628048.node = NNI1157628048;
NTI1157628045.base = NTI1157628048;
var NNI1157628042 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1157628045, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI1157628042.node = NNI1157628042;
var NNI989855755 = {kind: 2, offset: 0, typ: null, name: null, len: 47, sons: {"0": {kind: 1, offset: 0, typ: NTI989855755, name: "reChar", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI989855755, name: "reCharCi", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI989855755, name: "reJoiner", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI989855755, name: "reGroupStart", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI989855755, name: "reGroupEnd", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI989855755, name: "reFlags", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI989855755, name: "reOr", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI989855755, name: "reZeroOrMore", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI989855755, name: "reOneOrMore", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI989855755, name: "reZeroOrOne", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI989855755, name: "reRepRange", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI989855755, name: "reStartSym", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI989855755, name: "reEndSym", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI989855755, name: "reStartSymML", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI989855755, name: "reEndSymML", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI989855755, name: "reStart", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI989855755, name: "reEnd", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI989855755, name: "reWordBoundary", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI989855755, name: "reNotWordBoundary", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI989855755, name: "reWord", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI989855755, name: "reDigit", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI989855755, name: "reWhiteSpace", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI989855755, name: "reUCC", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI989855755, name: "reNotAlphaNum", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI989855755, name: "reNotDigit", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI989855755, name: "reNotWhiteSpace", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI989855755, name: "reNotUCC", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI989855755, name: "reAny", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI989855755, name: "reAnyNl", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI989855755, name: "reWordBoundaryAscii", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI989855755, name: "reNotWordBoundaryAscii", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI989855755, name: "reWordAscii", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI989855755, name: "reDigitAscii", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI989855755, name: "reWhiteSpaceAscii", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI989855755, name: "reNotAlphaNumAscii", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI989855755, name: "reNotDigitAscii", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI989855755, name: "reNotWhiteSpaceAscii", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI989855755, name: "reAnyAscii", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI989855755, name: "reAnyNlAscii", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI989855755, name: "reInSet", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI989855755, name: "reNotSet", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI989855755, name: "reLookahead", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI989855755, name: "reLookbehind", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI989855755, name: "reNotLookahead", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI989855755, name: "reNotLookbehind", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI989855755, name: "reSkip", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI989855755, name: "reEoe", len: 0, sons: null}}};
NTI989855755.node = NNI989855755;
NTI989855766.base = NTI33554458;
var NNI989855754 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI989855754, name: "flagCaseInsensitive", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI989855754, name: "flagNotCaseInsensitive", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI989855754, name: "flagMultiLine", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI989855754, name: "flagNotMultiLine", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI989855754, name: "flagAnyMatchNewLine", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI989855754, name: "flagNotAnyMatchNewLine", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI989855754, name: "flagUnGreedy", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI989855754, name: "flagNotUnGreedy", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI989855754, name: "flagUnicode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI989855754, name: "flagNotUnicode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI989855754, name: "flagVerbose", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI989855754, name: "flagNotVerbose", len: 0, sons: null}}};
NTI989855754.node = NNI989855754;
NTI989855767.base = NTI989855754;
var NNI989855779 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI905969667, name: "Field1", sons: null}]};
NTI989855779.node = NNI989855779;
NTI989855776.base = NTI989855779;
var NNI989855773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI989855776, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI989855773.node = NNI989855773;
var NNI989855789 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI905969667, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI905969667, name: "b", sons: null}]};
NTI989855789.node = NNI989855789;
NTI989855781.base = NTI989855789;
NTI989855790.base = NTI989855757;
NTI989855759.base = NTI989855757;
var NNI989855748 = {kind: 1, offset: "s", len: 0, typ: NTI989855759, name: "s", sons: null};
NTI989855748.node = NNI989855748;
var NNI989855758 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nfa", len: 0, typ: NTI989855753, name: "nfa", sons: null}, 
{kind: 1, offset: "rpn", len: 0, typ: NTI989855748, name: "rpn", sons: null}, 
{kind: 1, offset: "reverseCapts", len: 0, typ: NTI33554466, name: "reverseCapts", sons: null}]};
NTI989855758.node = NNI989855758;
var NNI989855757 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI989855755, name: "kind", sons: null}, 
{kind: 1, offset: "cp", len: 0, typ: NTI905969667, name: "cp", sons: null}, 
{kind: 1, offset: "next", len: 0, typ: NTI989855766, name: "next", sons: null}, 
{kind: 1, offset: "isGreedy", len: 0, typ: NTI33554466, name: "isGreedy", sons: null}, 
{kind: 1, offset: "uid", len: 0, typ: NTI989855756, name: "uid", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554458, name: "idx", sons: null}, 
{kind: 1, offset: "isCapturing", len: 0, typ: NTI33554466, name: "isCapturing", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}, 
{kind: 1, offset: "flags", len: 0, typ: NTI989855767, name: "flags", sons: null}, 
{kind: 1, offset: "min", len: 0, typ: NTI33554458, name: "min", sons: null}, 
{kind: 1, offset: "max", len: 0, typ: NTI33554458, name: "max", sons: null}, 
{kind: 1, offset: "cps", len: 0, typ: NTI989855773, name: "cps", sons: null}, 
{kind: 1, offset: "ranges", len: 0, typ: NTI989855781, name: "ranges", sons: null}, 
{kind: 1, offset: "shorthands", len: 0, typ: NTI989855790, name: "shorthands", sons: null}, 
{kind: 1, offset: "cc", len: 0, typ: NTI33554459, name: "cc", sons: null}, 
{kind: 1, offset: "subExp", len: 0, typ: NTI989855758, name: "subExp", sons: null}]};
NTI989855757.node = NNI989855757;
NTI989855763.base = NTI989855757;
NTI989855761.base = NTI33554458;
NTI989855750.base = NTI989855761;
NTI989855762.base = NTI989855757;
NTI989855751.base = NTI989855762;
var NNI989855752 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "allZ", len: 0, typ: NTI989855750, name: "allZ", sons: null}, 
{kind: 1, offset: "z", len: 0, typ: NTI989855751, name: "z", sons: null}]};
NTI989855752.node = NNI989855752;
var NNI989855753 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "s", len: 0, typ: NTI989855763, name: "s", sons: null}, 
{kind: 1, offset: "t", len: 0, typ: NTI989855752, name: "t", sons: null}]};
NTI989855753.node = NNI989855753;
var NNI1191182851 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "lit", len: 0, typ: NTI905969667, name: "lit", sons: null}, 
{kind: 1, offset: "nfa", len: 0, typ: NTI989855753, name: "nfa", sons: null}]};
NTI1191182851.node = NNI1191182851;
var NNI1174405330 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nfa", len: 0, typ: NTI989855753, name: "nfa", sons: null}, 
{kind: 1, offset: "groupsCount", len: 0, typ: NTI33554458, name: "groupsCount", sons: null}, 
{kind: 1, offset: "namedGroups", len: 0, typ: NTI1157628042, name: "namedGroups", sons: null}, 
{kind: 1, offset: "litOpt", len: 0, typ: NTI1191182851, name: "litOpt", sons: null}]};
NTI1174405330.node = NNI1174405330;
NTI620757354.base = NTI33554439;
NTI956302825.base = NTI33554439;
NTI956302800.base = NTI33554439;
NTI956302799.base = NTI33554439;
NTI956302846.base = NTI33554439;
NTI956302920.base = NTI33554439;
NTI1174405636.base = NTI1174405631;
NTI1174405637.base = NTI33554458;
var NNI1174405635 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sx", len: 0, typ: NTI1174405636, name: "sx", sons: null}, 
{kind: 1, offset: "ss", len: 0, typ: NTI1174405637, name: "ss", sons: null}, 
{kind: 1, offset: "si", len: 0, typ: NTI33554458, name: "si", sons: null}]};
NTI1174405635.node = NNI1174405635;
NTI1174405632.base = NTI1174405635;
var NNI1174405729 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1174405632, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI1174405632, name: "b", sons: null}]};
NTI1174405729.node = NNI1174405729;
NTI1174405731.base = NTI1174405729;
var NNI1174405730 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "s", len: 0, typ: NTI1174405731, name: "s", sons: null}, 
{kind: 1, offset: "i", len: 0, typ: NTI33554456, name: "i", sons: null}]};
NTI1174405730.node = NNI1174405730;
var NNI1308622853 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ahead", len: 0, typ: NTI1308622864, name: "ahead", sons: null}, 
{kind: 1, offset: "behind", len: 0, typ: NTI1308622870, name: "behind", sons: null}, 
{kind: 1, offset: "smL", len: 0, typ: NTI1174405730, name: "smL", sons: null}]};
NTI1308622853.node = NNI1308622853;
NTI1291845818.base = NTI1174405331;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1174405123, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI704643133, name: "Field1", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1174405127.base = NTI704643133;
NTI1174405126.base = NTI1174405127;
var NNI1174405333 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "captures", len: 0, typ: NTI1174405126, name: "captures", sons: null}, 
{kind: 1, offset: "namedGroups", len: 0, typ: NTI1157628042, name: "namedGroups", sons: null}, 
{kind: 1, offset: "boundaries", len: 0, typ: NTI704643133, name: "boundaries", sons: null}]};
NTI1174405333.node = NNI1174405333;
NTI956302993.base = NTI33554439;
NTI956304922.base = NTI956302993;
NTI956303009.base = NTI956302993;
var NNI956302992 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI956303009, name: "Field1", sons: null}]};
NTI956302992.node = NNI956302992;
var NNI956303007 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI956302992, name: "Field3", sons: null}]};
NTI956303007.node = NNI956303007;
NTI956303004.base = NTI956303007;
var NNI956303001 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI956303004, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI956303001.node = NNI956303001;
NTI956304592.base = NTI956302993;
NTI956304452.base = NTI33554439;
NTI436209140.base = NTI956302993;
var NNI956304935 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554439, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI956304922, name: "Field3", sons: null}]};
NTI956304935.node = NNI956304935;
NTI956304932.base = NTI956304935;
var NNI956304929 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI956304932, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI956304929.node = NNI956304929;
NTI956305396.base = NTI33554439;
NTI956305251.base = NTI33554439;
NTI956306519.base = NTI33554439;
var NNI956306628 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI956304922, name: "Field1", sons: null}]};
NTI956306628.node = NNI956306628;
NTI956306969.base = NTI33554439;
NTI956307241.base = NTI956304922;
NTI956306840.base = NTI33554439;
NTI956307432.base = NTI33554439;
NTI956306841.base = NTI33554439;
var NNI956306839 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI956306840, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI956306841, name: "Field1", sons: null}]};
NTI956306839.node = NNI956306839;
NTI956307479.base = NTI33554439;
NTI956307480.base = NTI33554439;
NTI956307489.base = NTI33554439;
var NNI956307478 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI956307479, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI956307480, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI956304929, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI956307489, name: "Field3", sons: null}]};
NTI956307478.node = NNI956307478;
var NNI436209557 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1342177284, name: "Field1", sons: null}]};
NTI436209557.node = NNI436209557;
NTI956308020.base = NTI33554439;
NTI956308013.base = NTI33554439;
NTI956308012.base = NTI956308013;
var NNI33555115 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555115.node = NNI33555115;
NTI33555115.base = NTI33555114;
var NNI956308108 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI956308108.node = NNI956308108;
var NNI956308119 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534211, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI956308108, name: "Field2", sons: null}]};
NTI956308119.node = NNI956308119;
NTI956308116.base = NTI956308119;
var NNI956308113 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI956308116, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}]};
NTI956308113.node = NNI956308113;
var NNI956308033 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI956308033.node = NNI956308033;

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function arrayConstr(len_33557179, value_33557180, typ_33557181) {
        var result = new Array(len_33557179);
    for (var i = 0; i < len_33557179; ++i) result[i] = nimCopy(null, value_33557180, typ_33557181);
    return result;
  

  
}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    e_33556667.trace = nimCopy(null, rawWriteStackTrace_33556631(), NTI33554439);
    throw e_33556667;

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}

function mulInt(a_33556948, b_33556949) {
        var result = a_33556948 * b_33556949;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(4);

function raiseFieldError2(f_33556778, discVal_33556779) {
    raiseException({message: (f_33556778 || []).concat(discVal_33556779 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556514) {
  var result_33556515 = [];

    if (x_33556514) {
    result_33556515 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556515 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556515;

}

function reprDiscriminant(e_33557409, typ_33557410) {
    var Temporary1;

  var result_33557411 = [];

  var F = {procname: "system.reprDiscriminant", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\repr_impl.nim", line: 0};
  framePtr = F;
    F.line = 12;
    F.line = 12;
    switch (typ_33557410.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557409, typ_33557410);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557409 == 0)));
      break;
    default: 
      Temporary1 = HEX24_318767107(e_33557409);
      break;
    }
    result_33557411 = nimCopy(null, Temporary1, NTI33554439);
  framePtr = F.prev;

  return result_33557411;

}
var ConstSet3 = setConstr(4);
var ConstSet4 = setConstr(2);
var ConstSet5 = setConstr(2);
var ConstSet6 = setConstr(3);
var ConstSet7 = setConstr(3);
var ConstSet8 = setConstr(1);
var ConstSet9 = setConstr(1);

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet10 = setConstr(6);
var ConstSet11 = setConstr(6);
var ConstSet12 = setConstr(5);
var ConstSet13 = setConstr(5);
var ConstSet14 = setConstr(5);

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}
var ConstSet15 = setConstr(5);
var ConstSet16 = setConstr(5);
var ConstSet17 = setConstr(5);

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}
var ConstSet18 = setConstr([48, 57]);
var ConstSet19 = setConstr(0, 125);
var ConstSet20 = setConstr([48, 57]);
var ConstSet21 = setConstr([65, 90]);

function nimMax(a_33556998, b_33556999) {
    var Temporary1;

  var result_33557000 = 0;

  BeforeRet: do {
    if ((b_33556999 <= a_33556998)) {
    Temporary1 = a_33556998;
    }
    else {
    Temporary1 = b_33556999;
    }
    
    result_33557000 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557000;

}

function nimMin(a_33556994, b_33556995) {
    var Temporary1;

  var result_33556996 = 0;

  BeforeRet: do {
    if ((a_33556994 <= b_33556995)) {
    Temporary1 = a_33556994;
    }
    else {
    Temporary1 = b_33556995;
    }
    
    result_33556996 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556996;

}
var ConstSet22 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet23 = setConstr(5);
var ConstSet24 = setConstr(5);
var ConstSet25 = setConstr(6);
var ConstSet26 = setConstr(6);
var ConstSet27 = setConstr(6);
var ConstSet28 = setConstr(5);
var ConstSet29 = setConstr(6);
var ConstSet30 = setConstr(6);
var ConstSet31 = setConstr(4, 0);
var ConstSet32 = setConstr(4, 0);
var ConstSet33 = setConstr(4);
var ConstSet34 = setConstr(6);
var ConstSet35 = setConstr(5);
var ConstSet36 = setConstr(5);
var ConstSet37 = setConstr(6);
var ConstSet38 = setConstr(6);
var ConstSet39 = setConstr(2);
var ConstSet40 = setConstr(2);
var ConstSet41 = setConstr(2);
var ConstSet42 = setConstr(6);

function genericReset(x_33557171, ti_33557172) {
  var result_33557173 = null;

    result_33557173 = null;
    switch (ti_33557172.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557131(ti_33557172)) {
              result_33557173 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557173 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557172.kind == 17)) {
      result_33557173 = {m_type: ti_33557172};
      }
      else {
        result_33557173 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557173 = [];
    
      break;
    case 4:
    case 16:
            result_33557173 = new Array(x_33557171.length);
      for (var i = 0; i < x_33557171.length; ++i) {
        result_33557173[i] = genericReset(x_33557171[i], ti_33557172.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557173;

}
var ConstSet43 = setConstr(5);

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet44 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet45 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet46 = setConstr(32, 9, 11, 13, 10, 12);
    var typesOffsets_1241513994 = new Int16Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 12, 26, 27, 28, 29, 30, 31, 32, 33, 34, 12, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 12, 62, 63, 64, 12, 12, 12, 12, 12, 65, 66, 67, 68, 69, 70, 71, 72, 12, 12, 12, 12, 12, 12, 12, 12, 73, 74, 75, 76, 77, 12, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 12, 91, 92, 93, 94, 95, 96, 97, 98, 98, 98, 12, 99, 99, 100, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 113, 114, 115, 112, 112, 112, 112, 112, 112, 112, 112, 112, 116, 117, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 16, 118, 99, 119, 120, 121, 122, 123, 124, 112, 112, 112, 112, 112, 112, 112, 125, 72, 126, 127, 128, 12, 129, 130, 131, 132, 133, 112, 112, 112, 112, 112, 134, 12, 135, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 136, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 137, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 112, 138, 139, 140, 141, 137, 142, 12, 12, 12, 12, 12, 12, 143, 144, 12, 12, 12, 12, 12, 12, 12, 145, 12, 146, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 147, 12, 12, 12, 12, 12, 12, 12, 148, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 149, 12, 150, 151, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 152, 12, 153, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 154, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 155, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 156, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 152, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 155, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 157, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 158, 12, 142, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 159, 160, 12, 161, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 162, 163, 12, 12, 12, 12, 164, 165, 166, 167, 168, 169, 170, 171, 172, 93, 12, 173, 174, 175, 12, 176, 177, 178, 12, 179, 180, 181, 98, 182, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 183, 184, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 185, 186, 187, 12, 188, 12, 189, 190, 191, 29, 192, 12, 12, 12, 12, 193, 27, 194, 195, 196, 197, 12, 198, 199, 200, 201, 202, 203, 204, 12, 205, 206, 207, 208, 209, 112, 112, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 112, 12, 12, 12, 12, 177, 223, 224, 112, 225, 226, 227, 228, 229, 112, 230, 231, 232, 233, 234, 235, 82, 236, 237, 112, 12, 238, 239, 240, 241, 112, 112, 112, 112, 242, 243, 112, 244, 245, 246, 247, 12, 248, 205, 249, 250, 251, 12, 252, 253, 112, 254, 255, 256, 257, 112, 112, 12, 258, 12, 259, 112, 112, 260, 261, 12, 262, 80, 263, 264, 265, 112, 112, 205, 112, 266, 267, 268, 269, 270, 271, 201, 272, 273, 80, 112, 112, 112, 112, 274, 275, 276, 112, 277, 278, 279, 112, 112, 112, 112, 280, 112, 112, 281, 282, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 189, 112, 283, 284, 12, 12, 12, 285, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 27, 286, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 287, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 12, 12, 12, 12, 12, 12, 12, 12, 265, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 12, 12, 12, 12, 12, 12, 12, 80, 288, 201, 289, 177, 290, 291, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 292, 293, 112, 12, 294, 295, 296, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 94, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 297, 238, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 298, 12, 12, 12, 12, 299, 300, 12, 12, 12, 12, 12, 301, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 302, 303, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 188, 265, 112, 112, 112, 112, 112, 112, 112, 304, 305, 112, 112, 306, 112, 307, 112, 308, 112, 112, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 112, 112, 112, 112, 112, 112, 112, 112, 325, 326, 327, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 328, 112, 112, 112, 329, 112, 112, 112, 330, 331, 112, 112, 112, 112, 332, 333, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 334, 12, 12, 12, 335, 336, 337, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 338, 339, 112, 340, 112, 112, 112, 341, 342, 343, 112, 112, 112, 112, 112, 112, 112, 112, 112, 344, 345, 346, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 347, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 348, 349, 12, 350, 159, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 136, 12, 351, 12, 12, 12, 12, 352, 353, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 354, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 355, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 147, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 356, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 357, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 80, 12, 12, 12, 214, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 358, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 359, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 12, 354, 12, 12, 12, 12, 12, 360, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 361, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 12, 12, 12, 362, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112]);
    var typesIndices_1241513995 = new Int8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 4, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 5, 0, 0, 0, 6, 5, 0, 7, 7, 7, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 5, 5, 3, 3, 5, 3, 5, 3, 3, 5, 3, 3, 3, 5, 5, 3, 3, 3, 3, 5, 3, 3, 5, 3, 3, 3, 5, 5, 5, 3, 3, 5, 3, 3, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 5, 3, 5, 3, 3, 5, 3, 3, 3, 5, 3, 5, 3, 3, 5, 5, 4, 3, 5, 5, 5, 4, 4, 4, 4, 3, 8, 5, 3, 8, 5, 3, 8, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 8, 5, 3, 5, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 3, 3, 5, 3, 3, 5, 5, 3, 5, 3, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5, 5, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 5, 3, 5, 4, 0, 3, 5, 0, 0, 5, 5, 5, 5, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 3, 0, 3, 0, 3, 3, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 3, 3, 3, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 3, 5, 0, 3, 5, 3, 3, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 0, 4, 4, 4, 4, 4, 4, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 4, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 0, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 4, 0, 4, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 0, 4, 4, 0, 0, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 4, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 4, 4, 0, 4, 0, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 0, 0, 4, 0, 0, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 4, 0, 4, 0, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 3, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 9, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 0, 0, 3, 3, 3, 3, 3, 3, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 0, 3, 0, 3, 0, 3, 0, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 5, 5, 5, 8, 8, 8, 8, 8, 8, 8, 8, 5, 5, 5, 5, 5, 0, 5, 5, 3, 3, 3, 3, 8, 0, 5, 0, 0, 0, 5, 5, 5, 0, 5, 5, 3, 3, 3, 3, 8, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 5, 3, 3, 3, 3, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 5, 5, 5, 0, 5, 5, 3, 3, 3, 3, 8, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 5, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 0, 5, 3, 3, 3, 5, 5, 3, 3, 3, 5, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 3, 0, 3, 3, 3, 3, 0, 5, 3, 3, 3, 3, 5, 4, 4, 4, 4, 5, 0, 0, 5, 5, 3, 3, 0, 0, 0, 0, 0, 3, 5, 5, 5, 5, 0, 0, 0, 0, 5, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 9, 9, 9, 3, 5, 9, 9, 9, 9, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 3, 3, 5, 5, 3, 5, 3, 5, 3, 5, 3, 3, 3, 3, 5, 3, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 0, 0, 0, 0, 0, 0, 3, 5, 3, 5, 4, 4, 4, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 0, 0, 0, 0, 0, 5, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 4, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 9, 9, 9, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 9, 4, 4, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 9, 9, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 4, 0, 0, 3, 5, 3, 5, 4, 3, 5, 3, 5, 5, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 3, 3, 3, 5, 3, 3, 3, 3, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 3, 3, 3, 5, 3, 5, 0, 0, 0, 0, 0, 3, 5, 0, 5, 0, 5, 3, 5, 3, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 3, 5, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 0, 0, 0, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 4, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 9, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 7, 7, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 0, 0, 0, 0, 4, 6, 6, 6, 6, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 0, 4, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 0, 0, 4, 4, 4, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 7, 7, 7, 7, 7, 7, 7, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 0, 3, 3, 0, 0, 3, 0, 0, 3, 3, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 0, 5, 0, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 0, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 5, 5, 5, 5, 5, 5, 3, 5, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 0, 4, 0, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 4, 0, 4, 0, 4, 0, 4, 4, 4, 0, 4, 4, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 4, 0, 4, 0, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 4, 4, 4, 0, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 4, 4, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 9, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
    var typesData_1241513996 = new Int16Array([0, 64, 129, 176, 128, 168, 2, 4, 160, 132, 180, 172]);
    var toLowerRanges_905970587 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_905970588 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
    var toUpperRanges_905970589 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_905970590 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var propsOffsets_1056964651 = new Int16Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 41, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 101, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 102, 41, 41, 41, 41, 41, 41, 41, 41, 103, 41, 41, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 117, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 120, 120, 121, 122, 123, 124, 125, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 41, 41, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 136, 169, 170, 136, 171, 172, 173, 174, 136, 175, 176, 177, 178, 179, 180, 136, 136, 181, 182, 183, 184, 136, 185, 136, 186, 41, 41, 41, 41, 41, 41, 41, 187, 188, 41, 189, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 190, 41, 41, 41, 41, 41, 41, 41, 41, 191, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 41, 41, 41, 41, 192, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 41, 41, 41, 41, 193, 194, 195, 196, 136, 136, 136, 136, 197, 198, 199, 200, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 201, 41, 41, 41, 41, 41, 41, 41, 41, 41, 202, 203, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 204, 41, 41, 205, 41, 41, 206, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 207, 208, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 209, 210, 78, 211, 212, 213, 214, 215, 216, 136, 217, 218, 219, 220, 221, 222, 223, 224, 78, 78, 78, 78, 225, 226, 136, 136, 136, 136, 136, 136, 136, 136, 227, 136, 228, 136, 229, 136, 136, 230, 136, 136, 136, 136, 136, 136, 136, 136, 136, 231, 232, 233, 234, 157, 157, 157, 157, 157, 235, 236, 237, 157, 238, 239, 157, 157, 240, 241, 242, 243, 244, 136, 72, 245, 72, 72, 72, 72, 72, 246, 247, 248, 249, 250, 72, 72, 251, 252, 72, 253, 136, 136, 136, 136, 136, 136, 136, 254, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 255, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 256, 41, 257, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 258, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 259, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 120, 120, 120, 120, 260, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 261, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 262, 263, 264, 265, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 263, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 254, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 266, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 266]);
    var propsIndices_1056964652 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 1, 4, 5, 5, 6, 7, 6, 5, 5, 8, 9, 5, 10, 11, 12, 11, 11, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 5, 14, 14, 14, 5, 5, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 8, 5, 9, 16, 17, 16, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 8, 14, 9, 14, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19, 5, 7, 7, 7, 7, 20, 5, 21, 20, 22, 23, 14, 24, 20, 21, 25, 26, 27, 27, 21, 28, 5, 5, 21, 27, 22, 29, 30, 30, 30, 5, 31, 31, 31, 31, 31, 31, 15, 31, 31, 31, 31, 31, 31, 31, 31, 31, 15, 31, 31, 31, 31, 31, 31, 14, 15, 31, 31, 31, 31, 31, 15, 18, 32, 32, 32, 32, 32, 32, 18, 32, 32, 32, 32, 32, 32, 32, 32, 32, 18, 32, 32, 32, 32, 32, 32, 14, 18, 32, 32, 32, 32, 32, 18, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 18, 33, 28, 31, 32, 31, 32, 18, 31, 32, 31, 32, 31, 32, 33, 28, 15, 18, 31, 32, 31, 32, 31, 32, 28, 15, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 31, 32, 31, 32, 31, 32, 28, 18, 15, 15, 18, 15, 18, 15, 15, 18, 15, 15, 15, 18, 18, 15, 15, 15, 15, 18, 15, 15, 18, 15, 15, 15, 18, 18, 18, 15, 15, 18, 15, 31, 32, 15, 18, 15, 18, 15, 15, 18, 15, 18, 18, 15, 18, 15, 31, 32, 15, 15, 15, 18, 15, 18, 15, 15, 18, 18, 34, 15, 18, 18, 18, 34, 34, 34, 34, 33, 35, 28, 33, 35, 28, 33, 35, 28, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 32, 33, 35, 28, 31, 32, 15, 15, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 15, 18, 15, 18, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 18, 18, 18, 18, 18, 18, 15, 15, 18, 15, 15, 18, 18, 15, 18, 15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 38, 38, 38, 38, 38, 38, 38, 16, 16, 16, 16, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 16, 16, 16, 16, 16, 16, 21, 21, 21, 21, 21, 21, 16, 16, 36, 36, 36, 36, 36, 16, 16, 16, 16, 16, 16, 16, 37, 16, 38, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 39, 39, 39, 39, 39, 40, 39, 39, 39, 39, 39, 39, 39, 40, 40, 39, 40, 39, 40, 39, 39, 41, 42, 42, 42, 42, 41, 43, 42, 42, 42, 42, 42, 44, 44, 45, 45, 45, 45, 46, 46, 42, 42, 42, 42, 45, 45, 42, 45, 45, 42, 42, 47, 47, 47, 47, 48, 42, 42, 42, 42, 40, 40, 40, 49, 49, 39, 49, 49, 50, 40, 42, 42, 42, 40, 40, 40, 42, 42, 51, 40, 40, 40, 42, 42, 42, 42, 40, 41, 42, 42, 40, 52, 53, 53, 52, 53, 53, 52, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 15, 18, 15, 18, 54, 16, 15, 18, 55, 55, 36, 18, 18, 18, 56, 15, 55, 55, 55, 55, 21, 57, 31, 56, 31, 31, 31, 55, 31, 55, 31, 31, 32, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 15, 15, 15, 15, 15, 15, 15, 31, 31, 32, 32, 32, 32, 32, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 32, 32, 32, 32, 32, 15, 28, 28, 33, 58, 58, 28, 28, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 28, 28, 28, 18, 33, 28, 14, 15, 18, 33, 15, 18, 18, 15, 15, 15, 31, 31, 15, 31, 15, 15, 15, 31, 15, 15, 15, 15, 31, 31, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 31, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 32, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 32, 32, 18, 32, 18, 18, 18, 32, 18, 18, 18, 18, 32, 32, 32, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 31, 32, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 59, 40, 40, 40, 40, 40, 60, 60, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 31, 32, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 31, 32, 31, 32, 15, 18, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 31, 32, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 38, 61, 61, 61, 61, 61, 61, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 28, 18, 61, 62, 55, 55, 20, 20, 7, 63, 42, 40, 40, 40, 40, 42, 40, 40, 40, 64, 42, 40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 40, 40, 42, 40, 40, 64, 65, 40, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 75, 76, 77, 78, 79, 80, 81, 82, 83, 81, 40, 42, 81, 74, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 84, 84, 84, 84, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 85, 85, 85, 85, 85, 85, 14, 14, 86, 6, 6, 87, 11, 88, 20, 20, 40, 40, 40, 40, 40, 40, 40, 40, 89, 90, 91, 88, 92, 88, 88, 88, 93, 93, 94, 94, 94, 94, 94, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 95, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 96, 97, 98, 89, 90, 91, 99, 100, 39, 39, 45, 42, 40, 40, 40, 40, 40, 42, 40, 40, 42, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 6, 102, 102, 88, 93, 93, 103, 93, 93, 93, 93, 104, 104, 104, 104, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 93, 94, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 88, 93, 40, 40, 40, 40, 40, 40, 40, 85, 20, 40, 40, 40, 40, 42, 40, 95, 95, 40, 40, 20, 42, 40, 40, 42, 93, 93, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 93, 93, 93, 105, 105, 93, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 106, 92, 93, 107, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 40, 42, 40, 40, 42, 40, 40, 42, 42, 42, 40, 42, 42, 40, 42, 40, 40, 40, 42, 40, 42, 40, 42, 40, 42, 40, 40, 106, 106, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 93, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 40, 40, 40, 40, 40, 40, 42, 40, 109, 109, 20, 5, 5, 5, 109, 63, 63, 42, 110, 110, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 40, 40, 40, 109, 40, 40, 40, 40, 40, 40, 40, 40, 40, 109, 40, 40, 40, 109, 40, 40, 40, 40, 40, 63, 63, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 42, 42, 42, 63, 63, 81, 63, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 106, 106, 106, 106, 106, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 111, 93, 93, 93, 93, 93, 93, 106, 85, 85, 106, 106, 106, 106, 106, 106, 40, 42, 42, 42, 40, 40, 40, 40, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 95, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 85, 42, 40, 40, 42, 40, 40, 42, 40, 40, 40, 42, 42, 42, 96, 97, 98, 40, 40, 40, 42, 40, 40, 42, 42, 40, 40, 40, 40, 40, 51, 51, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 34, 34, 34, 34, 34, 34, 113, 34, 34, 113, 34, 34, 34, 34, 34, 51, 112, 114, 34, 112, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 112, 112, 112, 112, 115, 112, 112, 34, 40, 42, 40, 40, 51, 51, 51, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 51, 51, 61, 61, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 112, 112, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 55, 55, 34, 34, 34, 34, 55, 55, 118, 34, 119, 112, 112, 51, 51, 51, 51, 55, 55, 112, 112, 55, 55, 120, 120, 115, 34, 55, 55, 55, 55, 55, 55, 55, 55, 119, 55, 55, 55, 55, 116, 116, 55, 116, 34, 34, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 7, 7, 121, 121, 121, 121, 121, 121, 59, 7, 34, 61, 40, 55, 55, 51, 51, 112, 55, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 116, 55, 34, 116, 55, 34, 34, 55, 55, 118, 55, 112, 112, 112, 51, 51, 55, 55, 55, 55, 51, 51, 55, 55, 51, 51, 115, 55, 55, 55, 51, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 34, 55, 116, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 51, 51, 34, 34, 34, 51, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 112, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 55, 55, 118, 34, 112, 112, 112, 51, 51, 51, 51, 51, 55, 51, 51, 112, 55, 112, 112, 115, 55, 55, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 7, 55, 55, 55, 55, 55, 55, 55, 34, 51, 51, 51, 51, 51, 51, 55, 51, 112, 112, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 55, 55, 118, 34, 119, 51, 112, 51, 51, 51, 51, 55, 55, 112, 120, 55, 55, 120, 120, 115, 55, 55, 55, 55, 55, 55, 55, 51, 122, 119, 55, 55, 55, 55, 116, 116, 55, 34, 34, 34, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 59, 34, 121, 121, 121, 121, 121, 121, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 34, 55, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 55, 34, 34, 113, 34, 55, 55, 55, 34, 34, 55, 34, 55, 34, 34, 55, 55, 55, 34, 34, 55, 55, 55, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 119, 112, 51, 112, 112, 55, 55, 55, 112, 112, 112, 55, 120, 120, 120, 115, 55, 55, 34, 55, 55, 55, 55, 55, 55, 119, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 121, 121, 20, 20, 20, 20, 20, 20, 7, 20, 55, 55, 55, 55, 55, 51, 112, 112, 112, 51, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 118, 34, 51, 51, 51, 112, 112, 112, 112, 55, 51, 51, 123, 55, 51, 51, 51, 115, 55, 55, 55, 55, 55, 55, 55, 124, 125, 55, 34, 34, 34, 55, 55, 34, 55, 55, 34, 34, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 55, 61, 126, 126, 126, 126, 126, 126, 126, 59, 34, 51, 112, 112, 61, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 55, 55, 118, 34, 112, 127, 120, 112, 119, 112, 112, 55, 127, 120, 120, 55, 120, 120, 51, 115, 55, 55, 55, 55, 55, 55, 55, 119, 119, 55, 55, 55, 55, 55, 55, 34, 34, 55, 34, 34, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 112, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 115, 115, 34, 119, 112, 112, 51, 51, 51, 51, 55, 112, 112, 112, 55, 120, 120, 120, 115, 34, 59, 55, 55, 55, 55, 34, 34, 34, 119, 121, 121, 121, 121, 121, 121, 121, 34, 34, 34, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 121, 121, 121, 121, 121, 121, 121, 121, 59, 34, 34, 34, 34, 34, 34, 55, 51, 112, 112, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 128, 55, 55, 55, 55, 119, 112, 112, 51, 51, 51, 55, 51, 55, 112, 112, 120, 112, 120, 120, 120, 119, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 112, 112, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 34, 22, 51, 51, 51, 51, 129, 129, 115, 55, 55, 55, 55, 7, 34, 34, 34, 34, 34, 34, 38, 51, 130, 130, 130, 130, 51, 51, 51, 61, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 55, 34, 55, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 34, 22, 51, 51, 51, 51, 131, 131, 115, 51, 51, 34, 55, 55, 34, 34, 34, 34, 34, 55, 38, 55, 132, 132, 132, 132, 51, 51, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 22, 22, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 59, 59, 59, 61, 61, 61, 61, 61, 61, 61, 61, 133, 61, 61, 61, 61, 61, 61, 59, 61, 59, 59, 59, 42, 42, 59, 59, 59, 59, 59, 59, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 59, 42, 59, 42, 59, 134, 8, 9, 8, 9, 112, 112, 34, 34, 34, 116, 34, 34, 34, 34, 55, 34, 34, 34, 34, 116, 34, 34, 34, 34, 116, 34, 34, 34, 34, 116, 34, 34, 34, 34, 116, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 116, 34, 34, 34, 55, 55, 55, 55, 135, 136, 137, 138, 137, 137, 139, 137, 139, 136, 136, 136, 136, 51, 112, 136, 137, 40, 40, 115, 61, 40, 40, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 137, 51, 51, 51, 51, 55, 51, 51, 51, 51, 137, 51, 51, 51, 51, 137, 51, 51, 51, 51, 137, 51, 51, 51, 51, 137, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 137, 51, 51, 51, 55, 59, 59, 59, 59, 59, 59, 59, 59, 42, 59, 59, 59, 59, 59, 59, 55, 59, 59, 61, 61, 61, 61, 61, 59, 59, 59, 59, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 34, 34, 34, 112, 112, 51, 122, 51, 51, 112, 51, 51, 51, 51, 51, 118, 112, 115, 115, 112, 112, 51, 51, 34, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 61, 61, 61, 61, 61, 34, 34, 34, 34, 34, 34, 112, 112, 51, 51, 34, 34, 34, 34, 51, 51, 51, 34, 112, 112, 112, 34, 34, 112, 112, 112, 112, 112, 112, 112, 34, 34, 34, 51, 51, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 112, 112, 51, 51, 112, 112, 112, 112, 112, 112, 42, 34, 112, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 112, 112, 112, 51, 59, 59, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 15, 55, 55, 55, 55, 55, 15, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 61, 36, 18, 18, 18, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 40, 40, 40, 61, 61, 61, 61, 61, 61, 61, 61, 61, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 18, 18, 18, 18, 18, 18, 55, 55, 62, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 59, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 4, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 8, 9, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 61, 61, 61, 141, 141, 141, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 115, 142, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 142, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 55, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 112, 51, 51, 51, 51, 51, 51, 51, 112, 112, 112, 112, 112, 112, 112, 112, 51, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 51, 115, 51, 61, 61, 61, 38, 61, 61, 61, 7, 34, 40, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 55, 55, 55, 55, 55, 55, 5, 5, 5, 5, 5, 5, 62, 5, 5, 5, 5, 51, 51, 51, 24, 51, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 65, 34, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 51, 51, 51, 112, 112, 112, 112, 51, 51, 112, 112, 112, 55, 55, 55, 55, 112, 112, 51, 112, 112, 112, 112, 112, 112, 64, 40, 42, 55, 55, 55, 55, 20, 55, 55, 55, 5, 5, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 42, 112, 112, 51, 55, 55, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 51, 112, 51, 51, 51, 51, 51, 51, 51, 55, 115, 112, 51, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 112, 112, 112, 112, 112, 112, 51, 51, 40, 40, 40, 40, 40, 40, 40, 40, 55, 55, 42, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 61, 61, 61, 61, 61, 61, 61, 38, 61, 61, 61, 61, 61, 61, 55, 55, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 40, 40, 42, 60, 42, 42, 40, 40, 42, 42, 40, 40, 40, 40, 40, 42, 40, 40, 40, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 112, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 34, 34, 113, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 119, 51, 51, 51, 51, 51, 120, 51, 120, 112, 112, 120, 120, 51, 120, 142, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 61, 61, 61, 61, 61, 61, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 40, 42, 40, 40, 40, 40, 40, 40, 40, 59, 59, 59, 59, 59, 59, 59, 59, 59, 61, 61, 55, 51, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 51, 51, 51, 51, 112, 112, 51, 51, 142, 115, 51, 51, 34, 34, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 112, 51, 51, 112, 112, 112, 51, 112, 51, 51, 51, 142, 142, 55, 55, 55, 55, 55, 55, 55, 55, 61, 61, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 112, 112, 112, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 112, 112, 51, 118, 55, 55, 55, 61, 61, 61, 61, 61, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 34, 34, 34, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 38, 38, 38, 38, 38, 61, 61, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 15, 15, 15, 61, 61, 61, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 40, 40, 40, 61, 47, 42, 42, 42, 42, 42, 40, 40, 42, 42, 42, 42, 40, 112, 47, 47, 47, 47, 47, 47, 47, 34, 34, 34, 34, 42, 34, 34, 34, 34, 34, 34, 40, 34, 34, 112, 40, 40, 34, 55, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 38, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 40, 40, 42, 40, 40, 40, 40, 40, 40, 40, 42, 40, 40, 53, 143, 42, 44, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 65, 65, 42, 144, 40, 52, 42, 40, 42, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 32, 32, 32, 32, 28, 145, 18, 18, 15, 18, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 31, 32, 15, 18, 15, 18, 15, 18, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 55, 55, 31, 31, 31, 31, 31, 31, 55, 55, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 55, 55, 31, 31, 31, 31, 31, 31, 55, 55, 32, 32, 32, 32, 32, 32, 32, 32, 55, 31, 55, 31, 55, 31, 55, 31, 32, 32, 32, 32, 32, 32, 32, 32, 31, 31, 31, 31, 31, 31, 31, 31, 32, 146, 32, 146, 32, 146, 32, 146, 32, 146, 32, 146, 32, 146, 55, 55, 32, 32, 32, 32, 32, 32, 32, 32, 147, 147, 147, 147, 147, 147, 147, 147, 32, 32, 32, 32, 32, 32, 32, 32, 147, 147, 147, 147, 147, 147, 147, 147, 32, 32, 32, 32, 32, 32, 32, 32, 147, 147, 147, 147, 147, 147, 147, 147, 32, 32, 32, 32, 32, 55, 32, 32, 31, 31, 31, 148, 147, 21, 146, 21, 21, 57, 32, 32, 32, 55, 32, 32, 31, 148, 31, 148, 147, 57, 57, 57, 32, 32, 32, 146, 55, 55, 32, 32, 31, 31, 31, 148, 55, 57, 57, 57, 32, 32, 32, 146, 32, 32, 32, 32, 31, 31, 31, 148, 31, 57, 149, 149, 55, 55, 32, 32, 32, 55, 32, 32, 31, 148, 31, 148, 147, 149, 21, 55, 150, 150, 151, 151, 151, 151, 151, 151, 151, 151, 151, 24, 24, 24, 152, 153, 62, 154, 62, 62, 62, 62, 5, 155, 23, 29, 8, 23, 23, 29, 8, 23, 5, 5, 5, 5, 155, 155, 155, 5, 156, 157, 158, 159, 160, 161, 162, 19, 6, 6, 6, 163, 163, 5, 155, 155, 5, 23, 29, 5, 155, 5, 155, 17, 17, 5, 5, 5, 164, 8, 9, 155, 155, 155, 5, 5, 5, 5, 5, 5, 5, 5, 14, 5, 17, 5, 5, 155, 5, 5, 5, 5, 5, 5, 5, 151, 24, 24, 24, 24, 24, 165, 166, 167, 168, 169, 24, 24, 24, 24, 24, 24, 27, 36, 55, 55, 27, 27, 27, 27, 27, 27, 170, 170, 171, 172, 173, 36, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 170, 170, 171, 172, 173, 55, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 55, 55, 55, 7, 7, 7, 7, 7, 7, 7, 7, 174, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 40, 40, 47, 47, 40, 40, 40, 40, 47, 47, 47, 40, 40, 60, 60, 60, 60, 40, 60, 60, 60, 47, 47, 40, 42, 40, 47, 47, 42, 42, 42, 42, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 176, 176, 33, 176, 20, 176, 176, 33, 20, 176, 28, 33, 33, 33, 28, 28, 33, 33, 33, 28, 20, 33, 176, 20, 14, 33, 33, 33, 33, 33, 20, 20, 176, 176, 176, 20, 33, 20, 148, 20, 33, 20, 148, 148, 33, 33, 25, 28, 33, 33, 15, 33, 28, 22, 22, 22, 22, 28, 20, 176, 28, 28, 33, 33, 171, 14, 14, 14, 14, 33, 28, 28, 28, 28, 20, 14, 20, 20, 18, 59, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 141, 141, 141, 15, 18, 141, 141, 141, 141, 30, 20, 20, 55, 55, 55, 55, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 178, 178, 20, 20, 20, 20, 14, 20, 20, 14, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 178, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 179, 178, 178, 20, 20, 14, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 14, 14, 14, 14, 178, 14, 14, 178, 14, 14, 14, 14, 14, 10, 26, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 14, 178, 14, 14, 14, 14, 14, 171, 171, 14, 171, 171, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 14, 14, 178, 14, 14, 178, 14, 178, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 14, 178, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 178, 178, 178, 178, 14, 14, 178, 178, 14, 14, 178, 178, 14, 14, 14, 14, 14, 14, 178, 178, 14, 14, 178, 178, 14, 14, 178, 178, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 178, 178, 178, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 178, 178, 178, 178, 14, 14, 14, 14, 14, 14, 178, 178, 178, 178, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 8, 9, 8, 9, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 20, 20, 20, 20, 20, 20, 20, 180, 181, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 59, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 30, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 59, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 8, 9, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 171, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 171, 171, 171, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 183, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 20, 20, 14, 14, 14, 14, 14, 14, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 15, 15, 18, 18, 15, 18, 15, 18, 15, 18, 15, 15, 15, 15, 18, 15, 18, 18, 15, 18, 18, 18, 18, 18, 18, 36, 36, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 20, 20, 20, 20, 20, 20, 15, 18, 15, 18, 40, 40, 40, 15, 18, 55, 55, 55, 55, 55, 5, 5, 5, 5, 126, 5, 5, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 18, 55, 55, 55, 55, 55, 18, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 36, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 115, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 5, 5, 23, 29, 23, 29, 5, 5, 5, 23, 29, 5, 23, 29, 5, 5, 5, 5, 5, 5, 5, 5, 5, 62, 5, 5, 62, 5, 23, 29, 5, 5, 23, 29, 8, 9, 8, 9, 8, 9, 8, 9, 5, 5, 5, 5, 5, 37, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 62, 62, 5, 5, 5, 5, 62, 5, 8, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 20, 20, 5, 5, 5, 8, 9, 8, 9, 8, 9, 8, 9, 62, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 176, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 176, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 151, 5, 5, 5, 20, 38, 34, 141, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 20, 20, 8, 9, 8, 9, 8, 9, 8, 9, 62, 8, 9, 9, 20, 141, 141, 141, 141, 141, 141, 141, 141, 141, 144, 65, 41, 64, 184, 184, 62, 38, 38, 38, 38, 38, 176, 20, 177, 177, 177, 38, 34, 5, 20, 20, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 34, 113, 34, 113, 34, 113, 34, 34, 34, 34, 34, 34, 113, 113, 34, 113, 113, 34, 113, 113, 34, 113, 113, 34, 113, 113, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 34, 55, 55, 185, 185, 21, 21, 38, 186, 22, 62, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 113, 34, 34, 113, 34, 113, 34, 113, 34, 34, 34, 34, 34, 34, 113, 113, 34, 113, 113, 34, 113, 113, 34, 113, 113, 34, 113, 113, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 34, 113, 113, 113, 113, 5, 38, 38, 186, 22, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 55, 59, 59, 187, 187, 187, 187, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 176, 176, 55, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 121, 121, 121, 121, 121, 121, 121, 121, 176, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 176, 176, 176, 59, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 176, 176, 176, 176, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 176, 176, 176, 176, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 176, 176, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 176, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 38, 38, 38, 38, 38, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 5, 5, 5, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 34, 40, 60, 60, 60, 5, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 5, 37, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 36, 36, 40, 40, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 40, 40, 61, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 37, 37, 37, 37, 37, 37, 37, 37, 37, 16, 16, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 18, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 36, 18, 18, 18, 18, 18, 18, 18, 18, 15, 18, 15, 18, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 37, 188, 188, 15, 18, 15, 18, 34, 15, 18, 15, 18, 18, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 15, 15, 15, 15, 18, 15, 15, 15, 15, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 18, 15, 15, 15, 15, 18, 15, 18, 55, 55, 55, 55, 55, 15, 18, 55, 18, 55, 18, 15, 18, 15, 18, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 36, 36, 36, 15, 18, 34, 36, 36, 18, 34, 34, 34, 34, 34, 34, 34, 51, 34, 34, 34, 115, 34, 34, 34, 34, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 51, 51, 112, 20, 20, 20, 20, 115, 55, 55, 55, 121, 121, 121, 121, 121, 121, 59, 59, 7, 25, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 5, 5, 5, 5, 55, 55, 55, 55, 55, 55, 55, 55, 112, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 115, 51, 55, 55, 55, 55, 55, 55, 55, 55, 61, 61, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 34, 34, 34, 34, 34, 34, 61, 61, 61, 34, 61, 34, 34, 51, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 42, 42, 42, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 112, 142, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 51, 51, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 112, 112, 51, 51, 51, 51, 112, 112, 51, 51, 112, 112, 142, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 55, 38, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 61, 61, 34, 34, 34, 34, 34, 51, 38, 34, 34, 34, 34, 34, 34, 34, 34, 34, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 112, 112, 51, 51, 112, 112, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 51, 34, 34, 34, 34, 34, 34, 34, 34, 51, 112, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 61, 61, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 38, 34, 34, 34, 34, 34, 34, 59, 59, 59, 34, 112, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 34, 40, 40, 42, 34, 34, 40, 40, 34, 34, 34, 34, 34, 40, 40, 34, 40, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 38, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 51, 51, 112, 112, 61, 61, 34, 38, 38, 112, 115, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 188, 36, 36, 36, 36, 18, 18, 18, 18, 18, 18, 18, 18, 18, 36, 16, 16, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 51, 112, 112, 51, 112, 112, 61, 112, 115, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 34, 116, 34, 116, 34, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 34, 116, 34, 116, 34, 34, 116, 116, 34, 34, 34, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 28, 28, 28, 28, 28, 28, 28, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 28, 28, 28, 28, 28, 55, 55, 55, 55, 55, 191, 192, 191, 193, 193, 193, 193, 193, 193, 193, 193, 193, 170, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 191, 63, 191, 191, 191, 191, 191, 63, 191, 63, 191, 191, 63, 191, 191, 63, 191, 191, 191, 191, 191, 191, 191, 191, 191, 193, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 9, 8, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 106, 106, 106, 106, 106, 106, 20, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 194, 20, 20, 20, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 155, 155, 155, 155, 155, 155, 155, 172, 173, 155, 55, 55, 55, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 42, 42, 42, 42, 42, 42, 42, 40, 40, 155, 154, 154, 195, 195, 172, 173, 172, 173, 172, 173, 172, 173, 172, 173, 172, 173, 172, 173, 172, 173, 5, 5, 172, 173, 155, 155, 155, 155, 195, 195, 195, 196, 155, 196, 55, 155, 196, 155, 155, 154, 172, 173, 172, 173, 172, 173, 163, 155, 155, 170, 197, 171, 171, 171, 55, 155, 174, 163, 155, 55, 55, 55, 55, 104, 104, 104, 93, 104, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 106, 24, 55, 155, 155, 163, 174, 163, 155, 155, 172, 173, 155, 170, 196, 197, 196, 196, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 196, 155, 171, 171, 171, 155, 155, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 172, 155, 173, 21, 195, 21, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 172, 171, 173, 171, 172, 173, 155, 172, 173, 155, 155, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 36, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 36, 36, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 55, 55, 55, 22, 22, 22, 22, 22, 22, 55, 55, 22, 22, 22, 22, 22, 22, 55, 55, 22, 22, 22, 22, 22, 22, 55, 55, 22, 22, 22, 55, 55, 55, 174, 174, 171, 21, 176, 174, 174, 55, 176, 171, 171, 171, 171, 176, 176, 55, 165, 165, 165, 165, 165, 165, 165, 165, 165, 199, 199, 199, 20, 20, 165, 165, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 61, 5, 61, 55, 55, 55, 55, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 126, 126, 126, 126, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 126, 126, 20, 59, 59, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 42, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 42, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 121, 121, 121, 121, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 141, 34, 34, 34, 34, 34, 34, 34, 34, 141, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 40, 40, 40, 40, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 61, 141, 141, 141, 141, 141, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 55, 15, 15, 15, 15, 15, 15, 15, 55, 15, 15, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 18, 18, 18, 18, 18, 18, 18, 55, 18, 18, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 38, 36, 36, 36, 36, 36, 55, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 55, 36, 36, 36, 36, 36, 36, 36, 36, 36, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 84, 84, 84, 84, 84, 84, 63, 63, 84, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 84, 84, 63, 63, 63, 84, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 81, 202, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 203, 203, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 84, 84, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 202, 202, 202, 63, 63, 63, 5, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 202, 202, 84, 84, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 84, 51, 51, 51, 63, 51, 51, 63, 63, 63, 63, 63, 51, 42, 51, 40, 84, 84, 84, 84, 63, 84, 84, 84, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 40, 47, 42, 63, 63, 63, 63, 115, 202, 202, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 81, 81, 81, 81, 81, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 81, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 203, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 42, 63, 63, 63, 63, 202, 202, 202, 202, 202, 81, 81, 81, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 5, 5, 5, 5, 5, 5, 5, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 63, 63, 63, 63, 63, 63, 63, 202, 202, 202, 202, 202, 202, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 40, 40, 40, 40, 106, 106, 106, 106, 106, 106, 106, 106, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 106, 106, 106, 106, 106, 106, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 206, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 40, 40, 79, 63, 63, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 202, 202, 202, 202, 202, 202, 202, 84, 63, 63, 63, 63, 63, 63, 63, 63, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 42, 42, 40, 40, 40, 42, 40, 42, 42, 42, 42, 207, 207, 207, 207, 88, 88, 88, 88, 88, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 40, 42, 40, 42, 81, 81, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 202, 202, 202, 202, 202, 202, 202, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 63, 63, 63, 63, 63, 63, 63, 112, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 115, 61, 61, 61, 61, 61, 61, 61, 55, 55, 55, 55, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 115, 34, 34, 51, 51, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 115, 51, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 113, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 113, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 51, 112, 112, 115, 114, 61, 61, 152, 61, 61, 61, 61, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 152, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 40, 40, 40, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 122, 51, 51, 51, 51, 112, 51, 123, 123, 51, 51, 51, 115, 115, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 61, 61, 61, 34, 112, 112, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 118, 61, 61, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 112, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 51, 112, 142, 34, 34, 34, 34, 61, 61, 61, 61, 51, 118, 51, 51, 61, 112, 51, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 34, 61, 34, 61, 61, 61, 55, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 112, 112, 51, 142, 118, 51, 61, 61, 61, 61, 61, 61, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 55, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 61, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 112, 112, 112, 51, 51, 51, 51, 51, 51, 118, 115, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 51, 51, 112, 112, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 55, 118, 118, 34, 119, 112, 51, 112, 112, 112, 112, 55, 55, 112, 112, 55, 55, 120, 120, 142, 55, 55, 34, 55, 55, 55, 55, 55, 55, 119, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 112, 112, 55, 55, 40, 40, 40, 40, 40, 40, 40, 55, 55, 55, 40, 40, 40, 40, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 112, 112, 115, 51, 51, 112, 118, 34, 34, 34, 34, 61, 61, 61, 61, 61, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 61, 61, 55, 61, 40, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 119, 112, 112, 51, 51, 51, 51, 51, 51, 112, 122, 120, 120, 119, 120, 51, 51, 112, 115, 118, 34, 34, 61, 34, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 119, 112, 112, 51, 51, 51, 51, 55, 55, 112, 112, 120, 120, 51, 51, 112, 115, 118, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 34, 34, 34, 34, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 112, 112, 51, 112, 115, 51, 61, 61, 61, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 112, 51, 112, 112, 51, 51, 51, 51, 51, 51, 142, 118, 34, 61, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 51, 51, 51, 112, 112, 51, 51, 51, 51, 112, 51, 51, 51, 51, 115, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 121, 61, 61, 61, 59, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 51, 51, 51, 51, 51, 51, 112, 115, 118, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 119, 112, 112, 112, 112, 112, 55, 112, 120, 55, 55, 51, 51, 142, 115, 34, 112, 34, 112, 118, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 51, 51, 51, 51, 55, 55, 51, 51, 112, 112, 112, 112, 115, 34, 61, 34, 112, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 51, 51, 51, 51, 51, 51, 127, 127, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 115, 51, 51, 51, 51, 112, 34, 51, 51, 51, 51, 61, 61, 61, 61, 61, 61, 61, 61, 115, 55, 55, 55, 55, 55, 55, 55, 55, 34, 51, 51, 51, 51, 51, 51, 112, 112, 51, 51, 51, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 112, 51, 115, 61, 61, 61, 34, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 51, 51, 51, 51, 51, 51, 51, 55, 51, 51, 51, 51, 51, 51, 112, 208, 34, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 55, 112, 51, 51, 51, 51, 51, 51, 51, 112, 51, 51, 112, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 51, 51, 51, 51, 55, 55, 55, 51, 55, 51, 51, 55, 51, 51, 51, 118, 51, 115, 115, 34, 51, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 112, 112, 112, 112, 112, 55, 51, 51, 55, 112, 112, 51, 112, 115, 34, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 51, 51, 112, 112, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 20, 20, 20, 20, 20, 20, 20, 20, 7, 7, 7, 7, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 55, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 152, 152, 152, 152, 152, 152, 152, 152, 152, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 61, 61, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 47, 47, 47, 47, 47, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 40, 40, 40, 40, 40, 40, 61, 61, 61, 61, 61, 59, 59, 59, 59, 38, 38, 38, 38, 61, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 121, 121, 121, 121, 121, 121, 121, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 51, 34, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 38, 38, 5, 38, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 209, 209, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 38, 38, 38, 38, 55, 38, 38, 38, 38, 38, 38, 38, 55, 38, 38, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 59, 51, 47, 61, 24, 24, 24, 24, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 55, 55, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 210, 210, 210, 210, 210, 210, 210, 211, 211, 47, 47, 47, 59, 59, 59, 212, 211, 211, 211, 211, 211, 24, 24, 24, 24, 24, 24, 24, 24, 42, 42, 42, 42, 42, 42, 42, 42, 59, 59, 40, 40, 40, 40, 40, 42, 42, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 40, 40, 40, 40, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 210, 210, 210, 210, 210, 210, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 40, 40, 40, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 55, 55, 55, 55, 55, 55, 55, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 55, 33, 33, 55, 55, 33, 55, 55, 33, 33, 55, 55, 33, 33, 33, 33, 55, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 55, 28, 55, 28, 28, 28, 28, 28, 28, 28, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 55, 33, 33, 33, 33, 55, 55, 33, 33, 33, 33, 33, 33, 33, 33, 55, 33, 33, 33, 33, 33, 33, 33, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 55, 33, 33, 33, 33, 55, 33, 33, 33, 33, 33, 55, 33, 55, 55, 55, 33, 33, 33, 33, 33, 33, 33, 55, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 55, 55, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 171, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 171, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 171, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 171, 28, 28, 28, 28, 28, 28, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 213, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 171, 28, 28, 28, 28, 28, 28, 33, 28, 55, 55, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 59, 59, 59, 59, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 59, 59, 59, 59, 59, 59, 59, 59, 51, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 51, 59, 59, 61, 61, 61, 61, 61, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 51, 51, 51, 51, 51, 55, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 34, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 55, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 55, 55, 40, 40, 40, 40, 40, 40, 40, 55, 40, 40, 55, 40, 40, 40, 40, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 40, 40, 40, 40, 40, 40, 40, 38, 38, 38, 38, 38, 38, 38, 55, 55, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 34, 59, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 40, 40, 40, 40, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 55, 55, 55, 55, 55, 7, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 55, 34, 34, 34, 34, 55, 34, 34, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 63, 63, 202, 202, 202, 202, 202, 202, 202, 202, 202, 42, 42, 42, 42, 42, 42, 42, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 205, 40, 40, 40, 40, 40, 40, 118, 109, 63, 63, 63, 63, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 63, 63, 63, 63, 81, 81, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 106, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 105, 207, 207, 207, 87, 207, 207, 207, 207, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 106, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 105, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 104, 104, 104, 104, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 104, 104, 106, 104, 106, 106, 104, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 104, 104, 104, 104, 106, 104, 106, 104, 106, 106, 106, 106, 106, 106, 104, 106, 106, 106, 106, 104, 106, 104, 106, 104, 106, 104, 104, 104, 106, 104, 104, 106, 104, 106, 106, 104, 106, 104, 106, 104, 106, 104, 106, 104, 106, 104, 104, 106, 104, 106, 106, 104, 104, 104, 104, 106, 104, 104, 104, 104, 104, 104, 104, 106, 104, 104, 104, 104, 106, 104, 104, 104, 104, 106, 104, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 106, 106, 106, 106, 104, 104, 104, 106, 104, 104, 104, 104, 104, 106, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 14, 14, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 126, 126, 20, 20, 20, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 20, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 176, 176, 176, 20, 20, 20, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 182, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 182, 182, 182, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 55, 55, 55, 55, 182, 182, 182, 182, 182, 182, 182, 182, 182, 55, 55, 55, 55, 55, 55, 55, 182, 182, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 165, 165, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 165, 24, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 165, 165]);
    var propsData_1056964653 = [new Int32Array([16384, 0, 14, 0]), new Int32Array([16384, 0, 16, 0]), new Int32Array([16384, 0, 15, 0]), new Int32Array([16384, 0, 17, 0]), new Int32Array([2048, 0, 17, 0]), new Int32Array([33554432, 0, 18, 0]), new Int32Array([33554432, 0, 10, 0]), new Int32Array([134217728, 0, 10, 0]), new Int32Array([2097152, 0, 18, 0]), new Int32Array([4194304, 0, 18, 0]), new Int32Array([67108864, 0, 9, 0]), new Int32Array([33554432, 0, 12, 0]), new Int32Array([1048576, 0, 9, 0]), new Int32Array([256, 0, 8, 0]), new Int32Array([67108864, 0, 18, 0]), new Int32Array([4, 0, 0, 0]), new Int32Array([268435456, 0, 18, 0]), new Int32Array([524288, 0, 18, 0]), new Int32Array([8, 0, 0, 0]), new Int32Array([2048, 0, 12, 36]), new Int32Array([536870912, 0, 18, 0]), new Int32Array([268435456, 0, 18, 36]), new Int32Array([2, 0, 0, 36]), new Int32Array([8388608, 0, 18, 0]), new Int32Array([32768, 0, 14, 0]), new Int32Array([536870912, 0, 10, 0]), new Int32Array([67108864, 0, 10, 0]), new Int32Array([1024, 0, 8, 36]), new Int32Array([8, 0, 0, 36]), new Int32Array([16777216, 0, 18, 0]), new Int32Array([1024, 0, 18, 36]), new Int32Array([4, 0, 0, 48]), new Int32Array([8, 0, 0, 48]), new Int32Array([4, 0, 0, 36]), new Int32Array([2, 0, 0, 0]), new Int32Array([16, 0, 0, 36]), new Int32Array([1, 0, 0, 36]), new Int32Array([1, 0, 18, 0]), new Int32Array([1, 0, 0, 0]), new Int32Array([32, 230, 13, 10]), new Int32Array([32, 230, 13, 0]), new Int32Array([32, 232, 13, 0]), new Int32Array([32, 220, 13, 0]), new Int32Array([32, 216, 13, 10]), new Int32Array([32, 202, 13, 0]), new Int32Array([32, 220, 13, 10]), new Int32Array([32, 202, 13, 10]), new Int32Array([32, 1, 13, 0]), new Int32Array([32, 1, 13, 10]), new Int32Array([32, 230, 13, 53]), new Int32Array([32, 240, 13, 10]), new Int32Array([32, 0, 13, 0]), new Int32Array([32, 233, 13, 0]), new Int32Array([32, 234, 13, 0]), new Int32Array([1, 0, 18, 53]), new Int32Array([262144, 0, 0, 0]), new Int32Array([33554432, 0, 18, 53]), new Int32Array([268435456, 0, 18, 52]), new Int32Array([4, 0, 0, 52]), new Int32Array([536870912, 0, 0, 0]), new Int32Array([128, 0, 13, 0]), new Int32Array([33554432, 0, 0, 0]), new Int32Array([1048576, 0, 18, 0]), new Int32Array([262144, 0, 3, 0]), new Int32Array([32, 222, 13, 0]), new Int32Array([32, 228, 13, 0]), new Int32Array([32, 10, 13, 0]), new Int32Array([32, 11, 13, 0]), new Int32Array([32, 12, 13, 0]), new Int32Array([32, 13, 13, 0]), new Int32Array([32, 14, 13, 0]), new Int32Array([32, 15, 13, 0]), new Int32Array([32, 16, 13, 0]), new Int32Array([32, 17, 13, 0]), new Int32Array([32, 18, 13, 0]), new Int32Array([32, 19, 13, 0]), new Int32Array([32, 20, 13, 0]), new Int32Array([32, 21, 13, 0]), new Int32Array([32, 22, 13, 0]), new Int32Array([1048576, 0, 3, 0]), new Int32Array([32, 23, 13, 0]), new Int32Array([33554432, 0, 3, 0]), new Int32Array([32, 24, 13, 0]), new Int32Array([32, 25, 13, 0]), new Int32Array([2, 0, 3, 0]), new Int32Array([32768, 0, 11, 0]), new Int32Array([67108864, 0, 4, 0]), new Int32Array([134217728, 0, 4, 0]), new Int32Array([33554432, 0, 4, 0]), new Int32Array([32, 30, 13, 0]), new Int32Array([32, 31, 13, 0]), new Int32Array([32, 32, 13, 0]), new Int32Array([32768, 0, 4, 0]), new Int32Array([2, 0, 4, 0]), new Int32Array([2, 0, 4, 48]), new Int32Array([1, 0, 4, 0]), new Int32Array([32, 27, 13, 0]), new Int32Array([32, 28, 13, 0]), new Int32Array([32, 29, 13, 0]), new Int32Array([32, 33, 13, 0]), new Int32Array([32, 34, 13, 0]), new Int32Array([256, 0, 11, 0]), new Int32Array([33554432, 0, 11, 0]), new Int32Array([32, 35, 13, 0]), new Int32Array([2, 0, 4, 36]), new Int32Array([536870912, 0, 4, 0]), new Int32Array([262144, 0, 4, 0]), new Int32Array([32, 36, 13, 0]), new Int32Array([256, 0, 3, 0]), new Int32Array([1, 0, 3, 0]), new Int32Array([134217728, 0, 3, 0]), new Int32Array([268435456, 0, 4, 0]), new Int32Array([64, 0, 0, 0]), new Int32Array([2, 0, 0, 48]), new Int32Array([32, 7, 13, 10]), new Int32Array([32, 9, 13, 0]), new Int32Array([2, 0, 0, 53]), new Int32Array([256, 0, 0, 0]), new Int32Array([32, 7, 13, 0]), new Int32Array([64, 0, 0, 10]), new Int32Array([64, 0, 0, 48]), new Int32Array([1024, 0, 0, 0]), new Int32Array([32, 0, 13, 10]), new Int32Array([32, 0, 13, 48]), new Int32Array([32, 84, 13, 0]), new Int32Array([32, 91, 13, 10]), new Int32Array([1024, 0, 18, 0]), new Int32Array([32, 0, 0, 0]), new Int32Array([32, 9, 13, 10]), new Int32Array([32, 103, 13, 0]), new Int32Array([32, 107, 13, 0]), new Int32Array([32, 118, 13, 0]), new Int32Array([32, 122, 13, 0]), new Int32Array([33554432, 0, 0, 36]), new Int32Array([32, 216, 13, 0]), new Int32Array([32, 129, 13, 0]), new Int32Array([32, 130, 13, 0]), new Int32Array([32, 0, 13, 53]), new Int32Array([32, 132, 13, 0]), new Int32Array([32, 0, 13, 36]), new Int32Array([2, 0, 0, 10]), new Int32Array([512, 0, 0, 0]), new Int32Array([64, 9, 0, 0]), new Int32Array([32, 214, 13, 0]), new Int32Array([32, 218, 13, 0]), new Int32Array([8, 0, 0, 52]), new Int32Array([8, 0, 0, 53]), new Int32Array([16, 0, 0, 48]), new Int32Array([4, 0, 0, 53]), new Int32Array([268435456, 0, 18, 53]), new Int32Array([2048, 0, 17, 53]), new Int32Array([2048, 0, 17, 36]), new Int32Array([32768, 0, 0, 0]), new Int32Array([32768, 0, 3, 0]), new Int32Array([1048576, 0, 18, 36]), new Int32Array([33554432, 0, 18, 36]), new Int32Array([4096, 0, 17, 0]), new Int32Array([8192, 0, 15, 0]), new Int32Array([32768, 0, 1, 0]), new Int32Array([32768, 0, 5, 0]), new Int32Array([32768, 0, 7, 0]), new Int32Array([32768, 0, 2, 0]), new Int32Array([32768, 0, 6, 0]), new Int32Array([33554432, 0, 10, 36]), new Int32Array([67108864, 0, 12, 0]), new Int32Array([262144, 0, 14, 0]), new Int32Array([32768, 0, 19, 0]), new Int32Array([32768, 0, 20, 0]), new Int32Array([32768, 0, 21, 0]), new Int32Array([32768, 0, 22, 0]), new Int32Array([67108864, 0, 9, 36]), new Int32Array([67108864, 0, 18, 36]), new Int32Array([2097152, 0, 18, 36]), new Int32Array([4194304, 0, 18, 36]), new Int32Array([134217728, 0, 10, 36]), new Int32Array([262144, 0, 10, 0]), new Int32Array([536870912, 0, 18, 36]), new Int32Array([512, 0, 0, 36]), new Int32Array([67108864, 0, 18, 48]), new Int32Array([536870912, 0, 18, 48]), new Int32Array([2097152, 0, 18, 53]), new Int32Array([4194304, 0, 18, 53]), new Int32Array([536870912, 0, 0, 36]), new Int32Array([67108864, 0, 18, 53]), new Int32Array([64, 224, 0, 0]), new Int32Array([32, 8, 13, 10]), new Int32Array([1, 0, 0, 48]), new Int32Array([1024, 0, 0, 36]), new Int32Array([268435456, 0, 0, 0]), new Int32Array([65536, 0, 0, 0]), new Int32Array([131072, 0, 0, 0]), new Int32Array([2, 0, 3, 53]), new Int32Array([32, 26, 13, 0]), new Int32Array([2, 0, 3, 36]), new Int32Array([134217728, 0, 4, 36]), new Int32Array([524288, 0, 18, 36]), new Int32Array([33554432, 0, 12, 36]), new Int32Array([1048576, 0, 9, 36]), new Int32Array([256, 0, 8, 36]), new Int32Array([32768, 0, 18, 0]), new Int32Array([512, 0, 18, 0]), new Int32Array([1024, 0, 8, 0]), new Int32Array([1024, 0, 3, 0]), new Int32Array([536870912, 0, 3, 0]), new Int32Array([4, 0, 3, 0]), new Int32Array([8, 0, 3, 0]), new Int32Array([1024, 0, 11, 0]), new Int32Array([1024, 0, 4, 0]), new Int32Array([32, 9, 0, 0]), new Int32Array([64, 6, 0, 0]), new Int32Array([536870912, 0, 0, 53]), new Int32Array([64, 216, 0, 0]), new Int32Array([64, 226, 0, 0]), new Int32Array([67108864, 0, 0, 36])];
var ConstSet47 = setConstr(4, 6);
var ConstSet48 = setConstr(4);
var ConstSet49 = setConstr(4, 6);
var ConstSet50 = setConstr(4);
var ConstSet51 = setConstr(4, 6);
var ConstSet52 = setConstr(4);
var ConstSet53 = setConstr(4, 6);
var ConstSet54 = setConstr(4);
var ConstSet55 = setConstr();
var ConstSet56 = setConstr();
var ConstSet57 = setConstr(4, 6);
var ConstSet58 = setConstr(4);
var ConstSet59 = setConstr(3);
var ConstSet60 = setConstr();
var ConstSet61 = setConstr();
var ConstSet62 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet63 = setConstr([48, 57]);
var ConstSet64 = setConstr([65, 90]);
var ConstSet65 = setConstr(5);
var ConstSet66 = setConstr(6);
var ConstSet67 = setConstr(5);
var ConstSet68 = setConstr(4);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(2);
var ConstSet71 = setConstr(3);
var ConstSet72 = setConstr(1);
                    var maru_956316183 = {data: [{Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1682439673, Field1: 95, Field2: makeNimstrLit("95")}, {Field0: 45316872, Field1: 54, Field2: makeNimstrLit("54")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1802190319, Field1: 49, Field2: makeNimstrLit("49")}, {Field0: -1675931886, Field1: 82, Field2: makeNimstrLit("82")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1900031766, Field1: 26, Field2: makeNimstrLit("26")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -990644199, Field1: 99, Field2: makeNimstrLit("99")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1293994209, Field1: 19, Field2: makeNimstrLit("\xE2\x91\xB2")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1778223580, Field1: 52, Field2: makeNimstrLit("52")}, {Field0: 1086593317, Field1: 6, Field2: makeNimstrLit("\xE2\x91\xA5")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -702032087, Field1: 47, Field2: makeNimstrLit("47")}, {Field0: 2096690729, Field1: 68, Field2: makeNimstrLit("68")}, {Field0: 704321579, Field1: 12, Field2: makeNimstrLit("\xE2\x91\xAB")}, {Field0: 1049132588, Field1: 51, Field2: makeNimstrLit("51")}, {Field0: 1581067563, Field1: 56, Field2: makeNimstrLit("56")}, {Field0: 826013230, Field1: 61, Field2: makeNimstrLit("61")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1396828360, Field1: 80, Field2: makeNimstrLit("80")}, {Field0: -1145849800, Field1: 98, Field2: makeNimstrLit("98")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 34035516, Field1: 91, Field2: makeNimstrLit("91")}, {Field0: -1941233091, Field1: 50, Field2: makeNimstrLit("50")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -249462715, Field1: 35, Field2: makeNimstrLit("35")}, {Field0: 464140870, Field1: 7, Field2: makeNimstrLit("\xE2\x91\xA6")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1131254452, Field1: 55, Field2: makeNimstrLit("55")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1436098992, Field1: 64, Field2: makeNimstrLit("64")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -509736878, Field1: 77, Field2: makeNimstrLit("77")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1884450389, Field1: 17, Field2: makeNimstrLit("\xE2\x91\xB0")}, {Field0: -334407594, Field1: 31, Field2: makeNimstrLit("31")}, {Field0: -626572459, Field1: 36, Field2: makeNimstrLit("36")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1714368935, Field1: 18, Field2: makeNimstrLit("\xE2\x91\xB1")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -431180709, Field1: 34, Field2: makeNimstrLit("34")}, {Field0: -751318948, Field1: 44, Field2: makeNimstrLit("44")}, {Field0: 150585179, Field1: 81, Field2: makeNimstrLit("81")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 889415264, Field1: 97, Field2: makeNimstrLit("97")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1384191644, Field1: 27, Field2: makeNimstrLit("27")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 2006744169, Field1: 0, Field2: makeNimstrLit("\xE2\x93\xAA")}, {Field0: -1184374678, Field1: 72, Field2: makeNimstrLit("72")}, {Field0: 1644638058, Field1: 86, Field2: makeNimstrLit("86")}, {Field0: 379191148, Field1: 93, Field2: makeNimstrLit("93")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1158626962, Field1: 90, Field2: makeNimstrLit("90")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1263027088, Field1: 73, Field2: makeNimstrLit("73")}, {Field0: 723335793, Field1: 23, Field2: makeNimstrLit("23")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1902580083, Field1: 21, Field2: makeNimstrLit("21")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1280447350, Field1: 8, Field2: makeNimstrLit("\xE2\x91\xA7")}, {Field0: -369358473, Field1: 57, Field2: makeNimstrLit("57")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1003719038, Field1: 53, Field2: makeNimstrLit("53")}, {Field0: -709315201, Field1: 79, Field2: makeNimstrLit("79")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1694645629, Field1: 4, Field2: makeNimstrLit("\xE2\x91\xA3")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1075905915, Field1: 67, Field2: makeNimstrLit("67")}, {Field0: -1695613306, Field1: 5, Field2: makeNimstrLit("\xE2\x91\xA4")}, {Field0: -1474627450, Field1: 65, Field2: makeNimstrLit("65")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1083722611, Field1: 11, Field2: makeNimstrLit("\xE2\x91\xAA")}, {Field0: -1839864179, Field1: 39, Field2: makeNimstrLit("39")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1049593967, Field1: 3, Field2: makeNimstrLit("\xE2\x91\xA2")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 239195283, Field1: 70, Field2: makeNimstrLit("70")}, {Field0: 1670424468, Field1: 2, Field2: makeNimstrLit("\xE2\x91\xA1")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 131918230, Field1: 22, Field2: makeNimstrLit("22")}, {Field0: 478495127, Field1: 38, Field2: makeNimstrLit("38")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -151052902, Field1: 29, Field2: makeNimstrLit("29")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -910705250, Field1: 32, Field2: makeNimstrLit("32")}, {Field0: 1235937951, Field1: 46, Field2: makeNimstrLit("46")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 481478305, Field1: 16, Field2: makeNimstrLit("\xE2\x91\xAF")}, {Field0: 168767137, Field1: 76, Field2: makeNimstrLit("76")}, {Field0: 1873452705, Field1: 78, Field2: makeNimstrLit("78")}, {Field0: 720261795, Field1: 96, Field2: makeNimstrLit("96")}, {Field0: -2111978331, Field1: 63, Field2: makeNimstrLit("63")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -2008392537, Field1: 92, Field2: makeNimstrLit("92")}, {Field0: 1527684264, Field1: 89, Field2: makeNimstrLit("89")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1700573524, Field1: 28, Field2: makeNimstrLit("28")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -41588306, Field1: 48, Field2: makeNimstrLit("48")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 14868401, Field1: 83, Field2: makeNimstrLit("83")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1823011404, Field1: 41, Field2: makeNimstrLit("41")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 697213878, Field1: 13, Field2: makeNimstrLit("\xE2\x91\xAC")}, {Field0: -1168774986, Field1: 30, Field2: makeNimstrLit("30")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 975549885, Field1: 1, Field2: makeNimstrLit("\xE2\x91\xA0")}, {Field0: -1019208771, Field1: 43, Field2: makeNimstrLit("43")}, {Field0: 1536979647, Field1: 60, Field2: makeNimstrLit("60")}, {Field0: 440119488, Field1: 20, Field2: makeNimstrLit("\xE2\x91\xB3")}, {Field0: -196161599, Field1: 14, Field2: makeNimstrLit("\xE2\x91\xAD")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1548542269, Field1: 9, Field2: makeNimstrLit("\xE2\x91\xA8")}, {Field0: 1716744900, Field1: 69, Field2: makeNimstrLit("69")}, {Field0: 991623108, Field1: 88, Field2: makeNimstrLit("88")}, {Field0: 1751968454, Field1: 59, Field2: makeNimstrLit("59")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 599698128, Field1: 71, Field2: makeNimstrLit("71")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -496814382, Field1: 37, Field2: makeNimstrLit("37")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -351749160, Field1: 25, Field2: makeNimstrLit("25")}, {Field0: -724205864, Field1: 33, Field2: makeNimstrLit("33")}, {Field0: 878621656, Field1: 62, Field2: makeNimstrLit("62")}, {Field0: 431045338, Field1: 75, Field2: makeNimstrLit("75")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 410065378, Field1: 74, Field2: makeNimstrLit("74")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1388817178, Field1: 10, Field2: makeNimstrLit("\xE2\x91\xA9")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 1552342250, Field1: 66, Field2: makeNimstrLit("66")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1255916816, Field1: 15, Field2: makeNimstrLit("\xE2\x91\xAE")}, {Field0: 41776112, Field1: 24, Field2: makeNimstrLit("24")}, {Field0: 1481275377, Field1: 58, Field2: makeNimstrLit("58")}, {Field0: -773962511, Field1: 85, Field2: makeNimstrLit("85")}, {Field0: 2019811060, Field1: 40, Field2: makeNimstrLit("40")}, {Field0: -1791440652, Field1: 42, Field2: makeNimstrLit("42")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1177551624, Field1: 94, Field2: makeNimstrLit("94")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 0, Field1: 0, Field2: []}, {Field0: 508404475, Field1: 87, Field2: makeNimstrLit("87")}, {Field0: 1094447868, Field1: 84, Field2: makeNimstrLit("84")}, {Field0: 0, Field1: 0, Field2: []}, {Field0: -1651658498, Field1: 45, Field2: makeNimstrLit("45")}, {Field0: 0, Field1: 0, Field2: []}], counter: 100};
var ConstSet73 = setConstr([48, 57]);
var ConstSet74 = setConstr([48, 57]);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsbigints", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\jsbigints.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\jsutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
F.line = 214;
var objectID_637534370 = [0];
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module hashes", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module macros", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\core\\macros.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops_utils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\bitops_utils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module countbits_impl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\countbits_impl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module bitops", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\bitops.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module fenv", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\fenv.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module math", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\math.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module algorithm", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module tables", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module underscored_calls", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\underscored_calls.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sugar", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\sugar.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sequtils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parseutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module typetraits", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\typetraits.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module enumutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\enumutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module unicode", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strimpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module strutils", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module sets", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties_data", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties_data", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties_data", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module common", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module scanner", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\scanner.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parser", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\parser.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module exptransformation", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\exptransformation.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types_data", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types_data", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types_data", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types_data.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module types", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nodematch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module deques", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\deques.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfa", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfa.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module litopt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfatype", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module compiler", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\compiler.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfafindall", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module nfamacro", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamacro.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module regex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDA2CFG_separated_re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module streams", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\streams.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module lexbase", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\lexbase.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module decode_helpers", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\decode_helpers.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module parsejson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parsejson.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module options", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\options.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
F.line = 45;
F.line = 46;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsffi", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\js\\jsffi.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module json", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
F.line = 6;
var tPDAmtxs_436207623 = makeNimstrLit("{\x0A    \"A\": {\"Z0\": [[\" \", \"\xCE\xB5\", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \" \"],\x0A                 [\" \", \"\xCE\xB5\", \" \", \" \"]],\x0A          \"X\" : [[\" \", \" \", \" \", \" \"],\x0A                 [\" \", \"1\", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \" \"]]},\x0A    \"B\": {\"Z0\": [[\" \", \" \", \" \", \" \"],\x0A                 [\" \", \"\xCE\xB5\", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \"0\"],\x0A                 [\" \", \" \", \" \", \" \"]],\x0A          \"X\":  [[\" \", \" \", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \" \"],\x0A                 [\" \", \" \", \"1\", \" \"],\x0A                 [\" \", \" \", \" \", \" \"]]},\x0A    \"C\":        [[\" \", \" \", \" \", \" \"],\x0A                 [\" \", \" \", \"0\", \" \"],\x0A                 [\" \", \" \", \" \", \" \"],\x0A                 [\" \", \" \", \" \", \" \"]],\x0A    \"Gamma\": [\"Z0\",\"X\"],\x0A    \"iniStates\": [0],\x0A    \"accStates\": [1]\x0A}\x0A");
F.line = 34;
var N_436207624 = [0];
F.line = 35;
var jfname_436207625 = [[]];
F.line = 36;
var gvsize_436207626 = [makeNimstrLit("6,6")];
F.line = 37;
var gvnodesep1_436207627 = [makeNimstrLit("0.4")];
F.line = 38;
var gvranksep1_436207628 = [makeNimstrLit("0.6")];
F.line = 39;
var gvnodesep2_436207629 = [makeNimstrLit("0.4")];
F.line = 40;
var gvranksep2_436207630 = [makeNimstrLit("0.6")];
F.line = 41;
var m_436207631 = [{Field0: ({data: [], counter: 0}), Field1: ({data: [], counter: 0}), Field2: [], Field3: [], Field4: [], Field5: []}];
F.line = 42;
var gcfg_436207632 = [{Field0: [], Field1: [], Field2: ({data: [], counter: 0, first: 0, last: 0}), Field3: []}];
framePtr = F.prev;

function nextPowerOfTwo_687866032(x_687866033) {
  var result_687866034 = 0;

    result_687866034 = (x_687866033 - 1);
    result_687866034 = (result_687866034 | (result_687866034 >> 16));
    result_687866034 = (result_687866034 | (result_687866034 >> 8));
    result_687866034 = (result_687866034 | (result_687866034 >> 4));
    result_687866034 = (result_687866034 | (result_687866034 >> 2));
    result_687866034 = (result_687866034 | (result_687866034 >> 1));
    result_687866034 += (1 + ((x_687866033 <= 0) ? 1 : 0));

  return result_687866034;

}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_318767107(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_318767107(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_318767107(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    F.line = 44;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      F.line = 46;
      var iHEX60gensym4_251658435 = 0;
      F.line = 119;
      var i_436209060 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436209060 < n_251658420)) break Label3;
            F.line = 49;
            iHEX60gensym4_251658435 = i_436209060;
            F.line = 49;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            F.line = 122;
            i_436209060 = addInt(i_436209060, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 55;
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));
  framePtr = F.prev;

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 113;
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));
  framePtr = F.prev;

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 117;
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);
  framePtr = F.prev;

  
}

function HEX24_318767107(x_318767108) {
  var result_318767109 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 12;
    addInt_251658457(result_318767109, 0, x_318767108);
  framePtr = F.prev;

  return result_318767109[0];

}

function auxWriteStackTrace_33556559(f_33556560) {
          var Temporary3;

  var result_33556561 = [[]];

    var it_33556569 = f_33556560;
    var i_33556570 = 0;
    var total_33556571 = 0;
    var tempFrames_33556572 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555918);
    Label1: do {
        Label2: while (true) {
          if (!!((it_33556569 == null))) Temporary3 = false; else {            Temporary3 = (i_33556570 <= 63);          }        if (!Temporary3) break Label2;
          tempFrames_33556572[i_33556570].Field0 = it_33556569.procname;
          tempFrames_33556572[i_33556570].Field1 = it_33556569.line;
          tempFrames_33556572[i_33556570].Field2 = it_33556569.filename;
          i_33556570 += 1;
          total_33556571 += 1;
          it_33556569 = it_33556569.prev;
        }
    } while (false);
    Label4: do {
        Label5: while (true) {
        if (!!((it_33556569 == null))) break Label5;
          total_33556571 += 1;
          it_33556569 = it_33556569.prev;
        }
    } while (false);
    result_33556561[0] = nimCopy(null, [], NTI33554439);
    if (!((total_33556571 == i_33556570))) {
    result_33556561[0].push.apply(result_33556561[0], makeNimstrLit("("));;
    result_33556561[0].push.apply(result_33556561[0], HEX24_318767107((total_33556571 - i_33556570)));;
    result_33556561[0].push.apply(result_33556561[0], makeNimstrLit(" calls omitted) ...\x0A"));;
    }
    
    Label6: do {
      var j_33556602 = 0;
      var colontmp__436209052 = 0;
      colontmp__436209052 = (i_33556570 - 1);
      var res_436209054 = colontmp__436209052;
      Label7: do {
          Label8: while (true) {
          if (!(0 <= res_436209054)) break Label8;
            j_33556602 = res_436209054;
            result_33556561[0].push.apply(result_33556561[0], cstrToNimstr(tempFrames_33556572[j_33556602].Field2));;
            if ((0 < tempFrames_33556572[j_33556602].Field1)) {
            result_33556561[0].push.apply(result_33556561[0], makeNimstrLit("("));;
            addInt_251658457(result_33556561, 0, tempFrames_33556572[j_33556602].Field1);
            if (false) {
            result_33556561[0].push.apply(result_33556561[0], makeNimstrLit(", "));;
            addInt_251658457(result_33556561, 0, 0);
            }
            
            result_33556561[0].push.apply(result_33556561[0], makeNimstrLit(")"));;
            }
            
            result_33556561[0].push.apply(result_33556561[0], makeNimstrLit(" at "));;
            add_33556419(result_33556561, 0, tempFrames_33556572[j_33556602].Field0);
            result_33556561[0].push.apply(result_33556561[0], makeNimstrLit("\x0A"));;
            res_436209054 -= 1;
          }
      } while (false);
    } while (false);

  return result_33556561[0];

}

function rawWriteStackTrace_33556631() {
  var result_33556632 = [];

    if (!((framePtr == null))) {
    result_33556632 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(auxWriteStackTrace_33556559(framePtr) || []), NTI33554439);
    }
    else {
      result_33556632 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI33554439);
    }
    

  return result_33556632;

}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }  framePtr = F.prev;

  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    buf_33556664[0].push.apply(buf_33556664[0], rawWriteStackTrace_33556631());;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function slotsNeeded_570425386(count_570425387) {
  var result_570425388 = 0;

  var F = {procname: "tables.slotsNeeded", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 34;
    result_570425388 = nextPowerOfTwo_687866032(addInt(divInt(mulInt(count_570425387, 3), 2), 4));
  framePtr = F.prev;

  return result_570425388;

}

function initTable_436207717(initialSize_436207720) {
  var result_436207721 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym7_436207723 = slotsNeeded_570425386(chckRange(initialSize_436207720, 0, 2147483647));
    F.line = 167;
    result_436207721.counter = 0;
    F.line = 168;
    result_436207721.data = new Array(chckRange(correctSizeHEX60gensym7_436207723, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym7_436207723, 0, 2147483647) ; ++i) { result_436207721.data[i] = {Field0: 0, Field1: [], Field2: []}; }  framePtr = F.prev;

  return result_436207721;

}

function reprEnum(e_33557385, typ_33557386) {
  var result_33557387 = [];

  var F = {procname: "system.reprEnum", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\reprjs.nim", line: 0};
  framePtr = F;
    F.line = 25;
    var tmp_33557388 = false;
    F.line = 26;
    var item_33557389 = typ_33557386.node.sons[e_33557385];
    F.line = 27;
    tmp_33557388 = item_33557389 !== undefined
    if (tmp_33557388) {
    F.line = 29;
    result_33557387 = nimCopy(null, makeNimstrLit(item_33557389.name), NTI33554439);
    }
    else {
      F.line = 31;
      result_33557387 = nimCopy(null, (HEX24_318767107(e_33557385) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    
  framePtr = F.prev;

  return result_33557387;

}

function HEX3DHEX3D_1342179349(x_1342179351, y_1342179352) {
  var result_1342179353 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var sameObject_1342179361 = false;
    F.line = 302;
    sameObject_1342179361 = x_1342179351 === y_1342179352
    if (sameObject_1342179361) {
    F.line = 303;
    result_1342179353 = true;
    break BeforeRet;
    }
    
    if (!(((x_1342179351).length == (y_1342179352).length))) {
    F.line = 306;
    result_1342179353 = false;
    break BeforeRet;
    }
    
    Label1: do {
      F.line = 308;
      var i_1342179375 = 0;
      F.line = 75;
      var colontmp__436209072 = 0;
      F.line = 308;
      colontmp__436209072 = subInt((x_1342179351).length, 1);
      F.line = 90;
      var res_436209073 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436209073 <= colontmp__436209072)) break Label3;
            F.line = 308;
            i_1342179375 = res_436209073;
            if (!(HEX3DHEX3D_1342179332(x_1342179351[chckIndx(i_1342179375, 0, (x_1342179351).length - 1)], y_1342179352[chckIndx(i_1342179375, 0, (y_1342179352).length - 1)]))) {
            F.line = 310;
            result_1342179353 = false;
            break BeforeRet;
            }
            
            F.line = 93;
            res_436209073 = addInt(res_436209073, 1);
          }
      } while (false);
    } while (false);
    F.line = 312;
    result_1342179353 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1342179353;

}

function len_1342179420(t_1342179423) {
  var result_1342179424 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1509;
    result_1342179424 = t_1342179423.counter;
  framePtr = F.prev;

  return result_1342179424;

}

function isFilled_570425375(hcode_570425376) {
  var result_570425377 = false;

  var F = {procname: "tables.isFilled", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 22;
    result_570425377 = !((hcode_570425376 == 0));
  framePtr = F.prev;

  return result_570425377;

}

function imul_637534525(a_637534526, b_637534527) {
  var result_637534528 = 0;

  var F = {procname: "hashes.imul", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    F.line = 289;
    var mask_637534529 = 65535;
    F.line = 291;
    var aHi_637534534 = ((a_637534526 >>> 16) & mask_637534529);
    F.line = 292;
    var aLo_637534535 = (a_637534526 & mask_637534529);
    F.line = 293;
    var bHi_637534540 = ((b_637534527 >>> 16) & mask_637534529);
    F.line = 294;
    var bLo_637534541 = (b_637534527 & mask_637534529);
    F.line = 295;
    result_637534528 = ((((aLo_637534535 * bLo_637534541) >>> 0) + (((((aHi_637534534 * bLo_637534541) >>> 0) + ((aLo_637534535 * bHi_637534540) >>> 0)) >>> 0) << 16)) >>> 0);
  framePtr = F.prev;

  return result_637534528;

}

function rotl32_637534546(x_637534547, r_637534548) {
  var result_637534549 = 0;

  var F = {procname: "hashes.rotl32", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    F.line = 300;
    result_637534549 = ((x_637534547 << r_637534548) | (x_637534547 >>> subInt(32, r_637534548)));
  framePtr = F.prev;

  return result_637534549;

}

function murmurHash_637534558(x_637534559) {
  var result_637534560 = 0;

  var F = {procname: "hashes.murmurHash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 311;
    var size_637534569 = (x_637534559).length;
    F.line = 312;
    var stepSize_637534570 = 4;
    F.line = 313;
    var n_637534571 = divInt(size_637534569, stepSize_637534570);
    F.line = 315;
    var h1_637534572 = 0;
    F.line = 316;
    var i_637534573 = 0;
    Label1: do {
      F.line = 319;
        Label2: while (true) {
        if (!(i_637534573 < mulInt(n_637534571, stepSize_637534570))) break Label2;
          F.line = 320;
          var k1_637534574 = 0;
          F.line = 322;
          var j_637534575 = stepSize_637534570;
          Label3: do {
            F.line = 323;
              Label4: while (true) {
              if (!(0 < j_637534575)) break Label4;
                F.line = 324;
                j_637534575 = subInt(j_637534575, 1);
                F.line = 325;
                k1_637534574 = ((k1_637534574 << 8) | x_637534559[chckIndx(addInt(i_637534573, j_637534575), 0, (x_637534559).length - 1)]);
              }
          } while (false);
          F.line = 328;
          i_637534573 = addInt(i_637534573, stepSize_637534570);
          F.line = 330;
          k1_637534574 = imul_637534525(k1_637534574, 3432918353);
          F.line = 331;
          k1_637534574 = rotl32_637534546(k1_637534574, 15);
          F.line = 332;
          k1_637534574 = imul_637534525(k1_637534574, 461845907);
          F.line = 334;
          h1_637534572 = (h1_637534572 ^ k1_637534574);
          F.line = 335;
          h1_637534572 = rotl32_637534546(h1_637534572, 13);
          F.line = 336;
          h1_637534572 = ((((h1_637534572 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    F.line = 339;
    var k1_637534592 = 0;
    F.line = 340;
    var rem_637534593 = modInt(size_637534569, stepSize_637534570);
    Label5: do {
      F.line = 341;
        Label6: while (true) {
        if (!(0 < rem_637534593)) break Label6;
          F.line = 342;
          rem_637534593 = subInt(rem_637534593, 1);
          F.line = 343;
          k1_637534592 = ((k1_637534592 << 8) | x_637534559[chckIndx(addInt(i_637534573, rem_637534593), 0, (x_637534559).length - 1)]);
        }
    } while (false);
    F.line = 344;
    k1_637534592 = imul_637534525(k1_637534592, 3432918353);
    F.line = 345;
    k1_637534592 = rotl32_637534546(k1_637534592, 15);
    F.line = 346;
    k1_637534592 = imul_637534525(k1_637534592, 461845907);
    F.line = 347;
    h1_637534572 = (h1_637534572 ^ k1_637534592);
    F.line = 350;
    h1_637534572 = (h1_637534572 ^ size_637534569);
    F.line = 351;
    h1_637534572 = (h1_637534572 ^ (h1_637534572 >>> 16));
    F.line = 352;
    h1_637534572 = imul_637534525(h1_637534572, 2246822507);
    F.line = 353;
    h1_637534572 = (h1_637534572 ^ (h1_637534572 >>> 13));
    F.line = 354;
    h1_637534572 = imul_637534525(h1_637534572, 3266489909);
    F.line = 355;
    h1_637534572 = (h1_637534572 ^ (h1_637534572 >>> 16));
    F.line = 356;
    result_637534560 = (h1_637534572 | 0);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_637534560;

}

function hash_637534657(x_637534658) {
  var result_637534659 = 0;

  var F = {procname: "hashes.hash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    F.line = 388;
    result_637534659 = murmurHash_637534558((x_637534658.slice(0, (x_637534658).length - 1 + 1)));
  framePtr = F.prev;

  return result_637534659;

}

function nextTry_570425378(h_570425379, maxHash_570425380) {
  var result_570425381 = 0;

  var F = {procname: "tables.nextTry", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 25;
    result_570425381 = (addInt(h_570425379, 1) & maxHash_570425380);
  framePtr = F.prev;

  return result_570425381;

}

function rawGet_1342177640(t_1342177643, key_1342177644, hc_1342177645, hc_1342177645_Idx) {
            var Temporary3;

  var result_1342177646 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1342177645[hc_1342177645_Idx] = hash_637534657(key_1342177644);
    if ((hc_1342177645[hc_1342177645_Idx] == 0)) {
    F.line = 66;
    hc_1342177645[hc_1342177645_Idx] = 314159265;
    }
    
    if (((t_1342177643.data).length == 0)) {
    F.line = 48;
    result_1342177646 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1342177697 = (hc_1342177645[hc_1342177645_Idx] & (t_1342177643.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_1342177643.data[chckIndx(h_1342177697, 0, (t_1342177643.data).length - 1)].Field0)) break Label2;
            if (!(t_1342177643.data[chckIndx(h_1342177697, 0, (t_1342177643.data).length - 1)].Field0 == hc_1342177645[hc_1342177645_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1342177643.data[chckIndx(h_1342177697, 0, (t_1342177643.data).length - 1)].Field2, key_1342177644);            }          if (Temporary3) {
          F.line = 56;
          result_1342177646 = h_1342177697;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1342177697 = nextTry_570425378(h_1342177697, (t_1342177643.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1342177646 = subInt(-1, h_1342177697);
  } while (false);
  framePtr = F.prev;

  return result_1342177646;

}

function hasKey_1342179844(t_1342179847, key_1342179848) {
  var result_1342179849 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1413;
    var hc_1342179850 = [0];
    F.line = 1414;
    result_1342179849 = (0 <= rawGet_1342177640(t_1342179847, key_1342179848, hc_1342179850, 0));
  framePtr = F.prev;

  return result_1342179849;

}

function rawGet_1342179925(t_1342179928, key_1342179929, hc_1342179930, hc_1342179930_Idx) {
            var Temporary3;

  var result_1342179931 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1342179930[hc_1342179930_Idx] = hash_637534657(key_1342179929);
    if ((hc_1342179930[hc_1342179930_Idx] == 0)) {
    F.line = 66;
    hc_1342179930[hc_1342179930_Idx] = 314159265;
    }
    
    if (((t_1342179928.data).length == 0)) {
    F.line = 48;
    result_1342179931 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1342179982 = (hc_1342179930[hc_1342179930_Idx] & (t_1342179928.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_1342179928.data[chckIndx(h_1342179982, 0, (t_1342179928.data).length - 1)].Field0)) break Label2;
            if (!(t_1342179928.data[chckIndx(h_1342179982, 0, (t_1342179928.data).length - 1)].Field0 == hc_1342179930[hc_1342179930_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_1342179928.data[chckIndx(h_1342179982, 0, (t_1342179928.data).length - 1)].Field2, key_1342179929);            }          if (Temporary3) {
          F.line = 56;
          result_1342179931 = h_1342179982;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1342179982 = nextTry_570425378(h_1342179982, (t_1342179928.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1342179931 = subInt(-1, h_1342179982);
  } while (false);
  framePtr = F.prev;

  return result_1342179931;

}

function raiseKeyError_956301878(key_956301880) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 234;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(key_956301880 || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1342179918(t_1342179921, key_1342179922) {
  var result_1342179923 = null;
  var result_1342179923_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym89_1342179924 = [0];
    F.line = 243;
    var indexHEX60gensym89_1342180145 = rawGet_1342179925(t_1342179921, key_1342179922, hcHEX60gensym89_1342179924, 0);
    if ((0 <= indexHEX60gensym89_1342180145)) {
    F.line = 244;
    result_1342179923 = t_1342179921.data[chckIndx(indexHEX60gensym89_1342180145, 0, (t_1342179921.data).length - 1)]; result_1342179923_Idx = "Field3";
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_1342179922);
    }
    
  framePtr = F.prev;

  return [result_1342179923, result_1342179923_Idx];

}

function sysFatal_218103842(message_218103845) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert_218103840(msg_218103841) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\assertions.nim", line: 0};
  framePtr = F;
    F.line = 28;
    sysFatal_218103842(msg_218103841);
  framePtr = F.prev;

  
}

function failedAssertImpl_218103864(msg_218103865) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\assertions.nim", line: 0};
  framePtr = F;
    F.line = 38;
    raiseAssert_218103840(msg_218103865);
  framePtr = F.prev;

  
}

function HEX3DHEX3D_1342179332(a_1342179333, b_1342179334) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
          var Temporary12;
          var Temporary13;
          var Temporary15;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;

  var result_1342179335 = false;

  var F = {procname: "json.==", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((a_1342179333 == null)) {
    if ((b_1342179334 == null)) {
    F.line = 445;
    result_1342179335 = true;
    break BeforeRet;
    }
    
    F.line = 446;
    result_1342179335 = false;
    break BeforeRet;
    }
    else {
      if ((b_1342179334 == null)) Temporary1 = true; else {        Temporary1 = !((a_1342179333.kind == b_1342179334.kind));      }    if (Temporary1) {
    F.line = 448;
    result_1342179335 = false;
    break BeforeRet;
    }
    else {
      F.line = 450;
      switch (a_1342179333.kind) {
      case 4:
        F.line = 452;
        var Temporary2 = a_1342179333;
        if (ConstSet2[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1342177283)); }
        var Temporary3 = b_1342179334;
        if (ConstSet3[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1342177283)); }
        result_1342179335 = eqStrings(Temporary2.str, Temporary3.str);
        break;
      case 2:
        F.line = 454;
        var Temporary4 = a_1342179333;
        if (ConstSet4[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1342177283)); }
        var Temporary5 = b_1342179334;
        if (ConstSet5[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1342177283)); }
        result_1342179335 = (Temporary4.num == Temporary5.num);
        break;
      case 3:
        F.line = 456;
        var Temporary6 = a_1342179333;
        if (ConstSet6[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1342177283)); }
        var Temporary7 = b_1342179334;
        if (ConstSet7[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1342177283)); }
        result_1342179335 = (Temporary6.fnum == Temporary7.fnum);
        break;
      case 1:
        F.line = 458;
        var Temporary8 = a_1342179333;
        if (ConstSet8[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1342177283)); }
        var Temporary9 = b_1342179334;
        if (ConstSet9[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1342177283)); }
        result_1342179335 = (Temporary8.bval == Temporary9.bval);
        break;
      case 0:
        F.line = 460;
        result_1342179335 = true;
        break;
      case 6:
        F.line = 462;
        var Temporary10 = a_1342179333;
        if (ConstSet10[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1342177283)); }
        var Temporary11 = b_1342179334;
        if (ConstSet11[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1342177283)); }
        result_1342179335 = HEX3DHEX3D_1342179349(Temporary10.elems, Temporary11.elems);
        break;
      case 5:
          var Temporary12 = a_1342179333;
          if (ConstSet12[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1342177283)); }
          var Temporary13 = b_1342179334;
          if (ConstSet13[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI1342177283)); }
        if (!((len_1342179420(Temporary12.fields) == len_1342179420(Temporary13.fields)))) {
        F.line = 466;
        result_1342179335 = false;
        break BeforeRet;
        }
        
        Label14: do {
          F.line = 467;
          var key_1342179802 = [];
          F.line = 467;
          var val_1342179803 = null;
          F.line = 1691;
          var colontmp__436209065 = ({data: [], counter: 0, first: 0, last: 0});
          F.line = 467;
          var Temporary15 = a_1342179333;
          if (ConstSet14[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1342177283)); }
          colontmp__436209065 = nimCopy(colontmp__436209065, Temporary15.fields, NTI1342177294);
          F.line = 1717;
          var L_436209067 = len_1342179420(colontmp__436209065);
          if ((0 < colontmp__436209065.counter)) {
          F.line = 1299;
          var h_436209068 = colontmp__436209065.first;
          Label16: do {
            F.line = 1300;
              Label17: while (true) {
              if (!(0 <= h_436209068)) break Label17;
                F.line = 1301;
                var nxt_436209070 = colontmp__436209065.data[chckIndx(h_436209068, 0, (colontmp__436209065.data).length - 1)].Field1;
                if (isFilled_570425375(colontmp__436209065.data[chckIndx(h_436209068, 0, (colontmp__436209065.data).length - 1)].Field0)) {
                F.line = 467;
                key_1342179802 = colontmp__436209065.data[chckIndx(h_436209068, 0, (colontmp__436209065.data).length - 1)].Field2;
                F.line = 467;
                val_1342179803 = colontmp__436209065.data[chckIndx(h_436209068, 0, (colontmp__436209065.data).length - 1)].Field3;
                  var Temporary18 = b_1342179334;
                  if (ConstSet15[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1342177283)); }
                if (!(hasKey_1342179844(Temporary18.fields, key_1342179802))) {
                F.line = 468;
                result_1342179335 = false;
                break BeforeRet;
                }
                
                  var Temporary19 = b_1342179334;
                  if (ConstSet16[Temporary19.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary19.kind, NTI1342177283)); }
                if (!(HEX3DHEX3D_1342179332((Temporary20 = HEX5BHEX5D_1342179918(Temporary19.fields, key_1342179802), Temporary20)[0][Temporary20[1]], val_1342179803))) {
                F.line = 471;
                result_1342179335 = false;
                break BeforeRet;
                }
                
                if (!((len_1342179420(colontmp__436209065) == L_436209067))) {
                F.line = 1720;
                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                F.line = 1304;
                h_436209068 = nxt_436209070;
              }
          } while (false);
          }
          
        } while (false);
        F.line = 474;
        result_1342179335 = true;
        break;
      }
    }
    }
  } while (false);
  framePtr = F.prev;

  return result_1342179335;

}

function invalidFormatString_620759117() {
  var F = {procname: "strutils.invalidFormatString", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 2664;
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function toLowerAscii_939524097(c_939524098) {
  var result_939524099 = 0;

  var F = {procname: "strimpl.toLowerAscii", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\strimpl.nim", line: 0};
  framePtr = F;
    if ((ConstSet21[c_939524098] != undefined)) {
    F.line = 3;
    result_939524099 = chckRange(addInt(c_939524098, 32), 0, 255);
    }
    else {
      F.line = 5;
      result_939524099 = c_939524098;
    }
    
  framePtr = F.prev;

  return result_939524099;

}

function nsuCmpIgnoreStyle(a_620757182, b_620757183) {
          var Temporary7;
          var Temporary8;

  var result_620757184 = 0;

  BeforeRet: do {
    var aLenHEX60gensym25_620757193 = (a_620757182).length;
    var bLenHEX60gensym25_620757194 = (b_620757183).length;
    var iHEX60gensym25_620757195 = 0;
    var jHEX60gensym25_620757196 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: do {
              Label4: while (true) {
              if (!((iHEX60gensym25_620757195 < aLenHEX60gensym25_620757193) && (a_620757182[iHEX60gensym25_620757195] == 95))) break Label4;
                iHEX60gensym25_620757195 += 1;
              }
          } while (false);
          Label5: do {
              Label6: while (true) {
              if (!((jHEX60gensym25_620757196 < bLenHEX60gensym25_620757194) && (b_620757183[jHEX60gensym25_620757196] == 95))) break Label6;
                jHEX60gensym25_620757196 += 1;
              }
          } while (false);
          if ((iHEX60gensym25_620757195 < aLenHEX60gensym25_620757193)) {
          Temporary7 = toLowerAscii_939524097(a_620757182[iHEX60gensym25_620757195]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym25_620757205 = Temporary7;
          if ((jHEX60gensym25_620757196 < bLenHEX60gensym25_620757194)) {
          Temporary8 = toLowerAscii_939524097(b_620757183[jHEX60gensym25_620757196]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym25_620757206 = Temporary8;
          result_620757184 = (aaHEX60gensym25_620757205 - bbHEX60gensym25_620757206);
          if (!((result_620757184 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym25_620757193 <= iHEX60gensym25_620757195)) {
          if ((bLenHEX60gensym25_620757194 <= jHEX60gensym25_620757196)) {
          result_620757184 = 0;
          break BeforeRet;
          }
          
          result_620757184 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym25_620757194 <= jHEX60gensym25_620757196)) {
          result_620757184 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym25_620757195 += 1;
          jHEX60gensym25_620757196 += 1;
        }
    } while (false);
  } while (false);

  return result_620757184;

}

function findNormalized_620759105(x_620759106, inArray_620759107) {
  var result_620759108 = 0;

  var F = {procname: "strutils.findNormalized", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 2656;
    var i_620759109 = 0;
    Label1: do {
      F.line = 2657;
        Label2: while (true) {
        if (!(i_620759109 < (inArray_620759107).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_620759106, inArray_620759107[chckIndx(i_620759109, 0, (inArray_620759107).length - 1)]) == 0)) {
          F.line = 2658;
          result_620759108 = i_620759109;
          break BeforeRet;
          }
          
          F.line = 2659;
          i_620759109 = addInt(i_620759109, 2);
        }
    } while (false);
    F.line = 2661;
    result_620759108 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620759108;

}

function substr_33557906(s_33557907, first_33557908, last_33557909) {
  var result_33557910 = [];

  var F = {procname: "system.substr", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 3069;
    var first_33557911 = nimMax(first_33557908, 0);
    F.line = 3070;
    var L_33557912 = nimMax(addInt(subInt(nimMin(last_33557909, (s_33557907).length - 1), first_33557911), 1), 0);
    F.line = 3071;
    result_33557910 = nimCopy(null, mnewString(chckRange(L_33557912, 0, 2147483647)), NTI33554439);
    Label1: do {
      F.line = 3072;
      var i_33557917 = 0;
      F.line = 75;
      var colontmp__436209085 = 0;
      F.line = 3072;
      colontmp__436209085 = subInt(L_33557912, 1);
      F.line = 90;
      var res_436209086 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436209086 <= colontmp__436209085)) break Label3;
            F.line = 3072;
            i_33557917 = res_436209086;
            F.line = 3072;
            result_33557910[chckIndx(i_33557917, 0, (result_33557910).length - 1)] = s_33557907[chckIndx(addInt(i_33557917, first_33557911), 0, (s_33557907).length - 1)];
            F.line = 93;
            res_436209086 = addInt(res_436209086, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_33557910;

}

function nsuAddf(s_620759120, s_620759120_Idx, formatstr_620759121, a_620759122) {
                  var Temporary5;
            var Temporary6;
              var Temporary7;
            var Temporary10;
              var Temporary11;
                var Temporary12;
                  var Temporary15;
              var Temporary16;

  var F = {procname: "strutils.addf", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 2670;
    var i_620759124 = 0;
    F.line = 2671;
    var num_620759125 = 0;
    Label1: do {
      F.line = 2672;
        Label2: while (true) {
        if (!(i_620759124 < (formatstr_620759121).length)) break Label2;
          if (((formatstr_620759121[chckIndx(i_620759124, 0, (formatstr_620759121).length - 1)] == 36) && (addInt(i_620759124, 1) < (formatstr_620759121).length))) {
          F.line = 2674;
          switch (formatstr_620759121[chckIndx(addInt(i_620759124, 1), 0, (formatstr_620759121).length - 1)]) {
          case 35:
            if (((a_620759122).length - 1 < num_620759125)) {
            F.line = 2676;
            invalidFormatString_620759117();
            }
            
            F.line = 2677;
            s_620759120[s_620759120_Idx].push.apply(s_620759120[s_620759120_Idx], a_620759122[chckIndx(num_620759125, 0, (a_620759122).length - 1)]);;
            F.line = 2678;
            i_620759124 = addInt(i_620759124, 2);
            F.line = 2679;
            num_620759125 = addInt(num_620759125, 1);
            break;
          case 36:
            F.line = 2681;
            addChar(s_620759120[s_620759120_Idx], 36);;
            F.line = 2682;
            i_620759124 = addInt(i_620759124, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            F.line = 2684;
            var j_620759141 = 0;
            F.line = 2685;
            i_620759124 = addInt(i_620759124, 1);
            F.line = 2686;
            var negative_620759146 = (formatstr_620759121[chckIndx(i_620759124, 0, (formatstr_620759121).length - 1)] == 45);
            if (negative_620759146) {
            F.line = 2687;
            i_620759124 = addInt(i_620759124, 1);
            }
            
            Label3: do {
              F.line = 2688;
                Label4: while (true) {
                  if (!(i_620759124 < (formatstr_620759121).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet18[formatstr_620759121[chckIndx(i_620759124, 0, (formatstr_620759121).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  F.line = 2689;
                  j_620759141 = subInt(addInt(mulInt(j_620759141, 10), formatstr_620759121[chckIndx(i_620759124, 0, (formatstr_620759121).length - 1)]), 48);
                  F.line = 2690;
                  i_620759124 = addInt(i_620759124, 1);
                }
            } while (false);
            F.line = 2691;
            if (!(negative_620759146)) {
            Temporary6 = subInt(j_620759141, 1);
            }
            else {
            Temporary6 = subInt((a_620759122).length, j_620759141);
            }
            
            var idx_620759169 = Temporary6;
              if ((idx_620759169 < 0)) Temporary7 = true; else {                Temporary7 = ((a_620759122).length - 1 < idx_620759169);              }            if (Temporary7) {
            F.line = 2692;
            invalidFormatString_620759117();
            }
            
            F.line = 2693;
            s_620759120[s_620759120_Idx].push.apply(s_620759120[s_620759120_Idx], a_620759122[chckIndx(idx_620759169, 0, (a_620759122).length - 1)]);;
            break;
          case 123:
            F.line = 2695;
            var j_620759173 = addInt(i_620759124, 2);
            F.line = 2696;
            var k_620759174 = 0;
            F.line = 2697;
            var negative_620759175 = (formatstr_620759121[chckIndx(j_620759173, 0, (formatstr_620759121).length - 1)] == 45);
            if (negative_620759175) {
            F.line = 2698;
            j_620759173 = addInt(j_620759173, 1);
            }
            
            F.line = 2699;
            var isNumber_620759180 = 0;
            Label8: do {
              F.line = 2700;
                Label9: while (true) {
                if (!((j_620759173 < (formatstr_620759121).length) && !((ConstSet19[formatstr_620759121[chckIndx(j_620759173, 0, (formatstr_620759121).length - 1)]] != undefined)))) break Label9;
                  if ((ConstSet20[formatstr_620759121[chckIndx(j_620759173, 0, (formatstr_620759121).length - 1)]] != undefined)) {
                  F.line = 2702;
                  k_620759174 = subInt(addInt(mulInt(k_620759174, 10), formatstr_620759121[chckIndx(j_620759173, 0, (formatstr_620759121).length - 1)]), 48);
                  if ((isNumber_620759180 == 0)) {
                  F.line = 2703;
                  isNumber_620759180 = 1;
                  }
                  
                  }
                  else {
                    F.line = 2705;
                    isNumber_620759180 = -1;
                  }
                  
                  F.line = 2706;
                  j_620759173 = addInt(j_620759173, 1);
                }
            } while (false);
            if ((isNumber_620759180 == 1)) {
            F.line = 2708;
            if (!(negative_620759175)) {
            Temporary10 = subInt(k_620759174, 1);
            }
            else {
            Temporary10 = subInt((a_620759122).length, k_620759174);
            }
            
            var idx_620759202 = Temporary10;
              if ((idx_620759202 < 0)) Temporary11 = true; else {                Temporary11 = ((a_620759122).length - 1 < idx_620759202);              }            if (Temporary11) {
            F.line = 2709;
            invalidFormatString_620759117();
            }
            
            F.line = 2710;
            s_620759120[s_620759120_Idx].push.apply(s_620759120[s_620759120_Idx], a_620759122[chckIndx(idx_620759202, 0, (a_620759122).length - 1)]);;
            }
            else {
              F.line = 2712;
              var x_620759206 = findNormalized_620759105(substr_33557906(formatstr_620759121, addInt(i_620759124, 2), subInt(j_620759173, 1)), a_620759122);
                if (!(0 <= x_620759206)) Temporary12 = false; else {                  Temporary12 = (x_620759206 < (a_620759122).length - 1);                }              if (Temporary12) {
              F.line = 2713;
              s_620759120[s_620759120_Idx].push.apply(s_620759120[s_620759120_Idx], a_620759122[chckIndx(addInt(x_620759206, 1), 0, (a_620759122).length - 1)]);;
              }
              else {
                F.line = 2714;
              invalidFormatString_620759117();
              }
              
            }
            
            F.line = 2715;
            i_620759124 = addInt(j_620759173, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            F.line = 2717;
            var j_620759210 = addInt(i_620759124, 1);
            Label13: do {
              F.line = 2718;
                Label14: while (true) {
                  if (!(j_620759210 < (formatstr_620759121).length)) Temporary15 = false; else {                    Temporary15 = (ConstSet22[formatstr_620759121[chckIndx(j_620759210, 0, (formatstr_620759121).length - 1)]] != undefined);                  }                if (!Temporary15) break Label14;
                  F.line = 2718;
                  j_620759210 = addInt(j_620759210, 1);
                }
            } while (false);
            F.line = 2719;
            var x_620759219 = findNormalized_620759105(substr_33557906(formatstr_620759121, addInt(i_620759124, 1), subInt(j_620759210, 1)), a_620759122);
              if (!(0 <= x_620759219)) Temporary16 = false; else {                Temporary16 = (x_620759219 < (a_620759122).length - 1);              }            if (Temporary16) {
            F.line = 2720;
            s_620759120[s_620759120_Idx].push.apply(s_620759120[s_620759120_Idx], a_620759122[chckIndx(addInt(x_620759219, 1), 0, (a_620759122).length - 1)]);;
            }
            else {
              F.line = 2721;
            invalidFormatString_620759117();
            }
            
            F.line = 2722;
            i_620759124 = j_620759210;
            break;
          default: 
            F.line = 2724;
            invalidFormatString_620759117();
            break;
          }
          }
          else {
            F.line = 2726;
            addChar(s_620759120[s_620759120_Idx], formatstr_620759121[chckIndx(i_620759124, 0, (formatstr_620759121).length - 1)]);;
            F.line = 2727;
            i_620759124 = addInt(i_620759124, 1);
          }
          
        }
    } while (false);
  framePtr = F.prev;

  
}

function nsuFormatOpenArray(formatstr_620759228, a_620759229) {
  var result_620759230 = [[]];

  var F = {procname: "strutils.%", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 2774;
    result_620759230[0] = nimCopy(null, mnewString(0), NTI33554439);
    F.line = 2775;
    nsuAddf(result_620759230, 0, formatstr_620759228, a_620759229);
  framePtr = F.prev;

  return result_620759230[0];

}

function addQuoted_1342182744(s_1342182746, s_1342182746_Idx, x_1342182747) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 2933;
    s_1342182746[s_1342182746_Idx].push.apply(s_1342182746[s_1342182746_Idx], reprEnum(x_1342182747, NTI1342177283));;
  framePtr = F.prev;

  
}

function collectionToString_1342182712(x_1342182714, prefix_1342182715, separator_1342182716, suffix_1342182717) {
  var result_1342182718 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 121;
    result_1342182718[0] = nimCopy(null, prefix_1342182715, NTI33554439);
    F.line = 122;
    var firstElement_1342182719 = true;
    Label1: do {
      F.line = 123;
      var value_1342182740 = 0;
      F.line = 52;
      var i_436209090 = 0;
      Label2: do {
        F.line = 53;
          Label3: while (true) {
          if (!(i_436209090 <= 6)) break Label3;
            if ((x_1342182714[i_436209090] != undefined)) {
            F.line = 123;
            value_1342182740 = i_436209090;
            if (firstElement_1342182719) {
            F.line = 125;
            firstElement_1342182719 = false;
            }
            else {
              F.line = 127;
            result_1342182718[0].push.apply(result_1342182718[0], separator_1342182716);;
            }
            
            F.line = 123;
            addQuoted_1342182744(result_1342182718, 0, value_1342182740);
            }
            
            F.line = 55;
            i_436209090 += 1;
          }
      } while (false);
    } while (false);
    F.line = 137;
    result_1342182718[0].push.apply(result_1342182718[0], suffix_1342182717);;
  framePtr = F.prev;

  return result_1342182718[0];

}

function HEX24_1342182708(x_1342182710) {
  var result_1342182711 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 140;
    result_1342182711 = nimCopy(null, collectionToString_1342182712(x_1342182710, makeNimstrLit("{"), makeNimstrLit(", "), makeNimstrLit("}")), NTI33554439);
  framePtr = F.prev;

  return result_1342182711;

}

function len_1342180269(n_1342180270) {
      var Temporary1;
      var Temporary2;

  var result_1342180271 = 0;

  var F = {procname: "json.len", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 505;
    switch (n_1342180270.kind) {
    case 6:
      F.line = 506;
      var Temporary1 = n_1342180270;
      if (ConstSet27[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
      result_1342180271 = (Temporary1.elems).length;
      break;
    case 5:
      F.line = 507;
      var Temporary2 = n_1342180270;
      if (ConstSet28[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1342177283)); }
      result_1342180271 = len_1342179420(Temporary2.fields);
      break;
    default: 
      break;
    }
  framePtr = F.prev;

  return result_1342180271;

}

function initFromJson_1342182629(dst_1342182630, dst_1342182630_Idx, jsonNode_1342182631, jsonPath_1342182632, jsonPath_1342182632_Idx) {
      var Temporary1;

  var F = {procname: "json.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (HEX3DHEX3D_1342179332(jsonNode_1342182631, null)) {
    F.line = 1050;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_1342182632[jsonPath_1342182632_Idx] || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet31[jsonNode_1342182631.kind] != undefined))) {
    F.line = 1052;
    var msgHEX60gensym98_1342182765 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1342182708(ConstSet32), nimCopy(null, jsonPath_1342182632[jsonPath_1342182632_Idx], NTI33554439), reprEnum(jsonNode_1342182631.kind, NTI1342177283)]);
    F.line = 1057;
    raiseException({message: nimCopy(null, msgHEX60gensym98_1342182765, NTI33554439), parent: null, m_type: NTI1392508936, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1342182631.kind == 0)) {
    F.line = 1097;
    dst_1342182630[dst_1342182630_Idx] = nimCopy(null, [], NTI33554439);
    }
    else {
      F.line = 1099;
      var Temporary1 = jsonNode_1342182631;
      if (ConstSet33[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
      dst_1342182630[dst_1342182630_Idx] = nimCopy(null, Temporary1.str, NTI33554439);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1342180402(node_1342180403, index_1342180404) {
    var Temporary1;
    var Temporary2;

  var result_1342180405 = null;

  var F = {procname: "json.[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!(!((node_1342180403 == null)))) {
    F.line = 523;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(523, 9) `not isNil(node)` "));
    }
    
    if (!((node_1342180403.kind == 6))) {
    F.line = 524;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(524, 9) `node.kind == JArray` "));
    }
    
    F.line = 525;
    var Temporary1 = node_1342180403;
    if (ConstSet34[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
    result_1342180405 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1342180404, 0, (Temporary2).length - 1)];
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1342180405;

}

function initFromJson_436208846(dst_436208848, dst_436208848_Idx, jsonNode_436208849, jsonPath_436208850, jsonPath_436208850_Idx) {
    var Temporary1;

  var F = {procname: "initFromJson.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (HEX3DHEX3D_1342179332(jsonNode_436208849, null)) {
    F.line = 1050;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_436208850[jsonPath_436208850_Idx] || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet29[jsonNode_436208849.kind] != undefined))) {
    F.line = 1052;
    var msgHEX60gensym29_436208863 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1342182708(ConstSet30), nimCopy(null, jsonPath_436208850[jsonPath_436208850_Idx], NTI33554439), reprEnum(jsonNode_436208849.kind, NTI1342177283)]);
    F.line = 1057;
    raiseException({message: nimCopy(null, msgHEX60gensym29_436208863, NTI33554439), parent: null, m_type: NTI1392508936, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    F.line = 1151;
    if (dst_436208848[dst_436208848_Idx].length < (Temporary1 = chckRange(len_1342180269(jsonNode_436208849), 0, 2147483647), Temporary1)) { for (var i = dst_436208848[dst_436208848_Idx].length ; i < Temporary1 ; ++i) dst_436208848[dst_436208848_Idx].push([]); }
               else { dst_436208848[dst_436208848_Idx].length = Temporary1; };
    F.line = 1152;
    var orignalJsonPathLen_436208869 = (jsonPath_436208850[jsonPath_436208850_Idx]).length;
    Label2: do {
      F.line = 1153;
      var i_436208874 = 0;
      F.line = 117;
      var colontmp__436209097 = 0;
      F.line = 1153;
      colontmp__436209097 = len_1342180269(jsonNode_436208849);
      F.line = 119;
      var i_436209098 = 0;
      Label3: do {
        F.line = 120;
          Label4: while (true) {
          if (!(i_436209098 < colontmp__436209097)) break Label4;
            F.line = 1153;
            i_436208874 = i_436209098;
            F.line = 1153;
            addChar(jsonPath_436208850[jsonPath_436208850_Idx], 91);;
            F.line = 1153;
            addInt_251658457(jsonPath_436208850, jsonPath_436208850_Idx, i_436208874);
            F.line = 1153;
            addChar(jsonPath_436208850[jsonPath_436208850_Idx], 93);;
            F.line = 1153;
            initFromJson_1342182629(dst_436208848[dst_436208848_Idx], chckIndx(i_436208874, 0, (dst_436208848[dst_436208848_Idx]).length - 1), HEX5BHEX5D_1342180402(jsonNode_436208849, i_436208874), jsonPath_436208850, jsonPath_436208850_Idx);
            F.line = 1153;
            (jsonPath_436208850[jsonPath_436208850_Idx].length = chckRange(orignalJsonPathLen_436208869, 0, 2147483647));
            F.line = 122;
            i_436209098 = addInt(i_436209098, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function initFromJson_436208817(dst_436208819, dst_436208819_Idx, jsonNode_436208820, jsonPath_436208821, jsonPath_436208821_Idx) {
    var Temporary1;

  var F = {procname: "initFromJson.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (HEX3DHEX3D_1342179332(jsonNode_436208820, null)) {
    F.line = 1050;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_436208821[jsonPath_436208821_Idx] || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet25[jsonNode_436208820.kind] != undefined))) {
    F.line = 1052;
    var msgHEX60gensym25_436208834 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1342182708(ConstSet26), nimCopy(null, jsonPath_436208821[jsonPath_436208821_Idx], NTI33554439), reprEnum(jsonNode_436208820.kind, NTI1342177283)]);
    F.line = 1057;
    raiseException({message: nimCopy(null, msgHEX60gensym25_436208834, NTI33554439), parent: null, m_type: NTI1392508936, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    F.line = 1151;
    if (dst_436208819[dst_436208819_Idx].length < (Temporary1 = chckRange(len_1342180269(jsonNode_436208820), 0, 2147483647), Temporary1)) { for (var i = dst_436208819[dst_436208819_Idx].length ; i < Temporary1 ; ++i) dst_436208819[dst_436208819_Idx].push([]); }
               else { dst_436208819[dst_436208819_Idx].length = Temporary1; };
    F.line = 1152;
    var orignalJsonPathLen_436208840 = (jsonPath_436208821[jsonPath_436208821_Idx]).length;
    Label2: do {
      F.line = 1153;
      var i_436208845 = 0;
      F.line = 117;
      var colontmp__436209093 = 0;
      F.line = 1153;
      colontmp__436209093 = len_1342180269(jsonNode_436208820);
      F.line = 119;
      var i_436209094 = 0;
      Label3: do {
        F.line = 120;
          Label4: while (true) {
          if (!(i_436209094 < colontmp__436209093)) break Label4;
            F.line = 1153;
            i_436208845 = i_436209094;
            F.line = 1153;
            addChar(jsonPath_436208821[jsonPath_436208821_Idx], 91);;
            F.line = 1153;
            addInt_251658457(jsonPath_436208821, jsonPath_436208821_Idx, i_436208845);
            F.line = 1153;
            addChar(jsonPath_436208821[jsonPath_436208821_Idx], 93);;
            F.line = 1153;
            initFromJson_436208846(dst_436208819[dst_436208819_Idx], chckIndx(i_436208845, 0, (dst_436208819[dst_436208819_Idx]).length - 1), HEX5BHEX5D_1342180402(jsonNode_436208820, i_436208845), jsonPath_436208821, jsonPath_436208821_Idx);
            F.line = 1153;
            (jsonPath_436208821[jsonPath_436208821_Idx].length = chckRange(orignalJsonPathLen_436208840, 0, 2147483647));
            F.line = 122;
            i_436209094 = addInt(i_436209094, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGet_956301585(t_956301588, key_956301589, hc_956301590, hc_956301590_Idx) {
            var Temporary3;

  var result_956301591 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956301590[hc_956301590_Idx] = hash_637534657(key_956301589);
    if ((hc_956301590[hc_956301590_Idx] == 0)) {
    F.line = 66;
    hc_956301590[hc_956301590_Idx] = 314159265;
    }
    
    if (((t_956301588.data).length == 0)) {
    F.line = 48;
    result_956301591 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956301643 = (hc_956301590[hc_956301590_Idx] & (t_956301588.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956301588.data[chckIndx(h_956301643, 0, (t_956301588.data).length - 1)].Field0)) break Label2;
            if (!(t_956301588.data[chckIndx(h_956301643, 0, (t_956301588.data).length - 1)].Field0 == hc_956301590[hc_956301590_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956301588.data[chckIndx(h_956301643, 0, (t_956301588.data).length - 1)].Field1, key_956301589);            }          if (Temporary3) {
          F.line = 56;
          result_956301591 = h_956301643;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956301643 = nextTry_570425378(h_956301643, (t_956301588.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956301591 = subInt(-1, h_956301643);
  } while (false);
  framePtr = F.prev;

  return result_956301591;

}

function mustRehash_436207900(t_436207902) {
  var result_436207903 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_436207902.counter < (t_436207902.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_436207903 = ((mulInt((t_436207902.data).length, 2) < mulInt(t_436207902.counter, 3)) || (subInt((t_436207902.data).length, t_436207902.counter) < 4));
  framePtr = F.prev;

  return result_436207903;

}

function rawInsert_436208349(t_436208353, data_436208354, data_436208354_Idx, key_436208355, val_436208356, hc_436208357, h_436208358) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_436208354[data_436208354_Idx][chckIndx(h_436208358, 0, (data_436208354[data_436208354_Idx]).length - 1)].Field1 = nimCopy(null, key_436208355, NTI33554439);
    F.line = 23;
    data_436208354[data_436208354_Idx][chckIndx(h_436208358, 0, (data_436208354[data_436208354_Idx]).length - 1)].Field2 = nimCopy(null, val_436208356, NTI956301315);
    F.line = 24;
    data_436208354[data_436208354_Idx][chckIndx(h_436208358, 0, (data_436208354[data_436208354_Idx]).length - 1)].Field0 = hc_436208357;
  framePtr = F.prev;

  
}

function enlarge_436208055(t_436208058) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_436208061 = [];
    F.line = 250;
    n_436208061 = new Array(chckRange(mulInt((t_436208058.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_436208058.data).length, 2), 0, 2147483647) ; ++i) { n_436208061[i] = {Field0: 0, Field1: [], Field2: []}; }    F.line = 251;
    var Temporary1 = t_436208058.data; t_436208058.data = n_436208061; n_436208061 = Temporary1;    Label2: do {
      F.line = 252;
      var i_436208125 = 0;
      F.line = 43;
      var colontmp__436209103 = 0;
      F.line = 252;
      colontmp__436209103 = (n_436208061).length - 1;
      F.line = 65;
      var res_436209105 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436209105 <= colontmp__436209103)) break Label4;
            F.line = 252;
            i_436208125 = res_436209105;
            F.line = 253;
            var eh_436208179 = n_436208061[chckIndx(i_436208125, 0, (n_436208061).length - 1)].Field0;
            if (isFilled_570425375(eh_436208179)) {
            F.line = 255;
            var j_436208183 = (eh_436208179 & (t_436208058.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_570425375(t_436208058.data[chckIndx(j_436208183, 0, (t_436208058.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_436208183 = nextTry_570425378(j_436208183, (t_436208058.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_436208349(t_436208058, t_436208058, "data", n_436208061[chckIndx(i_436208125, 0, (n_436208061).length - 1)].Field1, n_436208061[chckIndx(i_436208125, 0, (n_436208061).length - 1)].Field2, eh_436208179, j_436208183);
            }
            
            F.line = 68;
            res_436209105 = addInt(res_436209105, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_436208518(t_436208521, key_436208522, hc_436208523) {
  var result_436208524 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_436208521.data).length == 0)) {
    F.line = 48;
    result_436208524 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_436208575 = (hc_436208523 & (t_436208521.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_436208521.data[chckIndx(h_436208575, 0, (t_436208521.data).length - 1)].Field0)) break Label2;
          if (((t_436208521.data[chckIndx(h_436208575, 0, (t_436208521.data).length - 1)].Field0 == hc_436208523) && eqStrings(t_436208521.data[chckIndx(h_436208575, 0, (t_436208521.data).length - 1)].Field1, key_436208522))) {
          F.line = 56;
          result_436208524 = h_436208575;
          break BeforeRet;
          }
          
          F.line = 57;
          h_436208575 = nextTry_570425378(h_436208575, (t_436208521.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_436208524 = subInt(-1, h_436208575);
  } while (false);
  framePtr = F.prev;

  return result_436208524;

}

function mgetOrPut_436207779(t_436207782, key_436207783, val_436207784) {
  var result_436207785 = null;
  var result_436207785_Idx = 0;

  var F = {procname: "mgetOrPut.mgetOrPut", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    if (((t_436207782.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym14_436207834 = slotsNeeded_570425386(32);
    F.line = 167;
    t_436207782.counter = 0;
    F.line = 168;
    t_436207782.data = new Array(chckRange(correctSizeHEX60gensym14_436207834, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym14_436207834, 0, 2147483647) ; ++i) { t_436207782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    F.line = 64;
    var hc_436207839 = [0];
    F.line = 65;
    var index_436207846 = rawGet_956301585(t_436207782, key_436207783, hc_436207839, 0);
    if ((index_436207846 < 0)) {
    if (((t_436207782.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym17_436207895 = slotsNeeded_570425386(32);
    F.line = 167;
    t_436207782.counter = 0;
    F.line = 168;
    t_436207782.data = new Array(chckRange(correctSizeHEX60gensym17_436207895, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym17_436207895, 0, 2147483647) ; ++i) { t_436207782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    if (mustRehash_436207900(t_436207782)) {
    F.line = 49;
    enlarge_436208055(t_436207782);
    F.line = 50;
    index_436207846 = rawGetKnownHC_436208518(t_436207782, key_436207783, hc_436207839[0]);
    }
    
    F.line = 51;
    index_436207846 = subInt(-1, index_436207846);
    F.line = 52;
    rawInsert_436208349(t_436207782, t_436207782, "data", key_436207783, val_436207784, hc_436207839[0], index_436207846);
    F.line = 68;
    t_436207782.counter = addInt(t_436207782.counter, 1);
    }
    
    F.line = 70;
    result_436207785 = t_436207782.data[chckIndx(index_436207846, 0, (t_436207782.data).length - 1)]; result_436207785_Idx = "Field2";
  framePtr = F.prev;

  return [result_436207785, result_436207785_Idx];

}

function HEX5BHEX5D_1342180323(node_1342180324, name_1342180325) {
    var Temporary1;
    var Temporary2;

  var result_1342180326 = null;

  var F = {procname: "json.[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (!(!((node_1342180324 == null)))) {
    F.line = 513;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(513, 9) `not isNil(node)` "));
    }
    
    if (!((node_1342180324.kind == 5))) {
    F.line = 514;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(514, 9) `node.kind == JObject` "));
    }
    
    F.line = 517;
    var Temporary1 = node_1342180324;
    if (ConstSet35[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
    result_1342180326 = (Temporary2 = HEX5BHEX5D_1342179918(Temporary1.fields, name_1342180325), Temporary2)[0][Temporary2[1]];
  framePtr = F.prev;

  return result_1342180326;

}

function initFromJson_436207712(dst_436207714, jsonNode_436207715, jsonPath_436207716, jsonPath_436207716_Idx) {
      var Temporary2;
            var Temporary5;

  var F = {procname: "initFromJson.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 1171;
    dst_436207714 = nimCopy(dst_436207714, initTable_436207717(32), NTI956301423);
    if (HEX3DHEX3D_1342179332(jsonNode_436207715, null)) {
    F.line = 1050;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_436207716[jsonPath_436207716_Idx] || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet17[jsonNode_436207715.kind] != undefined))) {
    F.line = 1052;
    var msgHEX60gensym9_436207740 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1342182708(ConstSet23), nimCopy(null, jsonPath_436207716[jsonPath_436207716_Idx], NTI33554439), reprEnum(jsonNode_436207715.kind, NTI1342177283)]);
    F.line = 1057;
    raiseException({message: nimCopy(null, msgHEX60gensym9_436207740, NTI33554439), parent: null, m_type: NTI1392508936, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    F.line = 1173;
    var originalJsonPathLen_436207742 = (jsonPath_436207716[jsonPath_436207716_Idx]).length;
    Label1: do {
      F.line = 1174;
      var key_436207747 = [];
      F.line = 1744;
      var colontmp__436209043 = ({data: [], counter: 0, first: 0, last: 0});
      F.line = 1174;
      var Temporary2 = jsonNode_436207715;
      if (ConstSet24[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1342177283)); }
      colontmp__436209043 = nimCopy(colontmp__436209043, Temporary2.fields, NTI1342177294);
      F.line = 1760;
      var L_436209045 = len_1342179420(colontmp__436209043);
      if ((0 < colontmp__436209043.counter)) {
      F.line = 1299;
      var h_436209046 = colontmp__436209043.first;
      Label3: do {
        F.line = 1300;
          Label4: while (true) {
          if (!(0 <= h_436209046)) break Label4;
            F.line = 1301;
            var nxt_436209048 = colontmp__436209043.data[chckIndx(h_436209046, 0, (colontmp__436209043.data).length - 1)].Field1;
            if (isFilled_570425375(colontmp__436209043.data[chckIndx(h_436209046, 0, (colontmp__436209043.data).length - 1)].Field0)) {
            F.line = 1174;
            key_436207747 = colontmp__436209043.data[chckIndx(h_436209046, 0, (colontmp__436209043.data).length - 1)]["Field2"];
            F.line = 1174;
            addChar(jsonPath_436207716[jsonPath_436207716_Idx], 46);;
            F.line = 1174;
            jsonPath_436207716[jsonPath_436207716_Idx].push.apply(jsonPath_436207716[jsonPath_436207716_Idx], key_436207747);;
            F.line = 1174;
            initFromJson_436208817((Temporary5 = mgetOrPut_436207779(dst_436207714, key_436207747, []), Temporary5)[0], Temporary5[1], HEX5BHEX5D_1342180323(jsonNode_436207715, key_436207747), jsonPath_436207716, jsonPath_436207716_Idx);
            F.line = 1174;
            (jsonPath_436207716[jsonPath_436207716_Idx].length = chckRange(originalJsonPathLen_436207742, 0, 2147483647));
            if (!((len_1342179420(colontmp__436209043) == L_436209045))) {
            F.line = 1763;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1763, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436209046 = nxt_436209048;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  
}

function getOrDefault_1342180681(t_1342180684, key_1342180685) {
  var result_1342180686 = null;

  var F = {procname: "getOrDefault.getOrDefault", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 181;
    var hcHEX60gensym58_1342180689 = [0];
    F.line = 182;
    var indexHEX60gensym58_1342180696 = rawGet_1342179925(t_1342180684, key_1342180685, hcHEX60gensym58_1342180689, 0);
    if ((0 <= indexHEX60gensym58_1342180696)) {
    F.line = 183;
    result_1342180686 = t_1342180684.data[chckIndx(indexHEX60gensym58_1342180696, 0, (t_1342180684.data).length - 1)].Field3;
    }
    
  framePtr = F.prev;

  return result_1342180686;

}

function getOrDefault_1342180774(node_1342180775, key_1342180776) {
      var Temporary1;
    var Temporary2;

  var result_1342180777 = null;

  var F = {procname: "json.getOrDefault", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
      if (!!((node_1342180775 == null))) Temporary1 = false; else {        Temporary1 = (node_1342180775.kind == 5);      }    if (Temporary1) {
    F.line = 605;
    var Temporary2 = node_1342180775;
    if (ConstSet36[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1342177283)); }
    result_1342180777 = getOrDefault_1342180681(Temporary2.fields, key_1342180776);
    }
    
  framePtr = F.prev;

  return result_1342180777;

}

function initFromJson_436209003(dst_436209005, dst_436209005_Idx, jsonNode_436209006, jsonPath_436209007, jsonPath_436209007_Idx) {
    var Temporary1;

  var F = {procname: "initFromJson.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (HEX3DHEX3D_1342179332(jsonNode_436209006, null)) {
    F.line = 1050;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_436209007[jsonPath_436209007_Idx] || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet39[jsonNode_436209006.kind] != undefined))) {
    F.line = 1052;
    var msgHEX60gensym37_436209024 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1342182708(ConstSet40), nimCopy(null, jsonPath_436209007[jsonPath_436209007_Idx], NTI33554439), reprEnum(jsonNode_436209006.kind, NTI1342177283)]);
    F.line = 1057;
    raiseException({message: nimCopy(null, msgHEX60gensym37_436209024, NTI33554439), parent: null, m_type: NTI1392508936, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    F.line = 1121;
    var Temporary1 = jsonNode_436209006;
    if (ConstSet41[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
    dst_436209005[dst_436209005_Idx] = Temporary1.num;
  framePtr = F.prev;

  
}

function initFromJson_436208974(dst_436208976, dst_436208976_Idx, jsonNode_436208977, jsonPath_436208978, jsonPath_436208978_Idx) {
    var Temporary1;

  var F = {procname: "initFromJson.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (HEX3DHEX3D_1342179332(jsonNode_436208977, null)) {
    F.line = 1050;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(jsonPath_436208978[jsonPath_436208978_Idx] || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet37[jsonNode_436208977.kind] != undefined))) {
    F.line = 1052;
    var msgHEX60gensym33_436208991 = nsuFormatOpenArray(makeNimstrLit("Incorrect JSON kind. Wanted \'$1\' in \'$2\' but got \'$3\'."), [HEX24_1342182708(ConstSet38), nimCopy(null, jsonPath_436208978[jsonPath_436208978_Idx], NTI33554439), reprEnum(jsonNode_436208977.kind, NTI1342177283)]);
    F.line = 1057;
    raiseException({message: nimCopy(null, msgHEX60gensym33_436208991, NTI33554439), parent: null, m_type: NTI1392508936, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    F.line = 1151;
    if (dst_436208976[dst_436208976_Idx].length < (Temporary1 = chckRange(len_1342180269(jsonNode_436208977), 0, 2147483647), Temporary1)) { for (var i = dst_436208976[dst_436208976_Idx].length ; i < Temporary1 ; ++i) dst_436208976[dst_436208976_Idx].push(0); }
               else { dst_436208976[dst_436208976_Idx].length = Temporary1; };
    F.line = 1152;
    var orignalJsonPathLen_436208997 = (jsonPath_436208978[jsonPath_436208978_Idx]).length;
    Label2: do {
      F.line = 1153;
      var i_436209002 = 0;
      F.line = 117;
      var colontmp__436209109 = 0;
      F.line = 1153;
      colontmp__436209109 = len_1342180269(jsonNode_436208977);
      F.line = 119;
      var i_436209110 = 0;
      Label3: do {
        F.line = 120;
          Label4: while (true) {
          if (!(i_436209110 < colontmp__436209109)) break Label4;
            F.line = 1153;
            i_436209002 = i_436209110;
            F.line = 1153;
            addChar(jsonPath_436208978[jsonPath_436208978_Idx], 91);;
            F.line = 1153;
            addInt_251658457(jsonPath_436208978, jsonPath_436208978_Idx, i_436209002);
            F.line = 1153;
            addChar(jsonPath_436208978[jsonPath_436208978_Idx], 93);;
            F.line = 1153;
            initFromJson_436209003(dst_436208976[dst_436208976_Idx], chckIndx(i_436209002, 0, (dst_436208976[dst_436208976_Idx]).length - 1), HEX5BHEX5D_1342180402(jsonNode_436208977, i_436209002), jsonPath_436208978, jsonPath_436208978_Idx);
            F.line = 1153;
            (jsonPath_436208978[jsonPath_436208978_Idx].length = chckRange(orignalJsonPathLen_436208997, 0, 2147483647));
            F.line = 122;
            i_436209110 = addInt(i_436209110, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function initFromJson_436207663(dst_436207665, jsonNode_436207666, jsonPath_436207667, jsonPath_436207667_Idx) {
  var F = {procname: "initFromJson.initFromJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 1315;
    var originalJsonPathLen_436207669 = (jsonPath_436207667[jsonPath_436207667_Idx]).length;
    F.line = 1248;
    jsonPath_436207667[jsonPath_436207667_Idx].push.apply(jsonPath_436207667[jsonPath_436207667_Idx], makeNimstrLit(".A"));;
    F.line = 1258;
    initFromJson_436207712(dst_436207665.Field0, getOrDefault_1342180774(jsonNode_436207666, makeNimstrLit("A")), jsonPath_436207667, jsonPath_436207667_Idx);
    F.line = 1259;
    (jsonPath_436207667[jsonPath_436207667_Idx].length = chckRange(originalJsonPathLen_436207669, 0, 2147483647));
    F.line = 1248;
    jsonPath_436207667[jsonPath_436207667_Idx].push.apply(jsonPath_436207667[jsonPath_436207667_Idx], makeNimstrLit(".B"));;
    F.line = 1258;
    initFromJson_436207712(dst_436207665.Field1, getOrDefault_1342180774(jsonNode_436207666, makeNimstrLit("B")), jsonPath_436207667, jsonPath_436207667_Idx);
    F.line = 1259;
    (jsonPath_436207667[jsonPath_436207667_Idx].length = chckRange(originalJsonPathLen_436207669, 0, 2147483647));
    F.line = 1248;
    jsonPath_436207667[jsonPath_436207667_Idx].push.apply(jsonPath_436207667[jsonPath_436207667_Idx], makeNimstrLit(".C"));;
    F.line = 1258;
    initFromJson_436208817(dst_436207665, "Field2", getOrDefault_1342180774(jsonNode_436207666, makeNimstrLit("C")), jsonPath_436207667, jsonPath_436207667_Idx);
    F.line = 1259;
    (jsonPath_436207667[jsonPath_436207667_Idx].length = chckRange(originalJsonPathLen_436207669, 0, 2147483647));
    F.line = 1248;
    jsonPath_436207667[jsonPath_436207667_Idx].push.apply(jsonPath_436207667[jsonPath_436207667_Idx], makeNimstrLit(".Gamma"));;
    F.line = 1258;
    initFromJson_436208846(dst_436207665, "Field3", getOrDefault_1342180774(jsonNode_436207666, makeNimstrLit("Gamma")), jsonPath_436207667, jsonPath_436207667_Idx);
    F.line = 1259;
    (jsonPath_436207667[jsonPath_436207667_Idx].length = chckRange(originalJsonPathLen_436207669, 0, 2147483647));
    F.line = 1248;
    jsonPath_436207667[jsonPath_436207667_Idx].push.apply(jsonPath_436207667[jsonPath_436207667_Idx], makeNimstrLit(".iniStates"));;
    F.line = 1258;
    initFromJson_436208974(dst_436207665, "Field4", getOrDefault_1342180774(jsonNode_436207666, makeNimstrLit("iniStates")), jsonPath_436207667, jsonPath_436207667_Idx);
    F.line = 1259;
    (jsonPath_436207667[jsonPath_436207667_Idx].length = chckRange(originalJsonPathLen_436207669, 0, 2147483647));
    F.line = 1248;
    jsonPath_436207667[jsonPath_436207667_Idx].push.apply(jsonPath_436207667[jsonPath_436207667_Idx], makeNimstrLit(".accStates"));;
    F.line = 1258;
    initFromJson_436208974(dst_436207665, "Field5", getOrDefault_1342180774(jsonNode_436207666, makeNimstrLit("accStates")), jsonPath_436207667, jsonPath_436207667_Idx);
    F.line = 1259;
    (jsonPath_436207667[jsonPath_436207667_Idx].length = chckRange(originalJsonPathLen_436207669, 0, 2147483647));
  framePtr = F.prev;

  
}

function to_436207656(node_436207659) {
  var result_436207661 = [{Field0: ({data: [], counter: 0}), Field1: ({data: [], counter: 0}), Field2: [], Field3: [], Field4: [], Field5: []}];

  var F = {procname: "to.to", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 1361;
    var jsonPath_436207662 = [[]];
    F.line = 1362;
    initFromJson_436207663(result_436207661[0], node_436207659, jsonPath_436207662, 0);
  framePtr = F.prev;

  return result_436207661[0];

}

function getVarType_1342182551(x_1342182552, isRawNumber_1342182553, isRawNumber_1342182553_Idx) {
        var Temporary1;

  var result_1342182554 = 0;

  var F = {procname: "json.getVarType", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 964;
    result_1342182554 = 0;
    F.line = 965;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1342182552)))) {
    case "[object Array]":
      F.line = 966;
      result_1342182554 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      F.line = 967;
      result_1342182554 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1342182552)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1342182552) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1342182552)) {
      F.line = 971;
      result_1342182554 = 2;
      break BeforeRet;
      }
      else {
        F.line = 973;
        isRawNumber_1342182553[isRawNumber_1342182553_Idx] = true;
        F.line = 974;
        result_1342182554 = 4;
        break BeforeRet;
      }
      
      }
      else {
        F.line = 976;
        result_1342182554 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      F.line = 977;
      result_1342182554 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      F.line = 978;
      result_1342182554 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      F.line = 979;
      result_1342182554 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      F.line = 980;
      failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(980, 18) `false` "));
      }
      
      break;
    }
  } while (false);
  framePtr = F.prev;

  return result_1342182554;

}

function newJArray_1342177403() {
  var result_1342177404 = null;

  var F = {procname: "json.newJArray", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 244;
    result_1342177404 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};
  framePtr = F.prev;

  return result_1342177404;

}

function len_1342182572(x_1342182573) {
  var result_1342182574 = 0;

  var F = {procname: "json.len", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 983;
          result_1342182574 = x_1342182573.length;
    
  framePtr = F.prev;

  return result_1342182574;

}

function add_1342177502(father_1342177503, child_1342177504) {
    var Temporary1;

  var F = {procname: "json.add", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (!((father_1342177503.kind == 6))) {
    F.line = 302;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(302, 10) `father.kind == JArray` "));
    }
    
    F.line = 303;
    var Temporary1 = father_1342177503;
    if (ConstSet42[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
    Temporary1.elems.push(child_1342177504);;
  framePtr = F.prev;

  
}

function initOrderedTable_1342177374(initialSize_1342177377) {
  var result_1342177378 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "initOrderedTable.initOrderedTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym0_1342177380 = slotsNeeded_570425386(chckRange(initialSize_1342177377, 0, 2147483647));
    F.line = 167;
    result_1342177378.counter = 0;
    F.line = 168;
    result_1342177378.data = new Array(chckRange(correctSizeHEX60gensym0_1342177380, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1342177380, 0, 2147483647) ; ++i) { result_1342177378.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 170;
    result_1342177378.first = -1;
    F.line = 171;
    result_1342177378.last = -1;
  framePtr = F.prev;

  return result_1342177378;

}

function newJObject_1342177372() {
  var result_1342177373 = null;

  var F = {procname: "json.newJObject", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 240;
    result_1342177373 = {kind: 5, fields: initOrderedTable_1342177374(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};
  framePtr = F.prev;

  return result_1342177373;

}

function mustRehash_1342177976(t_1342177978) {
  var result_1342177979 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_1342177978.counter < (t_1342177978.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_1342177979 = ((mulInt((t_1342177978.data).length, 2) < mulInt(t_1342177978.counter, 3)) || (subInt((t_1342177978.data).length, t_1342177978.counter) < 4));
  framePtr = F.prev;

  return result_1342177979;

}

function rawInsert_1342178550(t_1342178553, data_1342178554, data_1342178554_Idx, key_1342178555, val_1342178556, hc_1342178557, h_1342178558) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_1342178554[data_1342178554_Idx][chckIndx(h_1342178558, 0, (data_1342178554[data_1342178554_Idx]).length - 1)].Field2 = nimCopy(null, key_1342178555, NTI33554439);
    F.line = 23;
    data_1342178554[data_1342178554_Idx][chckIndx(h_1342178558, 0, (data_1342178554[data_1342178554_Idx]).length - 1)].Field3 = val_1342178556;
    F.line = 24;
    data_1342178554[data_1342178554_Idx][chckIndx(h_1342178558, 0, (data_1342178554[data_1342178554_Idx]).length - 1)].Field0 = hc_1342178557;
    F.line = 1275;
    data_1342178554[data_1342178554_Idx][chckIndx(h_1342178558, 0, (data_1342178554[data_1342178554_Idx]).length - 1)].Field1 = -1;
    if ((t_1342178553.first < 0)) {
    F.line = 1276;
    t_1342178553.first = h_1342178558;
    }
    
    if ((0 <= t_1342178553.last)) {
    F.line = 1277;
    data_1342178554[data_1342178554_Idx][chckIndx(t_1342178553.last, 0, (data_1342178554[data_1342178554_Idx]).length - 1)].Field1 = h_1342178558;
    }
    
    F.line = 1278;
    t_1342178553.last = h_1342178558;
  framePtr = F.prev;

  
}

function enlarge_1342178139(t_1342178142) {
          var Temporary6;
          var Temporary7;

  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1281;
    var n_1342178145 = [];
    F.line = 1282;
    n_1342178145 = new Array(chckRange(mulInt((t_1342178142.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1342178142.data).length, 2), 0, 2147483647) ; ++i) { n_1342178145[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 1283;
    var h_1342178197 = t_1342178142.first;
    F.line = 1284;
    t_1342178142.first = -1;
    F.line = 1285;
    t_1342178142.last = -1;
    F.line = 1286;
    var Temporary1 = t_1342178142.data; t_1342178142.data = n_1342178145; n_1342178145 = Temporary1;    Label2: do {
      F.line = 1287;
        Label3: while (true) {
        if (!(0 <= h_1342178197)) break Label3;
          F.line = 1288;
          var nxt_1342178255 = n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field1;
          F.line = 1289;
          var eh_1342178309 = n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field0;
          if (isFilled_570425375(eh_1342178309)) {
          F.line = 1291;
          var j_1342178313 = (eh_1342178309 & (t_1342178142.data).length - 1);
          Label4: do {
            F.line = 1292;
              Label5: while (true) {
              if (!isFilled_570425375(t_1342178142.data[chckIndx(j_1342178313, 0, (t_1342178142.data).length - 1)].Field0)) break Label5;
                F.line = 1293;
                j_1342178313 = nextTry_570425378(j_1342178313, (t_1342178142.data).length - 1);
              }
          } while (false);
          F.line = 1294;
          Temporary6 = n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field2;
          n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field2 = genericReset(n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field2, NTI33554439);
          Temporary7 = n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field3;
          n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field3 = genericReset(n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field3, NTI1342177284);
          rawInsert_1342178550(t_1342178142, t_1342178142, "data", Temporary6, Temporary7, n_1342178145[chckIndx(h_1342178197, 0, (n_1342178145).length - 1)].Field0, j_1342178313);
          }
          
          F.line = 1295;
          h_1342178197 = nxt_1342178255;
        }
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_1342178832(t_1342178835, key_1342178836, hc_1342178837) {
  var result_1342178838 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_1342178835.data).length == 0)) {
    F.line = 48;
    result_1342178838 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1342178889 = (hc_1342178837 & (t_1342178835.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_1342178835.data[chckIndx(h_1342178889, 0, (t_1342178835.data).length - 1)].Field0)) break Label2;
          if (((t_1342178835.data[chckIndx(h_1342178889, 0, (t_1342178835.data).length - 1)].Field0 == hc_1342178837) && eqStrings(t_1342178835.data[chckIndx(h_1342178889, 0, (t_1342178835.data).length - 1)].Field2, key_1342178836))) {
          F.line = 56;
          result_1342178838 = h_1342178889;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1342178889 = nextTry_570425378(h_1342178889, (t_1342178835.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1342178838 = subInt(-1, h_1342178889);
  } while (false);
  framePtr = F.prev;

  return result_1342178838;

}

function HEX5BHEX5DHEX3D_1342177571(t_1342177574, key_1342177575, val_1342177576) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    if (((t_1342177574.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym13_1342177626 = slotsNeeded_570425386(32);
    F.line = 167;
    t_1342177574.counter = 0;
    F.line = 168;
    t_1342177574.data = new Array(chckRange(correctSizeHEX60gensym13_1342177626, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1342177626, 0, 2147483647) ; ++i) { t_1342177574.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    F.line = 170;
    t_1342177574.first = -1;
    F.line = 171;
    t_1342177574.last = -1;
    }
    
    F.line = 57;
    var hc_1342177631 = [0];
    F.line = 58;
    var index_1342177869 = rawGet_1342177640(t_1342177574, key_1342177575, hc_1342177631, 0);
    if ((0 <= index_1342177869)) {
    F.line = 59;
    t_1342177574.data[chckIndx(index_1342177869, 0, (t_1342177574.data).length - 1)].Field3 = val_1342177576;
    }
    else {
      if (((t_1342177574.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym18_1342177971 = slotsNeeded_570425386(32);
      F.line = 167;
      t_1342177574.counter = 0;
      F.line = 168;
      t_1342177574.data = new Array(chckRange(correctSizeHEX60gensym18_1342177971, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1342177971, 0, 2147483647) ; ++i) { t_1342177574.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      F.line = 170;
      t_1342177574.first = -1;
      F.line = 171;
      t_1342177574.last = -1;
      }
      
      if (mustRehash_1342177976(t_1342177574)) {
      F.line = 49;
      enlarge_1342178139(t_1342177574);
      F.line = 50;
      index_1342177869 = rawGetKnownHC_1342178832(t_1342177574, key_1342177575, hc_1342177631[0]);
      }
      
      F.line = 51;
      index_1342177869 = subInt(-1, index_1342177869);
      F.line = 52;
      rawInsert_1342178550(t_1342177574, t_1342177574, "data", key_1342177575, val_1342177576, hc_1342177631[0], index_1342177869);
      F.line = 60;
      t_1342177574.counter = addInt(t_1342177574.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function HEX5BHEX5DHEX3D_1342179209(obj_1342179210, key_1342179211, val_1342179212) {
    var Temporary1;

  var F = {procname: "json.[]=", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    if (!((obj_1342179210.kind == 5))) {
    F.line = 391;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\json.nim(391, 9) `obj.kind == JObject` "));
    }
    
    F.line = 392;
    var Temporary1 = obj_1342179210;
    if (ConstSet43[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1342177283)); }
    HEX5BHEX5DHEX3D_1342177571(Temporary1.fields, key_1342179211, val_1342179212);
  framePtr = F.prev;

  
}

function newJInt_1342177361(n_1342177362) {
  var result_1342177363 = null;

  var F = {procname: "json.newJInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 224;
    result_1342177363 = {kind: 2, num: n_1342177362, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342177363;

}

function newJFloat_1342177364(n_1342177365) {
  var result_1342177366 = null;

  var F = {procname: "json.newJFloat", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 228;
    result_1342177366 = {kind: 3, fnum: n_1342177365, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342177366;

}

function newJRawNumber_1342177355(s_1342177356) {
  var result_1342177357 = null;

  var F = {procname: "json.newJRawNumber", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 216;
    result_1342177357 = {kind: 4, str: nimCopy(null, s_1342177356, NTI33554439), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342177357;

}

function newJString_1342177322(s_1342177323) {
  var result_1342177324 = null;

  var F = {procname: "json.newJString", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 209;
    result_1342177324 = {kind: 4, str: nimCopy(null, s_1342177323, NTI33554439), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342177324;

}

function newJBool_1342177367(b_1342177368) {
  var result_1342177369 = null;

  var F = {procname: "json.newJBool", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 232;
    result_1342177369 = {kind: 1, bval: b_1342177368, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342177369;

}

function newJNull_1342177370() {
  var result_1342177371 = null;

  var F = {procname: "json.newJNull", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 236;
    result_1342177371 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342177371;

}

function convertObject_1342182575(x_1342182576) {
  var result_1342182577 = null;

  var F = {procname: "json.convertObject", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 988;
    var isRawNumber_1342182578 = [false];
    F.line = 989;
    switch (getVarType_1342182551(x_1342182576, isRawNumber_1342182578, 0)) {
    case 6:
      F.line = 991;
      result_1342182577 = newJArray_1342177403();
      Label1: do {
        F.line = 992;
        var i_1342182583 = 0;
        F.line = 117;
        var colontmp__436209113 = 0;
        F.line = 992;
        colontmp__436209113 = len_1342182572(x_1342182576);
        F.line = 119;
        var i_436209114 = 0;
        Label2: do {
          F.line = 120;
            Label3: while (true) {
            if (!(i_436209114 < colontmp__436209113)) break Label3;
              F.line = 992;
              i_1342182583 = i_436209114;
              F.line = 992;
              add_1342177502(result_1342182577, convertObject_1342182575(x_1342182576[i_1342182583]));
              F.line = 122;
              i_436209114 = addInt(i_436209114, 1);
            }
        } while (false);
      } while (false);
      break;
    case 5:
      F.line = 995;
      result_1342182577 = newJObject_1342177372();
      F.line = 996;
      for (var property in x_1342182576) {
        if (x_1342182576.hasOwnProperty(property)) {
      
      F.line = 999;
      var nimProperty_1342182584 = null;
      F.line = 1000;
      var nimValue_1342182585 = null;
      F.line = 1001;
      nimProperty_1342182584 = property; nimValue_1342182585 = x_1342182576[property];
      F.line = 1002;
      HEX5BHEX5DHEX3D_1342179209(result_1342182577, cstrToNimstr(nimProperty_1342182584), convertObject_1342182575(nimValue_1342182585));
      F.line = 1003;
      }}
      break;
    case 2:
      F.line = 1005;
      result_1342182577 = newJInt_1342177361((x_1342182576));
      break;
    case 3:
      F.line = 1007;
      result_1342182577 = newJFloat_1342177364((x_1342182576));
      break;
    case 4:
      if (isRawNumber_1342182578[0]) {
      F.line = 1011;
      var value_1342182594 = null;
      F.line = 1012;
      value_1342182594 = x_1342182576.toString();
      F.line = 1013;
      result_1342182577 = newJRawNumber_1342177355(cstrToNimstr(value_1342182594));
      }
      else {
        F.line = 1015;
        result_1342182577 = newJString_1342177322(cstrToNimstr((x_1342182576)));
      }
      
      break;
    case 1:
      F.line = 1017;
      result_1342182577 = newJBool_1342177367((x_1342182576));
      break;
    case 0:
      F.line = 1019;
      result_1342182577 = newJNull_1342177370();
      break;
    }
  framePtr = F.prev;

  return result_1342182577;

}

function parseJson_1342182603(buffer_1342182604) {
  var result_1342182605 = null;

  var F = {procname: "json.parseJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1025;
    result_1342182605 = convertObject_1342182575(JSON.parse(toJSStr(buffer_1342182604)));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1342182605;

}

function sshow_956301397(mtx_956301398) {
  var result_956301399 = [];

  var F = {procname: "PDA2CFG_separated_re.sshow", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 12;
      var i_956301405 = 0;
      F.line = 12;
      var row_956301406 = [];
      F.line = 168;
      var i_436209135 = 0;
      F.line = 169;
      var L_436209136 = (mtx_956301398).length;
      Label2: do {
        F.line = 170;
          Label3: while (true) {
          if (!(i_436209135 < L_436209136)) break Label3;
            F.line = 12;
            i_956301405 = i_436209135;
            F.line = 12;
            row_956301406 = mtx_956301398[chckIndx(i_436209135, 0, (mtx_956301398).length - 1)];
            F.line = 13;
            var line_956301407 = (makeNimstrLit("[") || []).concat(HEX24_318767107(i_956301405) || [],makeNimstrLit("]") || []);
            Label4: do {
              F.line = 14;
              var j_956301413 = 0;
              F.line = 14;
              var col_956301414 = [];
              F.line = 168;
              var i_436209131 = 0;
              F.line = 169;
              var L_436209132 = (row_956301406).length;
              Label5: do {
                F.line = 170;
                  Label6: while (true) {
                  if (!(i_436209131 < L_436209132)) break Label6;
                    F.line = 14;
                    j_956301413 = i_436209131;
                    F.line = 14;
                    col_956301414 = row_956301406[chckIndx(i_436209131, 0, (row_956301406).length - 1)];
                    F.line = 14;
                    line_956301407.push.apply(line_956301407, (makeNimstrLit(" [") || []).concat(HEX24_318767107(j_956301413) || [],makeNimstrLit("]->") || [],col_956301414 || []));;
                    F.line = 172;
                    i_436209131 = addInt(i_436209131, 1);
                    if (!(((row_956301406).length == L_436209132))) {
                    F.line = 173;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 12;
            result_956301399.push.apply(result_956301399, (line_956301407 || []).concat(makeNimstrLit("\x0A") || []));;
            F.line = 172;
            i_436209135 = addInt(i_436209135, 1);
            if (!(((mtx_956301398).length == L_436209136))) {
            F.line = 173;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956301399;

}

function HEX5BHEX5D_956301578(t_956301581, key_956301582) {
  var result_956301583 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym20_956301584 = [0];
    F.line = 243;
    var indexHEX60gensym20_956301824 = rawGet_956301585(t_956301581, key_956301582, hcHEX60gensym20_956301584, 0);
    if ((0 <= indexHEX60gensym20_956301824)) {
    F.line = 244;
    result_956301583 = nimCopy(null, t_956301581.data[chckIndx(indexHEX60gensym20_956301824, 0, (t_956301581.data).length - 1)].Field2, NTI956301315);
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_956301582);
    }
    
  framePtr = F.prev;

  return result_956301583;

}

function addQuoted_620758268(s_620758270, s_620758270_Idx, x_620758271) {
  var F = {procname: "addQuoted.addQuoted", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 2927;
    addInt_251658457(s_620758270, s_620758270_Idx, x_620758271);
  framePtr = F.prev;

  
}

function collectionToString_956302025(x_956302027, prefix_956302028, separator_956302029, suffix_956302030) {
  var result_956302031 = [[]];

  var F = {procname: "collectionToString.collectionToString", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 121;
    result_956302031[0] = nimCopy(null, prefix_956302028, NTI33554439);
    F.line = 122;
    var firstElement_956302032 = true;
    Label1: do {
      F.line = 123;
      var value_956302054 = 0;
      F.line = 235;
      var i_436209140 = 0;
      F.line = 236;
      var L_436209141 = (x_956302027).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436209140 < L_436209141)) break Label3;
            F.line = 123;
            value_956302054 = x_956302027[i_436209140];
            if (firstElement_956302032) {
            F.line = 125;
            firstElement_956302032 = false;
            }
            else {
              F.line = 127;
            result_956302031[0].push.apply(result_956302031[0], separator_956302029);;
            }
            
            F.line = 123;
            addQuoted_620758268(result_956302031, 0, value_956302054);
            F.line = 239;
            i_436209140 += 1;
            if (!(((x_956302027).length == L_436209141))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 137;
    result_956302031[0].push.apply(result_956302031[0], suffix_956302030);;
  framePtr = F.prev;

  return result_956302031[0];

}

function HEX24_956302021(x_956302023) {
  var result_956302024 = [];

  var F = {procname: "$.$", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\dollars.nim", line: 0};
  framePtr = F;
    F.line = 148;
    result_956302024 = nimCopy(null, collectionToString_956302025(x_956302023, makeNimstrLit("@["), makeNimstrLit(", "), makeNimstrLit("]")), NTI33554439);
  framePtr = F.prev;

  return result_956302024;

}

function sshow_956302077(m_956302078) {
  var result_956302079 = [];

  var F = {procname: "PDA2CFG_separated_re.sshow", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 54;
      var s_956302083 = [];
      F.line = 235;
      var i_436209121 = 0;
      F.line = 236;
      var L_436209122 = (m_956302078.Field3).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436209121 < L_436209122)) break Label3;
            F.line = 54;
            s_956302083 = m_956302078.Field3[chckIndx(i_436209121, 0, (m_956302078.Field3).length - 1)];
            F.line = 54;
            result_956302079.push.apply(result_956302079, (makeNimstrLit("A[") || []).concat(s_956302083 || [],makeNimstrLit("]=\x0A") || [],sshow_956301397(HEX5BHEX5D_956301578(m_956302078.Field0, s_956302083)) || []));;
            F.line = 239;
            i_436209121 = addInt(i_436209121, 1);
            if (!(((m_956302078.Field3).length == L_436209122))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label4: do {
      F.line = 55;
      var s_956302145 = [];
      F.line = 235;
      var i_436209125 = 0;
      F.line = 236;
      var L_436209126 = (m_956302078.Field3).length;
      Label5: do {
        F.line = 237;
          Label6: while (true) {
          if (!(i_436209125 < L_436209126)) break Label6;
            F.line = 55;
            s_956302145 = m_956302078.Field3[chckIndx(i_436209125, 0, (m_956302078.Field3).length - 1)];
            F.line = 55;
            result_956302079.push.apply(result_956302079, (makeNimstrLit("B[") || []).concat(s_956302145 || [],makeNimstrLit("]=\x0A") || [],sshow_956301397(HEX5BHEX5D_956301578(m_956302078.Field1, s_956302145)) || []));;
            F.line = 239;
            i_436209125 = addInt(i_436209125, 1);
            if (!(((m_956302078.Field3).length == L_436209126))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 56;
    result_956302079.push.apply(result_956302079, (makeNimstrLit("C=\x0A") || []).concat(sshow_956301397(m_956302078.Field2) || []));;
    F.line = 57;
    result_956302079.push.apply(result_956302079, (makeNimstrLit("initial states = ") || []).concat(HEX24_956302021(m_956302078.Field4) || [],makeNimstrLit("\x0A") || []));;
    F.line = 58;
    result_956302079.push.apply(result_956302079, (makeNimstrLit("accepting states = ") || []).concat(HEX24_956302021(m_956302078.Field5) || [],makeNimstrLit("\x0A") || []));;
  framePtr = F.prev;

  return result_956302079;

}

function PDAjsontoPDAmtx(readresult_436207652) {
  var result_436207653 = null;

  var F = {procname: "PDAtoCFGjs.PDAjsontoPDAmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 47;
    var pdamtxs_436207654 = cstrToNimstr(readresult_436207652);
    F.line = 48;
    var textarea_436207655 = [];
    F.line = 49;
    m_436207631[0] = nimCopy(m_436207631[0], to_436207656(parseJson_1342182603(pdamtxs_436207654)), NTI956301415);
    F.line = 50;
    textarea_436207655.push.apply(textarea_436207655, makeNimstrLit("Internal PDA matrices:\x0A"));;
    F.line = 51;
    textarea_436207655.push.apply(textarea_436207655, (sshow_956302077(m_436207631[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 52;
    result_436207653 = toJSStr(textarea_436207655);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_436207653;

}
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
F.line = 53;
rawEcho(cstrToNimstr(PDAjsontoPDAmtx(toJSStr(tPDAmtxs_436207623))));
framePtr = F.prev;

function HEX26_436209182(x_436209184, y_436209185) {
  var result_436209186 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 1685;
    result_436209186 = new Array(chckRange(addInt((x_436209184).length, (y_436209185).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_436209184).length, (y_436209185).length), 0, 2147483647) ; ++i) { result_436209186[i] = []; }    Label1: do {
      F.line = 1686;
      var i_436209204 = 0;
      F.line = 75;
      var colontmp__436209710 = 0;
      F.line = 1686;
      colontmp__436209710 = subInt((x_436209184).length, 1);
      F.line = 90;
      var res_436209711 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436209711 <= colontmp__436209710)) break Label3;
            F.line = 1686;
            i_436209204 = res_436209711;
            F.line = 1686;
            result_436209186[chckIndx(i_436209204, 0, (result_436209186).length - 1)] = nimCopy(null, x_436209184[chckIndx(i_436209204, 0, (x_436209184).length - 1)], NTI33554439);
            F.line = 93;
            res_436209711 = addInt(res_436209711, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      F.line = 1688;
      var i_436209212 = 0;
      F.line = 75;
      var colontmp__436209714 = 0;
      F.line = 1688;
      colontmp__436209714 = subInt((y_436209185).length, 1);
      F.line = 90;
      var res_436209715 = 0;
      Label5: do {
        F.line = 91;
          Label6: while (true) {
          if (!(res_436209715 <= colontmp__436209714)) break Label6;
            F.line = 1688;
            i_436209212 = res_436209715;
            F.line = 1688;
            result_436209186[chckIndx(addInt(i_436209212, (x_436209184).length), 0, (result_436209186).length - 1)] = nimCopy(null, y_436209185[chckIndx(i_436209212, 0, (y_436209185).length - 1)], NTI33554439);
            F.line = 93;
            res_436209715 = addInt(res_436209715, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436209186;

}

function map_436209156(s_436209159, op_436209161) {
  var result_436209162 = [];

  var F = {procname: "map.map", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 385;
    result_436209162 = new Array(chckRange((s_436209159).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_436209159).length, 0, 2147483647) ; ++i) { result_436209162[i] = []; }    Label1: do {
      F.line = 386;
      var i_436209177 = 0;
      F.line = 117;
      var colontmp__436209718 = 0;
      F.line = 386;
      colontmp__436209718 = (s_436209159).length;
      F.line = 119;
      var i_436209719 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436209719 < colontmp__436209718)) break Label3;
            F.line = 386;
            i_436209177 = i_436209719;
            F.line = 386;
            result_436209162[chckIndx(i_436209177, 0, (result_436209162).length - 1)] = nimCopy(null, op_436209161(s_436209159[chckIndx(i_436209177, 0, (s_436209159).length - 1)]), NTI33554439);
            F.line = 122;
            i_436209719 = addInt(i_436209719, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436209162;

}

function add_956303976(x_956303978, x_956303978_Idx, y_956303979) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 1308;
    var xl_956303983 = (x_956303978[x_956303978_Idx]).length;
    F.line = 1309;
    if (x_956303978[x_956303978_Idx].length < (Temporary1 = chckRange(addInt(xl_956303983, (y_956303979).length), 0, 2147483647), Temporary1)) { for (var i = x_956303978[x_956303978_Idx].length ; i < Temporary1 ; ++i) x_956303978[x_956303978_Idx].push([]); }
               else { x_956303978[x_956303978_Idx].length = Temporary1; };
    Label2: do {
      F.line = 1310;
      var i_956303998 = 0;
      F.line = 75;
      var colontmp__436209722 = 0;
      F.line = 1310;
      colontmp__436209722 = (y_956303979).length - 1;
      F.line = 90;
      var res_436209723 = 0;
      Label3: do {
        F.line = 91;
          Label4: while (true) {
          if (!(res_436209723 <= colontmp__436209722)) break Label4;
            F.line = 1310;
            i_956303998 = res_436209723;
            F.line = 1310;
            x_956303978[x_956303978_Idx][chckIndx(addInt(xl_956303983, i_956303998), 0, (x_956303978[x_956303978_Idx]).length - 1)] = nimCopy(null, y_956303979[chckIndx(i_956303998, 0, (y_956303979).length - 1)], NTI33554439);
            F.line = 93;
            res_436209723 = addInt(res_436209723, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function map_436209471(s_436209474, op_436209476) {
  var result_436209477 = [];

  var F = {procname: "map.map", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 385;
    result_436209477 = new Array(chckRange((s_436209474).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_436209474).length, 0, 2147483647) ; ++i) { result_436209477[i] = []; }    Label1: do {
      F.line = 386;
      var i_436209492 = 0;
      F.line = 117;
      var colontmp__436209726 = 0;
      F.line = 386;
      colontmp__436209726 = (s_436209474).length;
      F.line = 119;
      var i_436209727 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436209727 < colontmp__436209726)) break Label3;
            F.line = 386;
            i_436209492 = i_436209727;
            F.line = 386;
            result_436209477[chckIndx(i_436209492, 0, (result_436209477).length - 1)] = nimCopy(null, op_436209476(s_436209474[chckIndx(i_436209492, 0, (s_436209474).length - 1)]), NTI33554439);
            F.line = 122;
            i_436209727 = addInt(i_436209727, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436209477;

}

function newSeq_419430869(len_419430871) {
  var result_419430872 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_419430872 = new Array(len_419430871); for (var i = 0 ; i < len_419430871 ; ++i) { result_419430872[i] = []; }  framePtr = F.prev;

  return result_419430872;

}

function filter_956306820(s_956306822, pred_956306824) {
  var result_956306825 = [];

  var F = {procname: "filter.filter", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    result_956306825 = nimCopy(null, newSeq_419430869(0), NTI419430695);
    Label1: do {
      F.line = 483;
      var i_956306836 = 0;
      F.line = 117;
      var colontmp__436209730 = 0;
      F.line = 483;
      colontmp__436209730 = (s_956306822).length;
      F.line = 119;
      var i_436209731 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436209731 < colontmp__436209730)) break Label3;
            F.line = 483;
            i_956306836 = i_436209731;
            if (pred_956306824(s_956306822[chckIndx(i_956306836, 0, (s_956306822).length - 1)])) {
            F.line = 485;
            var Temporary4 = nimCopy(null, s_956306822[chckIndx(i_956306836, 0, (s_956306822).length - 1)], NTI33554439);
            result_956306825.push(Temporary4);;
            }
            
            F.line = 122;
            i_436209731 = addInt(i_436209731, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956306825;

}

function substrEq_620757221(s_620757222, pos_620757223, substr_620757224) {
  var result_620757225 = false;

  var F = {procname: "strutils.substrEq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 348;
    var i_620757226 = 0;
    F.line = 349;
    var length_620757227 = (substr_620757224).length;
    Label1: do {
      F.line = 350;
        Label2: while (true) {
        if (!(((i_620757226 < length_620757227) && (addInt(pos_620757223, i_620757226) < (s_620757222).length)) && (s_620757222[chckIndx(addInt(pos_620757223, i_620757226), 0, (s_620757222).length - 1)] == substr_620757224[chckIndx(i_620757226, 0, (substr_620757224).length - 1)]))) break Label2;
          F.line = 351;
          i_620757226 = addInt(i_620757226, 1);
        }
    } while (false);
    F.line = 352;
    result_620757225 = (i_620757226 == length_620757227);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620757225;

}

function nsuSplitString(s_620757513, sep_620757514, maxsplit_620757515) {
  var result_620757516 = [];

  var F = {procname: "strutils.split", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    if (!((0 < (sep_620757514).length))) {
    F.line = 739;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\strutils.nim(739, 11) `sep.len > 0` "));
    }
    
    F.line = 393;
    result_620757516 = nimCopy(null, [], NTI620757366);
    Label1: do {
      F.line = 394;
      var xHEX60gensym72_620757527 = [];
      F.line = 365;
      var lastHEX60gensym41_436209736 = 0;
      F.line = 366;
      var splitsHEX60gensym41_436209737 = maxsplit_620757515;
      Label2: do {
        F.line = 499;
          Label3: while (true) {
          if (!(lastHEX60gensym41_436209736 <= (s_620757513).length)) break Label3;
            F.line = 369;
            var firstHEX60gensym41_436209739 = lastHEX60gensym41_436209736;
            Label4: do {
              F.line = 370;
                Label5: while (true) {
                if (!((lastHEX60gensym41_436209736 < (s_620757513).length) && !(substrEq_620757221(s_620757513, lastHEX60gensym41_436209736, sep_620757514)))) break Label5;
                  F.line = 371;
                  lastHEX60gensym41_436209736 = addInt(lastHEX60gensym41_436209736, 1);
                }
            } while (false);
            if ((splitsHEX60gensym41_436209737 == 0)) {
            F.line = 372;
            lastHEX60gensym41_436209736 = (s_620757513).length;
            }
            
            F.line = 741;
            xHEX60gensym72_620757527 = substr_33557906(s_620757513, firstHEX60gensym41_436209739, subInt(lastHEX60gensym41_436209736, 1));
            F.line = 741;
            var Temporary6 = nimCopy(null, xHEX60gensym72_620757527, NTI33554439);
            result_620757516.push(Temporary6);;
            if ((splitsHEX60gensym41_436209737 == 0)) {
            F.line = 374;
            break Label2;
            }
            
            F.line = 375;
            splitsHEX60gensym41_436209737 = subInt(splitsHEX60gensym41_436209737, 1);
            F.line = 376;
            lastHEX60gensym41_436209736 = addInt(lastHEX60gensym41_436209736, (sep_620757514).length);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_620757516;

}

function HEX5BHEX5D_436209371(t_436209374, key_436209375) {
  var result_436209376 = null;
  var result_436209376_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_436209377 = [0];
    F.line = 243;
    var indexHEX60gensym22_436209384 = rawGet_956301585(t_436209374, key_436209375, hcHEX60gensym22_436209377, 0);
    if ((0 <= indexHEX60gensym22_436209384)) {
    F.line = 244;
    result_436209376 = t_436209374.data[chckIndx(indexHEX60gensym22_436209384, 0, (t_436209374.data).length - 1)]; result_436209376_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_436209375);
    }
    
  framePtr = F.prev;

  return [result_436209376, result_436209376_Idx];

}

function allCharsInSet_620758395(s_620758396, theSet_620758397) {
  var result_620758398 = false;

  var F = {procname: "strutils.allCharsInSet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    Label1: do {
      F.line = 1746;
      var c_620758399 = 0;
      F.line = 253;
      var i_436209744 = 0;
      F.line = 254;
      var L_436209745 = (s_620758396).length;
      Label2: do {
        F.line = 255;
          Label3: while (true) {
          if (!(i_436209744 < L_436209745)) break Label3;
            F.line = 1746;
            c_620758399 = s_620758396[chckIndx(i_436209744, 0, (s_620758396).length - 1)];
            if (!((theSet_620758397[c_620758399] != undefined))) {
            F.line = 1747;
            result_620758398 = false;
            break BeforeRet;
            }
            
            F.line = 257;
            i_436209744 = addInt(i_436209744, 1);
            if (!(((s_620758396).length == L_436209745))) {
            F.line = 258;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 1748;
    result_620758398 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620758398;

}

function HEX3DHEX3D_956302613(x_956302615, y_956302616) {
  var result_956302617 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var sameObject_956302624 = false;
    F.line = 302;
    sameObject_956302624 = x_956302615 === y_956302616
    if (sameObject_956302624) {
    F.line = 303;
    result_956302617 = true;
    break BeforeRet;
    }
    
    if (!(((x_956302615).length == (y_956302616).length))) {
    F.line = 306;
    result_956302617 = false;
    break BeforeRet;
    }
    
    Label1: do {
      F.line = 308;
      var i_956302638 = 0;
      F.line = 75;
      var colontmp__436209748 = 0;
      F.line = 308;
      colontmp__436209748 = subInt((x_956302615).length, 1);
      F.line = 90;
      var res_436209749 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436209749 <= colontmp__436209748)) break Label3;
            F.line = 308;
            i_956302638 = res_436209749;
            if (!(eqStrings(x_956302615[chckIndx(i_956302638, 0, (x_956302615).length - 1)], y_956302616[chckIndx(i_956302638, 0, (y_956302616).length - 1)]))) {
            F.line = 310;
            result_956302617 = false;
            break BeforeRet;
            }
            
            F.line = 93;
            res_436209749 = addInt(res_436209749, 1);
          }
      } while (false);
    } while (false);
    F.line = 312;
    result_956302617 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_956302617;

}

function toPDAgv() {
    
function HEX3Aanonymous_436209148(x_436209151) {
      var result_436209154 = [];

      var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 60;
        result_436209154 = nimCopy(null, (makeNimstrLit("q") || []).concat(HEX24_318767107(x_436209151) || [],makeNimstrLit(";") || []), NTI33554439);
      framePtr = F.prev;

      return result_436209154;

    }
    
function HEX3Aanonymous_436209240(x_436209243) {
      var result_436209246 = [];

      var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 61;
        result_436209246 = nimCopy(null, (makeNimstrLit("s") || []).concat(HEX24_318767107(x_436209243) || [],makeNimstrLit(";") || []), NTI33554439);
      framePtr = F.prev;

      return result_436209246;

    }
    
function HEX3Aanonymous_436209286(x_436209289) {
      var result_436209292 = [];

      var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 62;
        result_436209292 = nimCopy(null, (makeNimstrLit("  s") || []).concat(HEX24_318767107(x_436209289) || [],makeNimstrLit(" -> q") || [],HEX24_318767107(x_436209289) || [],makeNimstrLit(" [ label = \"\" ];\x0A") || []), NTI33554439);
      framePtr = F.prev;

      return result_436209292;

    }
                            var Temporary16;
                            var Temporary17;
                            
function HEX3Aanonymous_436209441(x_436209454) {
                              var result_436209457 = false;

                              var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                              framePtr = F;
                                F.line = 69;
                                result_436209457 = !(allCharsInSet_620758395(x_436209454, ConstSet44));
                              framePtr = F.prev;

                              return result_436209457;

                            }
                            
function HEX3Aanonymous_436209464(x_436209467) {
                              var result_436209470 = [];

                              var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                              framePtr = F;
                                F.line = 69;
                                result_436209470 = nimCopy(null, (x_436209467 || []).concat(makeNimstrLit("/") || [],ss_436209317 || []), NTI33554439);
                              framePtr = F.prev;

                              return result_436209470;

                            }
                            var Temporary18;
                            var Temporary19;
                            
function HEX3Aanonymous_436209555(x_436209568) {
                              var result_436209571 = false;

                              var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                              framePtr = F;
                                F.line = 70;
                                result_436209571 = !(allCharsInSet_620758395(x_436209568, ConstSet45));
                              framePtr = F.prev;

                              return result_436209571;

                            }
                            
function HEX3Aanonymous_436209578(x_436209581) {
                              var result_436209584 = [];

                              var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                              framePtr = F;
                                F.line = 70;
                                result_436209584 = nimCopy(null, (x_436209581 || []).concat(makeNimstrLit(",") || [],ss_436209317 || [],makeNimstrLit("/") || []), NTI33554439);
                              framePtr = F.prev;

                              return result_436209584;

                            }
                    
function HEX3Aanonymous_436209595(x_436209598) {
                      var result_436209601 = false;

                      var F = {procname: "toPDAgv.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                      framePtr = F;
                        F.line = 71;
                        result_436209601 = !(allCharsInSet_620758395(x_436209598, ConstSet46));
                      framePtr = F.prev;

                      return result_436209601;

                    }

  var result_436209144 = null;

  var F = {procname: "PDAtoCFGjs.toPDAgv", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 56;
    N_436207624[0] = (m_436207631[0].Field2).length;
    F.line = 60;
    F.line = 894;
    var sHEX60gensym41_436209219 = HEX26_436209182(map_436209156(m_436207631[0].Field5, HEX3Aanonymous_436209148), [makeNimstrLit("\x0A")]);
    if (!((0 < (sHEX60gensym41_436209219).length))) {
    F.line = 895;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym41.len > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 896;
    var resultHEX60gensym41_436209228 = [];
    F.line = 897;
    resultHEX60gensym41_436209228 = nimCopy(null, sHEX60gensym41_436209219[chckIndx(0, 0, (sHEX60gensym41_436209219).length - 1)], NTI33554439);
    Label1: do {
      F.line = 898;
      var iHEX60gensym41_436209236 = 0;
      F.line = 117;
      var colontmp__436209678 = 0;
      F.line = 898;
      colontmp__436209678 = (sHEX60gensym41_436209219).length;
      F.line = 119;
      var i_436209679 = 1;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436209679 < colontmp__436209678)) break Label3;
            F.line = 898;
            iHEX60gensym41_436209236 = i_436209679;
            F.line = 900;
            var a_436209237 = nimCopy(null, resultHEX60gensym41_436209228, NTI33554439);
            F.line = 901;
            var b_436209238 = nimCopy(null, sHEX60gensym41_436209219[chckIndx(iHEX60gensym41_436209236, 0, (sHEX60gensym41_436209219).length - 1)], NTI33554439);
            F.line = 60;
            resultHEX60gensym41_436209228 = nimCopy(null, (a_436209237 || []).concat(b_436209238 || []), NTI33554439);
            F.line = 122;
            i_436209679 = addInt(i_436209679, 1);
          }
      } while (false);
    } while (false);
    var accStatesStr_436209239 = nimCopy(null, resultHEX60gensym41_436209228, NTI33554439);
    F.line = 61;
    F.line = 894;
    var sHEX60gensym45_436209265 = HEX26_436209182(map_436209156(m_436207631[0].Field4, HEX3Aanonymous_436209240), [makeNimstrLit("\x0A")]);
    if (!((0 < (sHEX60gensym45_436209265).length))) {
    F.line = 895;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym45.len > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 896;
    var resultHEX60gensym45_436209274 = [];
    F.line = 897;
    resultHEX60gensym45_436209274 = nimCopy(null, sHEX60gensym45_436209265[chckIndx(0, 0, (sHEX60gensym45_436209265).length - 1)], NTI33554439);
    Label4: do {
      F.line = 898;
      var iHEX60gensym45_436209282 = 0;
      F.line = 117;
      var colontmp__436209682 = 0;
      F.line = 898;
      colontmp__436209682 = (sHEX60gensym45_436209265).length;
      F.line = 119;
      var i_436209683 = 1;
      Label5: do {
        F.line = 120;
          Label6: while (true) {
          if (!(i_436209683 < colontmp__436209682)) break Label6;
            F.line = 898;
            iHEX60gensym45_436209282 = i_436209683;
            F.line = 900;
            var a_436209283 = nimCopy(null, resultHEX60gensym45_436209274, NTI33554439);
            F.line = 901;
            var b_436209284 = nimCopy(null, sHEX60gensym45_436209265[chckIndx(iHEX60gensym45_436209282, 0, (sHEX60gensym45_436209265).length - 1)], NTI33554439);
            F.line = 61;
            resultHEX60gensym45_436209274 = nimCopy(null, (a_436209283 || []).concat(b_436209284 || []), NTI33554439);
            F.line = 122;
            i_436209683 = addInt(i_436209683, 1);
          }
      } while (false);
    } while (false);
    var toIniStatesStr_436209285 = nimCopy(null, resultHEX60gensym45_436209274, NTI33554439);
    F.line = 62;
    var toIniArrlines_436209300 = map_436209156(m_436207631[0].Field4, HEX3Aanonymous_436209286);
    F.line = 63;
    var edgeArrlines_436209301 = [];
    Label7: do {
      F.line = 64;
      var i_436209306 = 0;
      F.line = 75;
      var colontmp__436209698 = 0;
      F.line = 64;
      colontmp__436209698 = subInt(N_436207624[0], 1);
      F.line = 90;
      var res_436209699 = 0;
      Label8: do {
        F.line = 91;
          Label9: while (true) {
          if (!(res_436209699 <= colontmp__436209698)) break Label9;
            F.line = 64;
            i_436209306 = res_436209699;
            Label10: do {
              F.line = 65;
              var j_436209311 = 0;
              F.line = 75;
              var colontmp__436209695 = 0;
              F.line = 65;
              colontmp__436209695 = subInt(N_436207624[0], 1);
              F.line = 90;
              var res_436209696 = 0;
              Label11: do {
                F.line = 91;
                  Label12: while (true) {
                  if (!(res_436209696 <= colontmp__436209695)) break Label12;
                    F.line = 65;
                    j_436209311 = res_436209696;
                    F.line = 66;
                    var labelElems_436209312 = [[]];
                    Label13: do {
                      F.line = 67;
                      var s_436209316 = [];
                      F.line = 235;
                      var i_436209688 = 0;
                      F.line = 236;
                      var L_436209689 = (m_436207631[0].Field3).length;
                      Label14: do {
                        F.line = 237;
                          Label15: while (true) {
                          if (!(i_436209688 < L_436209689)) break Label15;
                            F.line = 67;
                            s_436209316 = m_436207631[0].Field3[chckIndx(i_436209688, 0, (m_436207631[0].Field3).length - 1)];
                            F.line = 68;
                            var ss_436209317 = nimCopy(null, s_436209316, NTI33554439);
                            F.line = 69;
                            add_956303976(labelElems_436209312, 0, map_436209471(filter_956306820(nsuSplitString((Temporary17 = (Temporary16 = HEX5BHEX5D_436209371(m_436207631[0].Field0, s_436209316), Temporary16)[0][Temporary16[1]][chckIndx(i_436209306, 0, (Temporary16[0][Temporary16[1]]).length - 1)], Temporary17)[chckIndx(j_436209311, 0, (Temporary17).length - 1)], makeNimstrLit("+"), -1), HEX3Aanonymous_436209441), HEX3Aanonymous_436209464));
                            F.line = 70;
                            add_956303976(labelElems_436209312, 0, map_436209471(filter_956306820(nsuSplitString((Temporary19 = (Temporary18 = HEX5BHEX5D_436209371(m_436207631[0].Field1, s_436209316), Temporary18)[0][Temporary18[1]][chckIndx(i_436209306, 0, (Temporary18[0][Temporary18[1]]).length - 1)], Temporary19)[chckIndx(j_436209311, 0, (Temporary19).length - 1)], makeNimstrLit("+"), -1), HEX3Aanonymous_436209555), HEX3Aanonymous_436209578));
                            F.line = 239;
                            i_436209688 = addInt(i_436209688, 1);
                            if (!(((m_436207631[0].Field3).length == L_436209689))) {
                            F.line = 240;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    F.line = 71;
                    add_956303976(labelElems_436209312, 0, filter_956306820(nsuSplitString(m_436207631[0].Field2[chckIndx(i_436209306, 0, (m_436207631[0].Field2).length - 1)][chckIndx(j_436209311, 0, (m_436207631[0].Field2[chckIndx(i_436209306, 0, (m_436207631[0].Field2).length - 1)]).length - 1)], makeNimstrLit("+"), -1), HEX3Aanonymous_436209595));
                    if (!(HEX3DHEX3D_956302613(labelElems_436209312[0], []))) {
                    F.line = 73;
                    F.line = 894;
                    var sHEX60gensym53_436209623 = nimCopy(null, labelElems_436209312[0], NTI436208618);
                    if (!((0 < (sHEX60gensym53_436209623).length))) {
                    F.line = 895;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym53.len > 0` Can\'t fold empty sequences"));
                    }
                    
                    F.line = 896;
                    var resultHEX60gensym53_436209632 = [];
                    F.line = 897;
                    resultHEX60gensym53_436209632 = nimCopy(null, sHEX60gensym53_436209623[chckIndx(0, 0, (sHEX60gensym53_436209623).length - 1)], NTI33554439);
                    Label20: do {
                      F.line = 898;
                      var iHEX60gensym53_436209640 = 0;
                      F.line = 117;
                      var colontmp__436209692 = 0;
                      F.line = 898;
                      colontmp__436209692 = (sHEX60gensym53_436209623).length;
                      F.line = 119;
                      var i_436209693 = 1;
                      Label21: do {
                        F.line = 120;
                          Label22: while (true) {
                          if (!(i_436209693 < colontmp__436209692)) break Label22;
                            F.line = 898;
                            iHEX60gensym53_436209640 = i_436209693;
                            F.line = 900;
                            var a_436209641 = nimCopy(null, resultHEX60gensym53_436209632, NTI33554439);
                            F.line = 901;
                            var b_436209642 = nimCopy(null, sHEX60gensym53_436209623[chckIndx(iHEX60gensym53_436209640, 0, (sHEX60gensym53_436209623).length - 1)], NTI33554439);
                            F.line = 73;
                            resultHEX60gensym53_436209632 = nimCopy(null, (a_436209641 || []).concat(makeNimstrLit("\\n") || [],b_436209642 || []), NTI33554439);
                            F.line = 122;
                            i_436209693 = addInt(i_436209693, 1);
                          }
                      } while (false);
                    } while (false);
                    var labelStr_436209643 = nimCopy(null, resultHEX60gensym53_436209632, NTI33554439);
                    F.line = 74;
                    edgeArrlines_436209301.push.apply(edgeArrlines_436209301, (makeNimstrLit("  q") || []).concat(HEX24_318767107(i_436209306) || [],makeNimstrLit(" -> q") || [],HEX24_318767107(j_436209311) || [],makeNimstrLit(" [ label = \"") || [],labelStr_436209643 || [],makeNimstrLit("\" ];\x0A") || []));;
                    }
                    
                    F.line = 93;
                    res_436209696 = addInt(res_436209696, 1);
                  }
              } while (false);
            } while (false);
            F.line = 93;
            res_436209699 = addInt(res_436209699, 1);
          }
      } while (false);
    } while (false);
    F.line = 75;
    F.line = 894;
    var sHEX60gensym57_436209647 = nimCopy(null, toIniArrlines_436209300, NTI436208489);
    if (!((0 < (sHEX60gensym57_436209647).length))) {
    F.line = 895;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym57.len > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 896;
    var resultHEX60gensym57_436209656 = [];
    F.line = 897;
    resultHEX60gensym57_436209656 = nimCopy(null, sHEX60gensym57_436209647[chckIndx(0, 0, (sHEX60gensym57_436209647).length - 1)], NTI33554439);
    Label23: do {
      F.line = 898;
      var iHEX60gensym57_436209664 = 0;
      F.line = 117;
      var colontmp__436209706 = 0;
      F.line = 898;
      colontmp__436209706 = (sHEX60gensym57_436209647).length;
      F.line = 119;
      var i_436209707 = 1;
      Label24: do {
        F.line = 120;
          Label25: while (true) {
          if (!(i_436209707 < colontmp__436209706)) break Label25;
            F.line = 898;
            iHEX60gensym57_436209664 = i_436209707;
            F.line = 900;
            var a_436209665 = nimCopy(null, resultHEX60gensym57_436209656, NTI33554439);
            F.line = 901;
            var b_436209666 = nimCopy(null, sHEX60gensym57_436209647[chckIndx(iHEX60gensym57_436209664, 0, (sHEX60gensym57_436209647).length - 1)], NTI33554439);
            F.line = 84;
            resultHEX60gensym57_436209656 = nimCopy(null, (a_436209665 || []).concat(b_436209666 || []), NTI33554439);
            F.line = 122;
            i_436209707 = addInt(i_436209707, 1);
          }
      } while (false);
    } while (false);
    var dotstr_436209667 = (makeNimstrLit("digraph PDAmtxs {\x0A  rankdir=LR;\x0A\x09size = \"") || []).concat(gvsize_436207626[0] || [],makeNimstrLit("\"\x0A  nodesep = ") || [],gvnodesep1_436207627[0] || [],makeNimstrLit("  ranksep = ") || [],gvranksep1_436207628[0] || [],makeNimstrLit("  node [shape = doublecircle]; ") || [],accStatesStr_436209239 || [],makeNimstrLit("  node [shape = point, height = 0.0001]; ") || [],toIniStatesStr_436209285 || [],makeNimstrLit("  node [shape = circle]; \x0A") || [],resultHEX60gensym57_436209656 || [],edgeArrlines_436209301 || [],makeNimstrLit("}") || []);
    F.line = 87;
    result_436209144 = toJSStr(dotstr_436209667);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_436209144;

}
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
F.line = 88;
rawEcho(cstrToNimstr(toPDAgv()));
framePtr = F.prev;

function newPDAmtx_956301415(n_956301416) {
  var result_956301417 = [];

  var F = {procname: "PDA2CFG_separated_re.newPDAmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 18;
      var i_956301422 = 0;
      F.line = 119;
      var i_436210321 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210321 < n_956301416)) break Label3;
            F.line = 18;
            i_956301422 = i_436210321;
            F.line = 19;
            var row_956301423 = [];
            Label4: do {
              F.line = 20;
              var j_956301428 = 0;
              F.line = 119;
              var i_436210319 = 0;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436210319 < n_956301416)) break Label6;
                    F.line = 20;
                    j_956301428 = i_436210319;
                    F.line = 20;
                    row_956301423.push([]);;
                    F.line = 122;
                    i_436210319 = addInt(i_436210319, 1);
                  }
              } while (false);
            } while (false);
            F.line = 22;
            var Temporary7 = nimCopy(null, row_956301423, NTI956301382);
            result_956301417.push(Temporary7);;
            F.line = 122;
            i_436210321 = addInt(i_436210321, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956301417;

}

function makeIdentmtx_956301437(n_956301438) {
  var result_956301439 = [];

  var F = {procname: "PDA2CFG_separated_re.makeIdentmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 24;
    result_956301439 = nimCopy(null, newPDAmtx_956301415(n_956301438), NTI956301315);
    Label1: do {
      F.line = 25;
      var i_956301444 = 0;
      F.line = 119;
      var i_436210315 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210315 < n_956301438)) break Label3;
            F.line = 25;
            i_956301444 = i_436210315;
            Label4: do {
              F.line = 26;
              var j_956301449 = 0;
              F.line = 119;
              var i_436210313 = 0;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436210313 < n_956301438)) break Label6;
                    F.line = 26;
                    j_956301449 = i_436210313;
                    if (!((i_956301444 == j_956301449))) {
                    F.line = 27;
                    result_956301439[chckIndx(i_956301444, 0, (result_956301439).length - 1)][chckIndx(j_956301449, 0, (result_956301439[chckIndx(i_956301444, 0, (result_956301439).length - 1)]).length - 1)] = nimCopy(null, makeNimstrLit(" "), NTI33554439);
                    }
                    else {
                      F.line = 27;
                      result_956301439[chckIndx(i_956301444, 0, (result_956301439).length - 1)][chckIndx(j_956301449, 0, (result_956301439[chckIndx(i_956301444, 0, (result_956301439).length - 1)]).length - 1)] = nimCopy(null, makeNimstrLit("\xCE\xB5"), NTI33554439);
                    }
                    
                    F.line = 122;
                    i_436210313 = addInt(i_436210313, 1);
                  }
              } while (false);
            } while (false);
            F.line = 122;
            i_436210315 = addInt(i_436210315, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956301439;

}

function makeNpairmtx_956301450(n_956301451) {
  var result_956301452 = [];

  var F = {procname: "PDA2CFG_separated_re.makeNpairmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 29;
    result_956301452 = nimCopy(null, newPDAmtx_956301415(n_956301451), NTI956301315);
    Label1: do {
      F.line = 30;
      var i_956301457 = 0;
      F.line = 119;
      var i_436210327 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210327 < n_956301451)) break Label3;
            F.line = 30;
            i_956301457 = i_436210327;
            Label4: do {
              F.line = 31;
              var j_956301462 = 0;
              F.line = 119;
              var i_436210325 = 0;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436210325 < n_956301451)) break Label6;
                    F.line = 31;
                    j_956301462 = i_436210325;
                    F.line = 31;
                    result_956301452[chckIndx(i_956301457, 0, (result_956301452).length - 1)][chckIndx(j_956301462, 0, (result_956301452[chckIndx(i_956301457, 0, (result_956301452).length - 1)]).length - 1)] = nimCopy(null, (HEX24_318767107(i_956301457) || []).concat(HEX24_318767107(j_956301462) || []), NTI33554439);
                    F.line = 122;
                    i_436210325 = addInt(i_436210325, 1);
                  }
              } while (false);
            } while (false);
            F.line = 122;
            i_436210327 = addInt(i_436210327, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956301452;

}

function makeZeromtx_956301463(n_956301464) {
  var result_956301465 = [];

  var F = {procname: "PDA2CFG_separated_re.makeZeromtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 34;
    result_956301465 = nimCopy(null, newPDAmtx_956301415(n_956301464), NTI956301315);
    Label1: do {
      F.line = 35;
      var i_956301470 = 0;
      F.line = 119;
      var i_436210333 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210333 < n_956301464)) break Label3;
            F.line = 35;
            i_956301470 = i_436210333;
            Label4: do {
              F.line = 36;
              var j_956301475 = 0;
              F.line = 119;
              var i_436210331 = 0;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436210331 < n_956301464)) break Label6;
                    F.line = 36;
                    j_956301475 = i_436210331;
                    F.line = 36;
                    result_956301465[chckIndx(i_956301470, 0, (result_956301465).length - 1)][chckIndx(j_956301475, 0, (result_956301465[chckIndx(i_956301470, 0, (result_956301465).length - 1)]).length - 1)] = nimCopy(null, makeNimstrLit(" "), NTI33554439);
                    F.line = 122;
                    i_436210331 = addInt(i_436210331, 1);
                  }
              } while (false);
            } while (false);
            F.line = 122;
            i_436210333 = addInt(i_436210333, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956301465;

}

function HEX2B_956304195(s1_956304196, s2_956304197) {
      var Temporary1;
      var Temporary2;

  var result_956304198 = [];

  var F = {procname: "PDA2CFG_separated_re.+", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    if ((eqStrings(s1_956304196, makeNimstrLit(" ")) && eqStrings(s2_956304197, makeNimstrLit(" ")))) {
    F.line = 142;
    result_956304198 = nimCopy(null, makeNimstrLit(" "), NTI33554439);
    }
    else {
      if (!!(eqStrings(s1_956304196, makeNimstrLit(" ")))) Temporary1 = false; else {        Temporary1 = eqStrings(s2_956304197, makeNimstrLit(" "));      }    if (Temporary1) {
    F.line = 143;
    result_956304198 = nimCopy(null, s1_956304196, NTI33554439);
    }
    else {
      if (!eqStrings(s1_956304196, makeNimstrLit(" "))) Temporary2 = false; else {        Temporary2 = !(eqStrings(s2_956304197, makeNimstrLit(" ")));      }    if (Temporary2) {
    F.line = 144;
    result_956304198 = nimCopy(null, s2_956304197, NTI33554439);
    }
    else {
      F.line = 145;
      result_956304198 = nimCopy(null, (s1_956304196 || []).concat(makeNimstrLit("+") || [],s2_956304197 || []), NTI33554439);
    }
    }}
  framePtr = F.prev;

  return result_956304198;

}

function initTable_956302214(initialSize_956302217) {
  var result_956302223 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym16_956302225 = slotsNeeded_570425386(chckRange(initialSize_956302217, 0, 2147483647));
    F.line = 167;
    result_956302223.counter = 0;
    F.line = 168;
    result_956302223.data = new Array(chckRange(correctSizeHEX60gensym16_956302225, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_956302225, 0, 2147483647) ; ++i) { result_956302223.data[i] = {Field0: 0, Field1: [], Field2: []}; }  framePtr = F.prev;

  return result_956302223;

}

function len_1174405401(t_1174405404) {
  var result_1174405405 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1509;
    result_1174405405 = t_1174405404.counter;
  framePtr = F.prev;

  return result_1174405405;

}

function clear_1174405457(t_1174405460) {
  var F = {procname: "clear.clear", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 149;
      var i_1174405523 = 0;
      F.line = 117;
      var colontmp__436210371 = 0;
      F.line = 149;
      colontmp__436210371 = (t_1174405460.data).length;
      F.line = 119;
      var i_436210372 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210372 < colontmp__436210371)) break Label3;
            F.line = 149;
            i_1174405523 = i_436210372;
            F.line = 151;
            t_1174405460.data[chckIndx(i_1174405523, 0, (t_1174405460.data).length - 1)].Field0 = 0;
            F.line = 152;
            t_1174405460.data[chckIndx(i_1174405523, 0, (t_1174405460.data).length - 1)].Field2 = nimCopy(null, [], NTI33554439);
            F.line = 153;
            t_1174405460.data[chckIndx(i_1174405523, 0, (t_1174405460.data).length - 1)].Field3 = 0;
            F.line = 122;
            i_436210372 = addInt(i_436210372, 1);
          }
      } while (false);
    } while (false);
    F.line = 154;
    t_1174405460.counter = 0;
    F.line = 1597;
    t_1174405460.first = -1;
    F.line = 1598;
    t_1174405460.last = -1;
  framePtr = F.prev;

  
}

function HEX2EHEX2E_905970515(a_905970518, b_905970519) {
  var result_905970520 = ({a: 0, b: 0});

  var F = {procname: ".....", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 512;
    result_905970520 = nimCopy(result_905970520, {a: a_905970518, b: b_905970519}, NTI704643133);
  framePtr = F.prev;

  return result_905970520;

}

function clear_1174405337(m_1174405338) {
  var F = {procname: "nfatype.clear", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    if ((0 < (m_1174405338.captures).length)) {
    F.line = 83;
    if (m_1174405338.captures.length < 0) { for (var i = m_1174405338.captures.length ; i < 0 ; ++i) m_1174405338.captures.push([]); }
               else { m_1174405338.captures.length = 0; };
    }
    
    if ((0 < len_1174405401(m_1174405338.namedGroups))) {
    F.line = 85;
    clear_1174405457(m_1174405338.namedGroups);
    }
    
    F.line = 86;
    m_1174405338.boundaries = nimCopy(m_1174405338.boundaries, HEX2EHEX2E_905970515(0, -1), NTI704643133);
  framePtr = F.prev;

  
}

function new_1174405899() {
  var result_1174405902 = null;

  var F = {procname: "new.new", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 903;
    var r_1174405904 = null;
    F.line = 906;
    r_1174405904 = ({sx: [], ss: [], si: 0});
    F.line = 907;
    result_1174405902 = r_1174405904;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1174405902;

}

function newSeq_1174405930(len_1174405932) {
  var result_1174405933 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_1174405933 = new Array(len_1174405932); for (var i = 0 ; i < len_1174405932 ; ++i) { result_1174405933[i] = {Field0: 0, Field1: 0, Field2: ({a: 0, b: 0})}; }  framePtr = F.prev;

  return result_1174405933;

}

function newSeq_989856130(len_989856132) {
  var result_989856133 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_989856133 = new Array(len_989856132); for (var i = 0 ; i < len_989856132 ; ++i) { result_989856133[i] = 0; }  framePtr = F.prev;

  return result_989856133;

}

function newSubmatches_1174405896(size_1174405897) {
  var result_1174405898 = null;

  var F = {procname: "nfatype.newSubmatches", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 103;
    result_1174405898 = new_1174405899();
    F.line = 104;
    result_1174405898.sx = nimCopy(null, newSeq_1174405930(8), NTI1174405667);
    F.line = 105;
    result_1174405898.ss = nimCopy(null, newSeq_989856130(chckRange(size_1174405897, 0, 2147483647)), NTI989856012);
    F.line = 106;
    result_1174405898.si = 0;
  framePtr = F.prev;

  return result_1174405898;

}

function contains_1107297731(s_1107297735, value_1107297736) {
  var result_1107297737 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 823;
    result_1107297737 = ((s_1107297735.a <= value_1107297736) && (value_1107297736 <= s_1107297735.b));
  framePtr = F.prev;

  return result_1107297737;

}

function bwRuneAt_1073741866(s_1073741867, n_1073741868) {
          var Temporary3;

  var result_1073741869 = 0;

  var F = {procname: "common.bwRuneAt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
  framePtr = F;
    if (!((0 <= n_1073741868))) {
    F.line = 40;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim(40, 12) `n >= 0` "));
    }
    
    if (!((n_1073741868 <= subInt((s_1073741867).length, 1)))) {
    F.line = 41;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim(41, 12) `n <= s.len - 1` "));
    }
    
    F.line = 42;
    var n_1073741880 = n_1073741868;
    Label1: do {
      F.line = 43;
        Label2: while (true) {
          if (!(0 < n_1073741880)) Temporary3 = false; else {            Temporary3 = ((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] >> 6) == 2);          }        if (!Temporary3) break Label2;
          F.line = 44;
          n_1073741880 = subInt(n_1073741880, 1);
        }
    } while (false);
    if ((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] <= 127)) {
    F.line = 81;
    result_1073741869 = chckRange(s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] >>> 5) == 6)) {
    if ((n_1073741880 <= subInt((s_1073741867).length, 2))) {
    F.line = 86;
    result_1073741869 = chckRange((((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] & 31) << 6) | (s_1073741867[chckIndx(addInt(n_1073741880, 1), 0, (s_1073741867).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 90;
      result_1073741869 = 65533;
    }
    
    }
    else {
    if (((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] >>> 4) == 14)) {
    if ((n_1073741880 <= subInt((s_1073741867).length, 3))) {
    F.line = 96;
    result_1073741869 = chckRange(((((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] & 15) << 12) | ((s_1073741867[chckIndx(addInt(n_1073741880, 1), 0, (s_1073741867).length - 1)] & 63) << 6)) | (s_1073741867[chckIndx(addInt(n_1073741880, 2), 0, (s_1073741867).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 101;
      result_1073741869 = 65533;
    }
    
    }
    else {
    if (((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] >>> 3) == 30)) {
    if ((n_1073741880 <= subInt((s_1073741867).length, 4))) {
    F.line = 108;
    result_1073741869 = chckRange((((((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] & 7) << 18) | ((s_1073741867[chckIndx(addInt(n_1073741880, 1), 0, (s_1073741867).length - 1)] & 63) << 12)) | ((s_1073741867[chckIndx(addInt(n_1073741880, 2), 0, (s_1073741867).length - 1)] & 63) << 6)) | (s_1073741867[chckIndx(addInt(n_1073741880, 3), 0, (s_1073741867).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 114;
      result_1073741869 = 65533;
    }
    
    }
    else {
    if (((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] >>> 2) == 62)) {
    if ((n_1073741880 <= subInt((s_1073741867).length, 5))) {
    F.line = 122;
    result_1073741869 = chckRange(((((((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] & 3) << 24) | ((s_1073741867[chckIndx(addInt(n_1073741880, 1), 0, (s_1073741867).length - 1)] & 63) << 18)) | ((s_1073741867[chckIndx(addInt(n_1073741880, 2), 0, (s_1073741867).length - 1)] & 63) << 12)) | ((s_1073741867[chckIndx(addInt(n_1073741880, 3), 0, (s_1073741867).length - 1)] & 63) << 6)) | (s_1073741867[chckIndx(addInt(n_1073741880, 4), 0, (s_1073741867).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 129;
      result_1073741869 = 65533;
    }
    
    }
    else {
    if (((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] >>> 1) == 126)) {
    if ((n_1073741880 <= subInt((s_1073741867).length, 6))) {
    F.line = 138;
    result_1073741869 = chckRange((((((((s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)] & 1) << 30) | ((s_1073741867[chckIndx(addInt(n_1073741880, 1), 0, (s_1073741867).length - 1)] & 63) << 24)) | ((s_1073741867[chckIndx(addInt(n_1073741880, 2), 0, (s_1073741867).length - 1)] & 63) << 18)) | ((s_1073741867[chckIndx(addInt(n_1073741880, 3), 0, (s_1073741867).length - 1)] & 63) << 12)) | ((s_1073741867[chckIndx(addInt(n_1073741880, 4), 0, (s_1073741867).length - 1)] & 63) << 6)) | (s_1073741867[chckIndx(addInt(n_1073741880, 5), 0, (s_1073741867).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 146;
      result_1073741869 = 65533;
    }
    
    }
    else {
      F.line = 149;
      result_1073741869 = chckRange(s_1073741867[chckIndx(n_1073741880, 0, (s_1073741867).length - 1)], -2147483648, 2147483647);
    }
    }}}}}
  framePtr = F.prev;

  return result_1073741869;

}

function clear_1174406010(sm_1174406011, sm_1174406011_Idx) {
  var F = {procname: "nfatype.clear", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 131;
    sm_1174406011[sm_1174406011_Idx].si = 0;
  framePtr = F.prev;

  
}

function hasState_1174405972(sm_1174405973, n_1174405974) {
    var Temporary1;

  var result_1174405975 = false;

  var F = {procname: "nfatype.hasState", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 116;
    if (!(sm_1174405973.ss[chckIndx(n_1174405974, 0, (sm_1174405973.ss).length - 1)] < sm_1174405973.si)) Temporary1 = false; else {      Temporary1 = (sm_1174405973.sx[chckIndx(sm_1174405973.ss[chckIndx(n_1174405974, 0, (sm_1174405973.ss).length - 1)], 0, (sm_1174405973.sx).length - 1)].Field0 == n_1174405974);    }    result_1174405975 = Temporary1;
  framePtr = F.prev;

  return result_1174405975;

}

function add_1174405976(sm_1174405977, sm_1174405977_Idx, item_1174405978) {
    var Temporary1;

  var F = {procname: "nfatype.add", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    if (!(!(hasState_1174405972(sm_1174405977[sm_1174405977_Idx], item_1174405978.Field0)))) {
    F.line = 119;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(119, 9) `not sm.hasState(item.ni)` "));
    }
    
    if (!((((sm_1174405977[sm_1174405977_Idx].si) | 0) <= (sm_1174405977[sm_1174405977_Idx].sx).length))) {
    F.line = 120;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(120, 10) `sm.si <= sm.sx.len` "));
    }
    
    if ((((sm_1174405977[sm_1174405977_Idx].si) | 0) == (sm_1174405977[sm_1174405977_Idx].sx).length)) {
    F.line = 122;
    if (sm_1174405977[sm_1174405977_Idx].sx.length < (Temporary1 = chckRange(mulInt((sm_1174405977[sm_1174405977_Idx].sx).length, 2), 0, 2147483647), Temporary1)) { for (var i = sm_1174405977[sm_1174405977_Idx].sx.length ; i < Temporary1 ; ++i) sm_1174405977[sm_1174405977_Idx].sx.push({Field0: 0, Field1: 0, Field2: ({a: 0, b: 0})}); }
               else { sm_1174405977[sm_1174405977_Idx].sx.length = Temporary1; };
    }
    
    F.line = 123;
    sm_1174405977[sm_1174405977_Idx].sx[chckIndx(sm_1174405977[sm_1174405977_Idx].si, 0, (sm_1174405977[sm_1174405977_Idx].sx).length - 1)] = nimCopy(sm_1174405977[sm_1174405977_Idx].sx[chckIndx(sm_1174405977[sm_1174405977_Idx].si, 0, (sm_1174405977[sm_1174405977_Idx].sx).length - 1)], item_1174405978, NTI1174405631);
    F.line = 124;
    sm_1174405977[sm_1174405977_Idx].ss[chckIndx(item_1174405978.Field0, 0, (sm_1174405977[sm_1174405977_Idx].ss).length - 1)] = sm_1174405977[sm_1174405977_Idx].si;
    F.line = 125;
    sm_1174405977[sm_1174405977_Idx].si = addInt(sm_1174405977[sm_1174405977_Idx].si, 1);
  framePtr = F.prev;

  
}

function len_1174406007(sm_1174406008) {
  var result_1174406009 = 0;

  var F = {procname: "nfatype.len", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 128;
    result_1174406009 = ((sm_1174406008.si) | 0);
  framePtr = F.prev;

  return result_1174406009;

}

function HEX3DHEX3D_905970583(a_905970584, b_905970585) {
  var result_905970586 = false;

  var F = {procname: "unicode.==", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 452;
    result_905970586 = (((a_905970584) | 0) == ((b_905970585) | 0));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_905970586;

}

function contains_1224736812(ut_1224736813, utm_1224736814) {
  var result_1224736815 = false;

  var F = {procname: "types.contains", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
  framePtr = F;
    F.line = 84;
    result_1224736815 = !(((ut_1224736813 & utm_1224736814) == 0));
  framePtr = F.prev;

  return result_1224736815;

}

function unicodeTypes_1224736771(cp_1224736772) {
  var result_1224736773 = 0;

  var F = {procname: "types.unicodeTypes", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim", line: 0};
  framePtr = F;
    if (!((((cp_1224736772) | 0) <= 1114111))) {
    F.line = 23;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\types.nim(23, 10) `cp.int <= 0x0010FFFF` "));
    }
    
    F.line = 25;
    var blockOffset_1224736783 = mulInt(((typesOffsets_1241513994[chckIndx(divInt(((cp_1224736772) | 0), 64), 0, (typesOffsets_1241513994).length - 1)]) | 0), 64);
    F.line = 26;
    var idx_1224736784 = typesIndices_1241513995[chckIndx(addInt(blockOffset_1224736783, modInt(((cp_1224736772) | 0), 64)), 0, (typesIndices_1241513995).length - 1)];
    F.line = 27;
    result_1224736773 = ((typesData_1241513996[chckIndx(idx_1224736784, 0, (typesData_1241513996).length - 1)]) | 0);
  framePtr = F.prev;

  return result_1224736773;

}

function isWord_1207959559(r_1207959560) {
  var result_1207959561 = false;

  var F = {procname: "nodematch.isWord", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 11;
    result_1207959561 = contains_1224736812(unicodeTypes_1224736771(r_1207959560), 128);
  framePtr = F.prev;

  return result_1207959561;

}

function isDecimal_1207959562(r_1207959563) {
  var result_1207959564 = false;

  var F = {procname: "nodematch.isDecimal", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 14;
    result_1207959564 = contains_1224736812(unicodeTypes_1224736771(r_1207959563), 1);
  framePtr = F.prev;

  return result_1207959564;

}

function isWhiteSpace_1207959640(r_1207959641) {
  var result_1207959642 = false;

  var F = {procname: "nodematch.isWhiteSpace", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 77;
    result_1207959642 = contains_1224736812(unicodeTypes_1224736771(r_1207959641), 64);
  framePtr = F.prev;

  return result_1207959642;

}

function hasJsBigInt_671088683() {
  var result_671088684 = false;

  var F = {procname: "jsutils.hasJsBigInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\std\\private\\jsutils.nim", line: 0};
  framePtr = F;
    F.line = 43;
    result_671088684 = typeof BigInt != 'undefined'
  framePtr = F.prev;

  return result_671088684;

}

function hiXorLoJs_637534293(a_637534294, b_637534295) {
  var result_637534296 = 0n;

  var F = {procname: "hashes.hiXorLoJs", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    F.line = 136;
    var prod_637534297 = (a_637534294 * b_637534295);
    F.line = 137;
    var mask_637534298 = BigInt("0xffffffffffffffff");
    F.line = 138;
    result_637534296 = ((prod_637534297 >> BigInt("64")) ^ (prod_637534297 & mask_637534298));
  framePtr = F.prev;

  return result_637534296;

}

function hashWangYi1_637534386(x_637534388) {
  var result_637534389 = 0;

  var F = {procname: "hashWangYi1.hashWangYi1", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    if (hasJsBigInt_671088683()) {
    F.line = 178;
    F.line = 142;
    var P0HEX60gensym6_637534408 = BigInt("0xa0761d6478bd642f");
    F.line = 143;
    var P1HEX60gensym6_637534409 = BigInt("0xe7037ed1a0b428db");
    F.line = 144;
    var P58HEX60gensym6_637534410 = BigInt("0xeb44accab455d16d");
    F.line = 145;
    var resHEX60gensym6_637534411 = hiXorLoJs_637534293(hiXorLoJs_637534293(P0HEX60gensym6_637534408, (BigInt(x_637534388) ^ P1HEX60gensym6_637534409)), P58HEX60gensym6_637534410);
    result_637534389 = Number((() => { const i = resHEX60gensym6_637534411, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      F.line = 180;
      result_637534389 = (x_637534388 & 4294967295);
    }
    
  framePtr = F.prev;

  return result_637534389;

}

function hash_1107296885(x_1107296887) {
  var result_1107296888 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    F.line = 210;
    result_1107296888 = hashWangYi1_637534386(x_1107296887);
  framePtr = F.prev;

  return result_1107296888;

}

function isFilled_1006632998(hcode_1006632999) {
  var result_1006633000 = false;

  var F = {procname: "sets.isFilled", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 22;
    result_1006633000 = !((hcode_1006632999 == 0));
  framePtr = F.prev;

  return result_1006633000;

}

function nextTry_1006633001(h_1006633002, maxHash_1006633003) {
  var result_1006633004 = 0;

  var F = {procname: "sets.nextTry", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    F.line = 25;
    result_1006633004 = (addInt(h_1006633002, 1) & maxHash_1006633003);
  framePtr = F.prev;

  return result_1006633004;

}

function rawGet_1107296878(t_1107296881, key_1107296882, hc_1107296883, hc_1107296883_Idx) {
            var Temporary3;

  var result_1107296884 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_1107296883[hc_1107296883_Idx] = hash_1107296885(key_1107296882);
    if ((hc_1107296883[hc_1107296883_Idx] == 0)) {
    F.line = 66;
    hc_1107296883[hc_1107296883_Idx] = 314159265;
    }
    
    if (((t_1107296881.data).length == 0)) {
    F.line = 48;
    result_1107296884 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_1107296917 = (hc_1107296883[hc_1107296883_Idx] & (t_1107296881.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_1006632998(t_1107296881.data[chckIndx(h_1107296917, 0, (t_1107296881.data).length - 1)].Field0)) break Label2;
            if (!(t_1107296881.data[chckIndx(h_1107296917, 0, (t_1107296881.data).length - 1)].Field0 == hc_1107296883[hc_1107296883_Idx])) Temporary3 = false; else {              Temporary3 = HEX3DHEX3D_905970583(t_1107296881.data[chckIndx(h_1107296917, 0, (t_1107296881.data).length - 1)].Field1, key_1107296882);            }          if (Temporary3) {
          F.line = 56;
          result_1107296884 = h_1107296917;
          break BeforeRet;
          }
          
          F.line = 57;
          h_1107296917 = nextTry_1006633001(h_1107296917, (t_1107296881.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_1107296884 = subInt(-1, h_1107296917);
  } while (false);
  framePtr = F.prev;

  return result_1107296884;

}

function contains_1207959704(s_1207959706, key_1207959707) {
  var result_1207959708 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sets.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var hc_1207959709 = [0];
    F.line = 164;
    var index_1207959723 = rawGet_1107296878(s_1207959706, key_1207959707, hc_1207959709, 0);
    F.line = 165;
    result_1207959708 = (0 <= index_1207959723);
  framePtr = F.prev;

  return result_1207959708;

}

function HEX3CHEX3D_1073741858(x_1073741859, y_1073741860) {
  var result_1073741861 = false;

  var F = {procname: "common.<=", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim", line: 0};
  framePtr = F;
    F.line = 33;
    result_1073741861 = (((x_1073741859) | 0) <= ((y_1073741860) | 0));
  framePtr = F.prev;

  return result_1073741861;

}

function contains_1207959633(s_1207959637, value_1207959638) {
  var result_1207959639 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 823;
    result_1207959639 = (HEX3CHEX3D_1073741858(s_1207959637.a, value_1207959638) && HEX3CHEX3D_1073741858(value_1207959638, s_1207959637.b));
  framePtr = F.prev;

  return result_1207959639;

}

function contains_1207959611(sr_1207959613, r_1207959614) {
  var result_1207959615 = false;

  var F = {procname: "nodematch.contains", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 70;
    result_1207959615 = false;
    Label1: do {
      F.line = 71;
      var sl_1207959619 = ({a: 0, b: 0});
      F.line = 235;
      var i_436210420 = 0;
      F.line = 236;
      var L_436210421 = (sr_1207959613).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436210420 < L_436210421)) break Label3;
            F.line = 71;
            sl_1207959619 = sr_1207959613[chckIndx(i_436210420, 0, (sr_1207959613).length - 1)];
            F.line = 72;
            result_1207959615 = contains_1207959633(sl_1207959619, r_1207959614);
            if (result_1207959615) {
            F.line = 74;
            break Label1;
            }
            
            F.line = 239;
            i_436210420 = addInt(i_436210420, 1);
            if (!(((sr_1207959613).length == L_436210421))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_1207959615;

}

function binarySearch_905970677(c_905970678, tab_905970679, len_905970680, stride_905970681) {
      var Temporary3;

  var result_905970682 = 0;

  var F = {procname: "unicode.binarySearch", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 458;
    var n_905970683 = len_905970680;
    F.line = 459;
    var t_905970684 = 0;
    Label1: do {
      F.line = 460;
        Label2: while (true) {
        if (!(1 < n_905970683)) break Label2;
          F.line = 461;
          var m_905970685 = divInt(n_905970683, 2);
          F.line = 462;
          var p_905970686 = addInt(t_905970684, mulInt(m_905970685, stride_905970681));
          if ((tab_905970679[chckIndx(p_905970686, 0, (tab_905970679).length - 1)] <= ((c_905970678) | 0))) {
          F.line = 464;
          t_905970684 = p_905970686;
          F.line = 465;
          n_905970683 = subInt(n_905970683, m_905970685);
          }
          else {
            F.line = 467;
            n_905970683 = m_905970685;
          }
          
        }
    } while (false);
      if (!!((n_905970683 == 0))) Temporary3 = false; else {        Temporary3 = (tab_905970679[chckIndx(t_905970684, 0, (tab_905970679).length - 1)] <= ((c_905970678) | 0));      }    if (Temporary3) {
    F.line = 469;
    result_905970682 = t_905970684;
    break BeforeRet;
    }
    
    F.line = 470;
    result_905970682 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_905970682;

}

function nuctoLower(c_905970688) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_905970689 = 0;

  var F = {procname: "unicode.toLower", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 481;
    var c_905970690 = c_905970688;
    F.line = 482;
    var p_905970699 = binarySearch_905970677(c_905970690, toLowerRanges_905970587, 45, 3);
      if (!(0 <= p_905970699)) Temporary2 = false; else {        Temporary2 = (toLowerRanges_905970587[chckIndx(p_905970699, 0, (toLowerRanges_905970587).length - 1)] <= ((c_905970690) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_905970690) | 0) <= toLowerRanges_905970587[chckIndx(addInt(p_905970699, 1), 0, (toLowerRanges_905970587).length - 1)]);      }    if (Temporary1) {
    F.line = 484;
    result_905970689 = ((subInt(addInt(((c_905970690) | 0), toLowerRanges_905970587[chckIndx(addInt(p_905970699, 2), 0, (toLowerRanges_905970587).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 485;
    p_905970699 = binarySearch_905970677(c_905970690, toLowerSinglets_905970588, 610, 2);
      if (!(0 <= p_905970699)) Temporary3 = false; else {        Temporary3 = (((c_905970690) | 0) == toLowerSinglets_905970588[chckIndx(p_905970699, 0, (toLowerSinglets_905970588).length - 1)]);      }    if (Temporary3) {
    F.line = 487;
    result_905970689 = ((subInt(addInt(((c_905970690) | 0), toLowerSinglets_905970588[chckIndx(addInt(p_905970699, 1), 0, (toLowerSinglets_905970588).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 488;
    result_905970689 = c_905970690;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_905970689;

}

function nuctoUpper(c_905970736) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_905970737 = 0;

  var F = {procname: "unicode.toUpper", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 499;
    var c_905970738 = c_905970736;
    F.line = 500;
    var p_905970747 = binarySearch_905970677(c_905970738, toUpperRanges_905970589, 46, 3);
      if (!(0 <= p_905970747)) Temporary2 = false; else {        Temporary2 = (toUpperRanges_905970589[chckIndx(p_905970747, 0, (toUpperRanges_905970589).length - 1)] <= ((c_905970738) | 0));      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (((c_905970738) | 0) <= toUpperRanges_905970589[chckIndx(addInt(p_905970747, 1), 0, (toUpperRanges_905970589).length - 1)]);      }    if (Temporary1) {
    F.line = 502;
    result_905970737 = ((subInt(addInt(((c_905970738) | 0), toUpperRanges_905970589[chckIndx(addInt(p_905970747, 2), 0, (toUpperRanges_905970589).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 503;
    p_905970747 = binarySearch_905970677(c_905970738, toUpperSinglets_905970590, 624, 2);
      if (!(0 <= p_905970747)) Temporary3 = false; else {        Temporary3 = (((c_905970738) | 0) == toUpperSinglets_905970590[chckIndx(p_905970747, 0, (toUpperSinglets_905970590).length - 1)]);      }    if (Temporary3) {
    F.line = 505;
    result_905970737 = ((subInt(addInt(((c_905970738) | 0), toUpperSinglets_905970590[chckIndx(addInt(p_905970747, 1), 0, (toUpperSinglets_905970590).length - 1)]), 500)) | 0);
    break BeforeRet;
    }
    
    F.line = 506;
    result_905970737 = c_905970738;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_905970737;

}

function swapCase_1207959680(r_1207959681) {
  var result_1207959682 = 0;

  var F = {procname: "nodematch.swapCase", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 105;
    result_1207959682 = nuctoLower(r_1207959681);
    if (!(HEX3DHEX3D_905970583(result_1207959682, r_1207959681))) {
    F.line = 107;
    break BeforeRet;
    }
    
    F.line = 108;
    result_1207959682 = nuctoUpper(r_1207959681);
  } while (false);
  framePtr = F.prev;

  return result_1207959682;

}

function isWordAscii_1207959565(r_1207959566) {
    var Temporary1;

  var result_1207959567 = false;

  var F = {procname: "nodematch.isWordAscii", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 17;
    F.line = 19;
    switch (((r_1207959566) | 0)) {
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 95:
      Temporary1 = true;
      break;
    default: 
      Temporary1 = false;
      break;
    }
    result_1207959567 = Temporary1;
  framePtr = F.prev;

  return result_1207959567;

}

function isDigitAscii_1207959664(r_1207959665) {
    var Temporary1;

  var result_1207959666 = false;

  var F = {procname: "nodematch.isDigitAscii", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 92;
    F.line = 92;
    switch (((r_1207959665) | 0)) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      Temporary1 = true;
      break;
    default: 
      Temporary1 = false;
      break;
    }
    result_1207959666 = Temporary1;
  framePtr = F.prev;

  return result_1207959666;

}

function isWhiteSpaceAscii_1207959643(r_1207959644) {
    var Temporary1;

  var result_1207959645 = false;

  var F = {procname: "nodematch.isWhiteSpaceAscii", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 80;
    F.line = 80;
    switch (((r_1207959644) | 0)) {
    case 32:
    case 9:
    case 10:
    case 13:
    case 12:
    case 11:
      Temporary1 = true;
      break;
    default: 
      Temporary1 = false;
      break;
    }
    result_1207959645 = Temporary1;
  framePtr = F.prev;

  return result_1207959645;

}

function contains_1040187396(a_1040187397, b_1040187398) {
  var result_1040187399 = false;

  var F = {procname: "properties.contains", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
  framePtr = F;
    F.line = 54;
    result_1040187399 = !(((((b_1040187398) | 0) & ((a_1040187397) | 0)) == 0));
  framePtr = F.prev;

  return result_1040187399;

}

function unicodeCategory_1040187534(props_1040187535) {
  var result_1040187536 = 0;

  var F = {procname: "properties.unicodeCategory", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
  framePtr = F;
    F.line = 239;
    result_1040187536 = props_1040187535[chckIndx(0, 0, (props_1040187535).length - 1)];
  framePtr = F.prev;

  return result_1040187536;

}

function properties_1040187484(cp_1040187485) {
  var result_1040187486 = new Int32Array(4);

  var F = {procname: "properties.properties", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
  framePtr = F;
    if (!((((cp_1040187485) | 0) <= 1114111))) {
    F.line = 197;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim(197, 10) `cp.int <= 0x0010FFFF` "));
    }
    
    F.line = 200;
    var blockOffset_1040187496 = mulInt(((propsOffsets_1056964651[chckIndx(divInt(((cp_1040187485) | 0), 128), 0, (propsOffsets_1056964651).length - 1)]) | 0), 128);
    F.line = 201;
    var idx_1040187497 = propsIndices_1056964652[chckIndx(addInt(blockOffset_1040187496, modInt(((cp_1040187485) | 0), 128)), 0, (propsIndices_1056964652).length - 1)];
    F.line = 202;
    result_1040187486 = nimCopy(result_1040187486, propsData_1056964653[chckIndx(idx_1040187497, 0, (propsData_1056964653).length - 1)], NTI1040187443);
  framePtr = F.prev;

  return result_1040187486;

}

function unicodeCategory_1040187537(cp_1040187538) {
  var result_1040187539 = 0;

  var F = {procname: "properties.unicodeCategory", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\unicodedb-0.11.1\\unicodedb\\properties.nim", line: 0};
  framePtr = F;
    F.line = 242;
    result_1040187539 = unicodeCategory_1040187534(properties_1040187484(cp_1040187538));
  framePtr = F.prev;

  return result_1040187539;

}

function isAnyAscii_1207959673(r_1207959674) {
    var Temporary1;

  var result_1207959675 = false;

  var F = {procname: "nodematch.isAnyAscii", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 99;
    if (!(((r_1207959674) | 0) <= 127)) Temporary1 = false; else {      Temporary1 = !(HEX3DHEX3D_905970583(r_1207959674, 10));    }    result_1207959675 = Temporary1;
  framePtr = F.prev;

  return result_1207959675;

}

function match_1207959683(n_1207959684, r_1207959685) {
    var Temporary1;

  var result_1207959686 = false;

  var F = {procname: "nodematch.match", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 111;
    if ((((r_1207959685) | 0) < 0)) {
    F.line = 115;
    result_1207959686 = (n_1207959684.kind == 46);
    break BeforeRet;
    }
    
    F.line = 116;
    switch (n_1207959684.kind) {
    case 46:
      Temporary1 = HEX3DHEX3D_905970583(r_1207959685, -1);
      break;
    case 19:
      Temporary1 = isWord_1207959559(r_1207959685);
      break;
    case 23:
      Temporary1 = !(isWord_1207959559(r_1207959685));
      break;
    case 20:
      Temporary1 = isDecimal_1207959562(r_1207959685);
      break;
    case 24:
      Temporary1 = !(isDecimal_1207959562(r_1207959685));
      break;
    case 21:
      Temporary1 = isWhiteSpace_1207959640(r_1207959685);
      break;
    case 25:
      Temporary1 = !(isWhiteSpace_1207959640(r_1207959685));
      break;
    case 39:
    case 40:
      F.line = 132;
      var matches_1207959724 = (contains_1207959704(n_1207959684.cps, r_1207959685) || contains_1207959611(n_1207959684.ranges, r_1207959685));
      if (!(matches_1207959724)) {
      Label2: do {
        F.line = 136;
        var nn_1207959728 = ({kind: 0, cp: 0, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: ({data: [], counter: 0}), ranges: [], shorthands: [], cc: 0, subExp: ({nfa: ({s: [], t: ({allZ: [], z: []})}), rpn: ({s: []}), reverseCapts: false})});
        F.line = 235;
        var i_956302475 = 0;
        F.line = 236;
        var L_956302476 = (n_1207959684.shorthands).length;
        Label3: do {
          F.line = 237;
            Label4: while (true) {
            if (!(i_956302475 < L_956302476)) break Label4;
              F.line = 136;
              nn_1207959728 = n_1207959684.shorthands[chckIndx(i_956302475, 0, (n_1207959684.shorthands).length - 1)];
              F.line = 137;
              matches_1207959724 = match_1207959683(nn_1207959728, r_1207959685);
              if (matches_1207959724) {
              F.line = 138;
              break Label2;
              }
              
              F.line = 239;
              i_956302475 = addInt(i_956302475, 1);
              if (!(((n_1207959684.shorthands).length == L_956302476))) {
              F.line = 240;
              failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      }
      
      Temporary1 = ((matches_1207959724 && (n_1207959684.kind == 39)) || (!(matches_1207959724) && (n_1207959684.kind == 40)));
      break;
    case 27:
      Temporary1 = !(HEX3DHEX3D_905970583(r_1207959685, 10));
      break;
    case 28:
      Temporary1 = true;
      break;
    case 1:
      Temporary1 = (HEX3DHEX3D_905970583(r_1207959685, n_1207959684.cp) || HEX3DHEX3D_905970583(r_1207959685, swapCase_1207959680(n_1207959684.cp)));
      break;
    case 31:
      Temporary1 = isWordAscii_1207959565(r_1207959685);
      break;
    case 32:
      Temporary1 = isDigitAscii_1207959664(r_1207959685);
      break;
    case 33:
      Temporary1 = isWhiteSpaceAscii_1207959643(r_1207959685);
      break;
    case 22:
      Temporary1 = contains_1040187396(n_1207959684.cc, unicodeCategory_1040187537(r_1207959685));
      break;
    case 34:
      Temporary1 = !(isWordAscii_1207959565(r_1207959685));
      break;
    case 35:
      Temporary1 = !(isDigitAscii_1207959664(r_1207959685));
      break;
    case 36:
      Temporary1 = !(isWhiteSpaceAscii_1207959643(r_1207959685));
      break;
    case 26:
      Temporary1 = !(contains_1040187396(n_1207959684.cc, unicodeCategory_1040187537(r_1207959685)));
      break;
    case 37:
      Temporary1 = isAnyAscii_1207959673(r_1207959685);
      break;
    case 38:
      Temporary1 = (isAnyAscii_1207959673(r_1207959685) || HEX3DHEX3D_905970583(r_1207959685, 10));
      break;
    default: 
      if (!((n_1207959684.kind == 0))) {
      F.line = 168;
      failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim(168, 12) `n.kind == reChar` "));
      }
      
      Temporary1 = HEX3DHEX3D_905970583(n_1207959684.cp, r_1207959685);
      break;
    }
    result_1207959686 = Temporary1;
  } while (false);
  framePtr = F.prev;

  return result_1207959686;

}

function isWordBoundary_1207959593(r_1207959594, nxt_1207959595) {
    var Temporary1;
    var Temporary2;

  var result_1207959596 = false;

  var F = {procname: "nodematch.isWordBoundary", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 33;
    if (!(-1 < ((r_1207959594) | 0))) Temporary1 = false; else {      Temporary1 = isWord_1207959559(r_1207959594);    }    if (!(-1 < ((nxt_1207959595) | 0))) Temporary2 = false; else {      Temporary2 = isWord_1207959559(nxt_1207959595);    }    result_1207959596 = (Temporary1 != Temporary2);
  framePtr = F.prev;

  return result_1207959596;

}

function isWordBoundaryAscii_1207959597(r_1207959598, nxt_1207959599) {
    var Temporary1;
    var Temporary2;

  var result_1207959600 = false;

  var F = {procname: "nodematch.isWordBoundaryAscii", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 38;
    if (!(-1 < ((r_1207959598) | 0))) Temporary1 = false; else {      Temporary1 = isWordAscii_1207959565(r_1207959598);    }    if (!(-1 < ((nxt_1207959599) | 0))) Temporary2 = false; else {      Temporary2 = isWordAscii_1207959565(nxt_1207959599);    }    result_1207959600 = (Temporary1 != Temporary2);
  framePtr = F.prev;

  return result_1207959600;

}

function match_1207959601(n_1207959602, r_1207959603, nxt_1207959604) {
    var Temporary1;

  var result_1207959605 = false;

  var F = {procname: "nodematch.match", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim", line: 0};
  framePtr = F;
    F.line = 43;
    F.line = 46;
    switch (n_1207959602.kind) {
    case 15:
    case 11:
      Temporary1 = HEX3DHEX3D_905970583(r_1207959603, -1);
      break;
    case 16:
    case 12:
      Temporary1 = HEX3DHEX3D_905970583(nxt_1207959604, -1);
      break;
    case 13:
      Temporary1 = (HEX3DHEX3D_905970583(r_1207959603, -1) || HEX3DHEX3D_905970583(r_1207959603, 10));
      break;
    case 14:
      Temporary1 = (HEX3DHEX3D_905970583(nxt_1207959604, -1) || HEX3DHEX3D_905970583(nxt_1207959604, 10));
      break;
    case 17:
      Temporary1 = isWordBoundary_1207959593(r_1207959603, nxt_1207959604);
      break;
    case 18:
      Temporary1 = !(isWordBoundary_1207959593(r_1207959603, nxt_1207959604));
      break;
    case 29:
      Temporary1 = isWordBoundaryAscii_1207959597(r_1207959603, nxt_1207959604);
      break;
    case 30:
      Temporary1 = !(isWordBoundaryAscii_1207959597(r_1207959603, nxt_1207959604));
      break;
    default: 
      if (true) {
      F.line = 66;
      failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nodematch.nim(66, 12) `false` "));
      }
      
      Temporary1 = false;
      break;
    }
    result_1207959605 = Temporary1;
  framePtr = F.prev;

  return result_1207959605;

}

function grow_1174406069(sm_1174406070) {
    var Temporary1;

  var F = {procname: "nfatype.grow", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    if (!((sm_1174406070.i <= (sm_1174406070.s).length))) {
    F.line = 180;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(180, 12) `sm.i <= sm.s.len` "));
    }
    
    if ((sm_1174406070.i == (sm_1174406070.s).length)) {
    F.line = 182;
    if (sm_1174406070.s.length < (Temporary1 = chckRange(mulInt(nimMax(1, (sm_1174406070.s).length), 2), 0, 2147483647), Temporary1)) { for (var i = sm_1174406070.s.length ; i < Temporary1 ; ++i) sm_1174406070.s.push(({a: null, b: null})); }
               else { sm_1174406070.s.length = Temporary1; };
    }
    
    F.line = 183;
    sm_1174406070.i = addInt(sm_1174406070.i, 1);
  framePtr = F.prev;

  
}

function setLen_1174406025(sm_1174406026, sm_1174406026_Idx, size_1174406027) {
  var F = {procname: "nfatype.setLen", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 146;
    if (sm_1174406026[sm_1174406026_Idx].ss.length < chckRange(size_1174406027, 0, 2147483647)) { for (var i = sm_1174406026[sm_1174406026_Idx].ss.length ; i < chckRange(size_1174406027, 0, 2147483647) ; ++i) sm_1174406026[sm_1174406026_Idx].ss.push(0); }
               else { sm_1174406026[sm_1174406026_Idx].ss.length = chckRange(size_1174406027, 0, 2147483647); };
  framePtr = F.prev;

  
}

function setLen_1174406038(item_1174406039, size_1174406040) {
  var F = {procname: "nfatype.setLen", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    if ((item_1174406039.a == null)) {
    if (!((item_1174406039.b == null))) {
    F.line = 162;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(162, 14) `item.b == nil` "));
    }
    
    F.line = 163;
    item_1174406039.a = newSubmatches_1174405896(size_1174406040);
    F.line = 164;
    item_1174406039.b = newSubmatches_1174405896(size_1174406040);
    }
    else {
      if (!(!((item_1174406039.b == null)))) {
      F.line = 166;
      failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(166, 14) `item.b != nil` "));
      }
      
      F.line = 167;
      setLen_1174406025(item_1174406039, "a", size_1174406040);
      F.line = 168;
      setLen_1174406025(item_1174406039, "b", size_1174406040);
    }
    
  framePtr = F.prev;

  
}

function removeLast_1174406094(sm_1174406095) {
  var F = {procname: "nfatype.removeLast", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    if (!((0 < sm_1174406095.i))) {
    F.line = 186;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(186, 12) `sm.i > 0` "));
    }
    
    F.line = 187;
    sm_1174406095.i = subInt(sm_1174406095.i, 1);
  framePtr = F.prev;

  
}

function HEX5BHEX5D_1174405963(sm_1174405964, i_1174405965) {
  var result_1174405966 = {Field0: 0, Field1: 0, Field2: ({a: 0, b: 0})};

  var F = {procname: "nfatype.[]", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 112;
    if (!((i_1174405965 < ((sm_1174405964.si) | 0)))) {
    F.line = 112;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(112, 10) `i < sm.si` "));
    }
    
    result_1174405966 = nimCopy(result_1174405966, sm_1174405964.sx[chckIndx(i_1174405965, 0, (sm_1174405964.sx).length - 1)], NTI1174405631);
  framePtr = F.prev;

  return result_1174405966;

}

function reverse_1174405297(capts_1174405298, capts_1174405298_Idx, a_1174405299, b_1174405300) {
  var result_1174405301 = 0;

  var F = {procname: "nfatype.reverse", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!((b_1174405300 <= a_1174405299))) {
    F.line = 46;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim(46, 12) `a >= b` "));
    }
    
    F.line = 47;
    var capt_1174405307 = a_1174405299;
    F.line = 48;
    var parent_1174405308 = b_1174405300;
    Label1: do {
      F.line = 49;
        Label2: while (true) {
        if (!!((capt_1174405307 == b_1174405300))) break Label2;
          F.line = 50;
          var p_1174405309 = capts_1174405298[capts_1174405298_Idx][chckIndx(capt_1174405307, 0, (capts_1174405298[capts_1174405298_Idx]).length - 1)].parent;
          F.line = 51;
          capts_1174405298[capts_1174405298_Idx][chckIndx(capt_1174405307, 0, (capts_1174405298[capts_1174405298_Idx]).length - 1)].parent = parent_1174405308;
          F.line = 52;
          parent_1174405308 = capt_1174405307;
          F.line = 53;
          capt_1174405307 = p_1174405309;
        }
    } while (false);
    F.line = 54;
    result_1174405301 = parent_1174405308;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1174405301;

}

function matchImpl_1308622887(smA_1308622888, smA_1308622888_Idx, smB_1308622889, smB_1308622889_Idx, capts_1308622890, capts_1308622890_Idx, captIdx_1308622891, captIdx_1308622891_Idx, text_1308622892, nfa_1308622893, look_1308622894, start_1308622895, flags_1308622896) {
                                        var Temporary14;
                                        var Temporary15;
            var Temporary17;
                                  var Temporary29;
                                  var Temporary30;

  var result_1308622897 = false;

  var F = {procname: "nfamatch.matchImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 130;
    var c_1308622898 = -1;
    F.line = 131;
    var cPrev_1308622899 = -1;
    F.line = 132;
    var i_1308622900 = start_1308622895;
    F.line = 133;
    var iNext_1308622901 = start_1308622895;
    F.line = 134;
    var captx_1308622902 = [-1];
    F.line = 135;
    var matched_1308622903 = false;
    F.line = 136;
    var anchored_1308622909 = (flags_1308622896[4] != undefined);
    if (contains_1107297731(HEX2EHEX2E_905970515(0, subInt((text_1308622892).length, 1)), subInt(start_1308622895, 1))) {
    F.line = 138;
    cPrev_1308622899 = bwRuneAt_1073741866(text_1308622892, subInt(start_1308622895, 1));
    }
    
    F.line = 139;
    clear_1174406010(smA_1308622888, smA_1308622888_Idx);
    F.line = 140;
    add_1174405976(smA_1308622888, smA_1308622888_Idx, {Field0: 0, Field1: captIdx_1308622891[captIdx_1308622891_Idx], Field2: HEX2EHEX2E_905970515(i_1308622900, subInt(i_1308622900, 1))});
    Label1: do {
      F.line = 141;
        Label2: while (true) {
        if (!(i_1308622900 < (text_1308622892).length)) break Label2;
          if ((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] <= 127)) {
          F.line = 81;
          c_1308622898 = chckRange(text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)], -2147483648, 2147483647);
          F.line = 82;
          iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          else {
          if (((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] >>> 5) == 6)) {
          if ((iNext_1308622901 <= subInt((text_1308622892).length, 2))) {
          F.line = 86;
          c_1308622898 = chckRange((((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] & 31) << 6) | (text_1308622892[chckIndx(addInt(iNext_1308622901, 1), 0, (text_1308622892).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 88;
          iNext_1308622901 = addInt(iNext_1308622901, 2);
          }
          else {
            F.line = 90;
            c_1308622898 = 65533;
            F.line = 91;
            iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          
          }
          else {
          if (((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] >>> 4) == 14)) {
          if ((iNext_1308622901 <= subInt((text_1308622892).length, 3))) {
          F.line = 96;
          c_1308622898 = chckRange(((((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] & 15) << 12) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 1), 0, (text_1308622892).length - 1)] & 63) << 6)) | (text_1308622892[chckIndx(addInt(iNext_1308622901, 2), 0, (text_1308622892).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 99;
          iNext_1308622901 = addInt(iNext_1308622901, 3);
          }
          else {
            F.line = 101;
            c_1308622898 = 65533;
            F.line = 102;
            iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          
          }
          else {
          if (((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] >>> 3) == 30)) {
          if ((iNext_1308622901 <= subInt((text_1308622892).length, 4))) {
          F.line = 108;
          c_1308622898 = chckRange((((((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] & 7) << 18) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 1), 0, (text_1308622892).length - 1)] & 63) << 12)) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 2), 0, (text_1308622892).length - 1)] & 63) << 6)) | (text_1308622892[chckIndx(addInt(iNext_1308622901, 3), 0, (text_1308622892).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 112;
          iNext_1308622901 = addInt(iNext_1308622901, 4);
          }
          else {
            F.line = 114;
            c_1308622898 = 65533;
            F.line = 115;
            iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          
          }
          else {
          if (((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] >>> 2) == 62)) {
          if ((iNext_1308622901 <= subInt((text_1308622892).length, 5))) {
          F.line = 122;
          c_1308622898 = chckRange(((((((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] & 3) << 24) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 1), 0, (text_1308622892).length - 1)] & 63) << 18)) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 2), 0, (text_1308622892).length - 1)] & 63) << 12)) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 3), 0, (text_1308622892).length - 1)] & 63) << 6)) | (text_1308622892[chckIndx(addInt(iNext_1308622901, 4), 0, (text_1308622892).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 127;
          iNext_1308622901 = addInt(iNext_1308622901, 5);
          }
          else {
            F.line = 129;
            c_1308622898 = 65533;
            F.line = 130;
            iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          
          }
          else {
          if (((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] >>> 1) == 126)) {
          if ((iNext_1308622901 <= subInt((text_1308622892).length, 6))) {
          F.line = 138;
          c_1308622898 = chckRange((((((((text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)] & 1) << 30) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 1), 0, (text_1308622892).length - 1)] & 63) << 24)) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 2), 0, (text_1308622892).length - 1)] & 63) << 18)) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 3), 0, (text_1308622892).length - 1)] & 63) << 12)) | ((text_1308622892[chckIndx(addInt(iNext_1308622901, 4), 0, (text_1308622892).length - 1)] & 63) << 6)) | (text_1308622892[chckIndx(addInt(iNext_1308622901, 5), 0, (text_1308622892).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 144;
          iNext_1308622901 = addInt(iNext_1308622901, 6);
          }
          else {
            F.line = 146;
            c_1308622898 = 65533;
            F.line = 147;
            iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          
          }
          else {
            F.line = 149;
            c_1308622898 = chckRange(text_1308622892[chckIndx(iNext_1308622901, 0, (text_1308622892).length - 1)], -2147483648, 2147483647);
            F.line = 150;
            iNext_1308622901 = addInt(iNext_1308622901, 1);
          }
          }}}}}
          F.line = 78;
          clear_1174406010(smB_1308622889, smB_1308622889_Idx);
          Label3: do {
            F.line = 79;
            var n_1308623177 = 0;
            F.line = 79;
            var capt_1308623178 = 0;
            F.line = 79;
            var bounds_1308623179 = ({a: 0, b: 0});
            Label4: do {
              F.line = 134;
              var i_436210392 = 0;
              F.line = 75;
              var colontmp__436210393 = 0;
              F.line = 134;
              colontmp__436210393 = subInt(len_1174406007(smA_1308622888[smA_1308622888_Idx]), 1);
              F.line = 90;
              var res_436210394 = 0;
              Label5: do {
                F.line = 91;
                  Label6: while (true) {
                  if (!(res_436210394 <= colontmp__436210393)) break Label6;
                    F.line = 134;
                    i_436210392 = res_436210394;
                    F.line = 79;
                    var colontmp__436210397 = nimCopy(null, smA_1308622888[smA_1308622888_Idx].sx[chckIndx(i_436210392, 0, (smA_1308622888[smA_1308622888_Idx].sx).length - 1)], NTI1174405631);
                    F.line = 79;
                    n_1308623177 = colontmp__436210397["Field0"];
                    F.line = 79;
                    capt_1308623178 = colontmp__436210397["Field1"];
                    F.line = 79;
                    bounds_1308623179 = nimCopy(bounds_1308623179, colontmp__436210397["Field2"], NTI704643133);
                    if ((anchored_1308622909 && (nfa_1308622893.s[chckIndx(n_1308623177, 0, (nfa_1308622893.s).length - 1)].kind == 46))) {
                    if (!(hasState_1174405972(smB_1308622889[smB_1308622889_Idx], n_1308623177))) {
                    F.line = 82;
                    add_1174405976(smB_1308622889, smB_1308622889_Idx, {Field0: n_1308623177, Field1: capt_1308623178, Field2: nimCopy(null, bounds_1308623179, NTI704643133)});
                    }
                    
                    F.line = 83;
                    break Label3;
                    }
                    
                    Label7: do {
                      F.line = 84;
                      var nti_1308623189 = 0;
                      F.line = 84;
                      var nt_1308623190 = 0;
                      F.line = 166;
                      var colontmp__436210383 = [];
                      F.line = 84;
                      colontmp__436210383 = nfa_1308622893.s[chckIndx(n_1308623177, 0, (nfa_1308622893.s).length - 1)].next;
                      F.line = 168;
                      var i_436210384 = 0;
                      F.line = 169;
                      var L_436210385 = (colontmp__436210383).length;
                      Label8: do {
                        F.line = 170;
                          Label9: while (true) {
                          if (!(i_436210384 < L_436210385)) break Label9;
                            F.line = 84;
                            nti_1308623189 = i_436210384;
                            F.line = 84;
                            nt_1308623190 = colontmp__436210383[chckIndx(i_436210384, 0, (colontmp__436210383).length - 1)];
                            Label10: do {
                              if (hasState_1174405972(smB_1308622889[smB_1308622889_Idx], nt_1308623190)) {
                              F.line = 86;
                              break Label10;
                              }
                              
                              if (!(match_1207959683(nfa_1308622893.s[chckIndx(nt_1308623190, 0, (nfa_1308622893.s).length - 1)], c_1308622898))) {
                              if (!((anchored_1308622909 && (nfa_1308622893.s[chckIndx(nt_1308623190, 0, (nfa_1308622893.s).length - 1)].kind == 46)))) {
                              F.line = 89;
                              break Label10;
                              }
                              
                              }
                              
                              if ((nfa_1308622893.t.allZ[chckIndx(n_1308623177, 0, (nfa_1308622893.t.allZ).length - 1)][chckIndx(nti_1308623189, 0, (nfa_1308622893.t.allZ[chckIndx(n_1308623177, 0, (nfa_1308622893.t.allZ).length - 1)]).length - 1)] == -1)) {
                              F.line = 91;
                              add_1174405976(smB_1308622889, smB_1308622889_Idx, {Field0: nt_1308623190, Field1: capt_1308623178, Field2: HEX2EHEX2E_905970515(bounds_1308623179.a, subInt(i_1308622900, 1))});
                              F.line = 92;
                              break Label10;
                              }
                              
                              F.line = 93;
                              matched_1308622903 = true;
                              F.line = 94;
                              captx_1308622902[0] = capt_1308623178;
                              Label11: do {
                                F.line = 95;
                                var z_1308623203 = ({kind: 0, cp: 0, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: ({data: [], counter: 0}), ranges: [], shorthands: [], cc: 0, subExp: ({nfa: ({s: [], t: ({allZ: [], z: []})}), rpn: ({s: []}), reverseCapts: false})});
                                F.line = 233;
                                var colontmp__436210379 = [];
                                F.line = 95;
                                colontmp__436210379 = nfa_1308622893.t.z[chckIndx(nfa_1308622893.t.allZ[chckIndx(n_1308623177, 0, (nfa_1308622893.t.allZ).length - 1)][chckIndx(nti_1308623189, 0, (nfa_1308622893.t.allZ[chckIndx(n_1308623177, 0, (nfa_1308622893.t.allZ).length - 1)]).length - 1)], 0, (nfa_1308622893.t.z).length - 1)];
                                F.line = 235;
                                var i_436210380 = 0;
                                F.line = 236;
                                var L_436210381 = (colontmp__436210379).length;
                                Label12: do {
                                  F.line = 237;
                                    Label13: while (true) {
                                    if (!(i_436210380 < L_436210381)) break Label13;
                                      F.line = 95;
                                      z_1308623203 = colontmp__436210379[chckIndx(i_436210380, 0, (colontmp__436210379).length - 1)];
                                      if (!(matched_1308622903)) {
                                      F.line = 97;
                                      break Label11;
                                      }
                                      
                                      F.line = 95;
                                      switch (z_1308623203.kind) {
                                      case 3:
                                      case 4:
                                        F.line = 100;
                                        capts_1308622890[capts_1308622890_Idx].push({parent: captx_1308622902[0], bound: i_1308622900, idx: z_1308623203.idx});;
                                        F.line = 104;
                                        captx_1308622902[0] = ((subInt((capts_1308622890[capts_1308622890_Idx]).length, 1)) | 0);
                                        break;
                                      case 11:
                                      case 12:
                                      case 13:
                                      case 14:
                                      case 15:
                                      case 16:
                                      case 17:
                                      case 18:
                                      case 29:
                                      case 30:
                                        F.line = 109;
                                        matched_1308622903 = match_1207959601(z_1308623203, cPrev_1308622899, c_1308622898);
                                        break;
                                      case 41:
                                      case 42:
                                      case 43:
                                      case 44:
                                        F.line = 47;
                                        if (z_1308623203.subExp.reverseCapts) {
                                        Temporary14 = ConstSet47;
                                        }
                                        else {
                                        Temporary14 = ConstSet48;
                                        }
                                        
                                        var flags2_1308623219 = nimCopy(null, Temporary14, NTI1308623426);
                                        F.line = 51;
                                        grow_1174406069(look_1308622894.smL);
                                        F.line = 52;
                                        setLen_1174406038(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], (z_1308623203.subExp.nfa.s).length);
                                        F.line = 53;
                                        F.line = 53;
                                        switch (z_1308623203.kind) {
                                        case 41:
                                          Temporary15 = look_1308622894.ahead(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623203.subExp.nfa, look_1308622894, i_1308622900, flags2_1308623219);
                                          break;
                                        case 43:
                                          Temporary15 = !(look_1308622894.ahead(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623203.subExp.nfa, look_1308622894, i_1308622900, flags2_1308623219));
                                          break;
                                        case 42:
                                          Temporary15 = !((look_1308622894.behind(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623203.subExp.nfa, look_1308622894, i_1308622900, 0, flags2_1308623219) == -1));
                                          break;
                                        case 44:
                                          Temporary15 = (look_1308622894.behind(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623203.subExp.nfa, look_1308622894, i_1308622900, 0, flags2_1308623219) == -1);
                                          break;
                                        default: 
                                          if (true) {
                                          F.line = 71;
                                          failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(71, 14) `false` "));
                                          }
                                          
                                          Temporary15 = false;
                                          break;
                                        }
                                        matched_1308622903 = Temporary15;
                                        F.line = 73;
                                        removeLast_1174406094(look_1308622894.smL);
                                        break;
                                      default: 
                                        if (true) {
                                        F.line = 113;
                                        failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(113, 20) `false` "));
                                        }
                                        
                                        break;
                                      }
                                      F.line = 239;
                                      i_436210380 = addInt(i_436210380, 1);
                                      if (!(((colontmp__436210379).length == L_436210381))) {
                                      F.line = 240;
                                      failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                      }
                                      
                                    }
                                } while (false);
                              } while (false);
                              if (matched_1308622903) {
                              F.line = 116;
                              add_1174405976(smB_1308622889, smB_1308622889_Idx, {Field0: nt_1308623190, Field1: captx_1308622902[0], Field2: HEX2EHEX2E_905970515(bounds_1308623179.a, subInt(i_1308622900, 1))});
                              }
                              
                            } while (false);
                            F.line = 172;
                            i_436210384 = addInt(i_436210384, 1);
                            if (!(((colontmp__436210383).length == L_436210385))) {
                            F.line = 173;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    F.line = 93;
                    res_436210394 = addInt(res_436210394, 1);
                  }
              } while (false);
            } while (false);
          } while (false);
          F.line = 143;
          var Temporary16 = smA_1308622888[smA_1308622888_Idx]; smA_1308622888[smA_1308622888_Idx] = smB_1308622889[smB_1308622889_Idx]; smB_1308622889[smB_1308622889_Idx] = Temporary16;          if ((len_1174406007(smA_1308622888[smA_1308622888_Idx]) == 0)) {
          F.line = 145;
          result_1308622897 = false;
          break BeforeRet;
          }
          
            if (!anchored_1308622909) Temporary17 = false; else {              Temporary17 = (nfa_1308622893.s[chckIndx(HEX5BHEX5D_1174405963(smA_1308622888[smA_1308622888_Idx], 0).Field0, 0, (nfa_1308622893.s).length - 1)].kind == 46);            }          if (Temporary17) {
          F.line = 147;
          break Label1;
          }
          
          F.line = 148;
          i_1308622900 = iNext_1308622901;
          F.line = 149;
          cPrev_1308622899 = c_1308622898;
        }
    } while (false);
    F.line = 150;
    c_1308622898 = -1;
    F.line = 78;
    clear_1174406010(smB_1308622889, smB_1308622889_Idx);
    Label18: do {
      F.line = 79;
      var n_1308623247 = 0;
      F.line = 79;
      var capt_1308623248 = 0;
      F.line = 79;
      var bounds_1308623249 = ({a: 0, b: 0});
      Label19: do {
        F.line = 134;
        var i_436210411 = 0;
        F.line = 75;
        var colontmp__436210412 = 0;
        F.line = 134;
        colontmp__436210412 = subInt(len_1174406007(smA_1308622888[smA_1308622888_Idx]), 1);
        F.line = 90;
        var res_436210413 = 0;
        Label20: do {
          F.line = 91;
            Label21: while (true) {
            if (!(res_436210413 <= colontmp__436210412)) break Label21;
              F.line = 134;
              i_436210411 = res_436210413;
              F.line = 79;
              var colontmp__436210416 = nimCopy(null, smA_1308622888[smA_1308622888_Idx].sx[chckIndx(i_436210411, 0, (smA_1308622888[smA_1308622888_Idx].sx).length - 1)], NTI1174405631);
              F.line = 79;
              n_1308623247 = colontmp__436210416["Field0"];
              F.line = 79;
              capt_1308623248 = colontmp__436210416["Field1"];
              F.line = 79;
              bounds_1308623249 = nimCopy(bounds_1308623249, colontmp__436210416["Field2"], NTI704643133);
              if ((anchored_1308622909 && (nfa_1308622893.s[chckIndx(n_1308623247, 0, (nfa_1308622893.s).length - 1)].kind == 46))) {
              if (!(hasState_1174405972(smB_1308622889[smB_1308622889_Idx], n_1308623247))) {
              F.line = 82;
              add_1174405976(smB_1308622889, smB_1308622889_Idx, {Field0: n_1308623247, Field1: capt_1308623248, Field2: nimCopy(null, bounds_1308623249, NTI704643133)});
              }
              
              F.line = 83;
              break Label18;
              }
              
              Label22: do {
                F.line = 84;
                var nti_1308623259 = 0;
                F.line = 84;
                var nt_1308623260 = 0;
                F.line = 166;
                var colontmp__436210406 = [];
                F.line = 84;
                colontmp__436210406 = nfa_1308622893.s[chckIndx(n_1308623247, 0, (nfa_1308622893.s).length - 1)].next;
                F.line = 168;
                var i_436210407 = 0;
                F.line = 169;
                var L_436210408 = (colontmp__436210406).length;
                Label23: do {
                  F.line = 170;
                    Label24: while (true) {
                    if (!(i_436210407 < L_436210408)) break Label24;
                      F.line = 84;
                      nti_1308623259 = i_436210407;
                      F.line = 84;
                      nt_1308623260 = colontmp__436210406[chckIndx(i_436210407, 0, (colontmp__436210406).length - 1)];
                      Label25: do {
                        if (hasState_1174405972(smB_1308622889[smB_1308622889_Idx], nt_1308623260)) {
                        F.line = 86;
                        break Label25;
                        }
                        
                        if (!(match_1207959683(nfa_1308622893.s[chckIndx(nt_1308623260, 0, (nfa_1308622893.s).length - 1)], c_1308622898))) {
                        if (!((anchored_1308622909 && (nfa_1308622893.s[chckIndx(nt_1308623260, 0, (nfa_1308622893.s).length - 1)].kind == 46)))) {
                        F.line = 89;
                        break Label25;
                        }
                        
                        }
                        
                        if ((nfa_1308622893.t.allZ[chckIndx(n_1308623247, 0, (nfa_1308622893.t.allZ).length - 1)][chckIndx(nti_1308623259, 0, (nfa_1308622893.t.allZ[chckIndx(n_1308623247, 0, (nfa_1308622893.t.allZ).length - 1)]).length - 1)] == -1)) {
                        F.line = 91;
                        add_1174405976(smB_1308622889, smB_1308622889_Idx, {Field0: nt_1308623260, Field1: capt_1308623248, Field2: HEX2EHEX2E_905970515(bounds_1308623249.a, subInt(i_1308622900, 1))});
                        F.line = 92;
                        break Label25;
                        }
                        
                        F.line = 93;
                        matched_1308622903 = true;
                        F.line = 94;
                        captx_1308622902[0] = capt_1308623248;
                        Label26: do {
                          F.line = 95;
                          var z_1308623273 = ({kind: 0, cp: 0, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: ({data: [], counter: 0}), ranges: [], shorthands: [], cc: 0, subExp: ({nfa: ({s: [], t: ({allZ: [], z: []})}), rpn: ({s: []}), reverseCapts: false})});
                          F.line = 233;
                          var colontmp__436210402 = [];
                          F.line = 95;
                          colontmp__436210402 = nfa_1308622893.t.z[chckIndx(nfa_1308622893.t.allZ[chckIndx(n_1308623247, 0, (nfa_1308622893.t.allZ).length - 1)][chckIndx(nti_1308623259, 0, (nfa_1308622893.t.allZ[chckIndx(n_1308623247, 0, (nfa_1308622893.t.allZ).length - 1)]).length - 1)], 0, (nfa_1308622893.t.z).length - 1)];
                          F.line = 235;
                          var i_436210403 = 0;
                          F.line = 236;
                          var L_436210404 = (colontmp__436210402).length;
                          Label27: do {
                            F.line = 237;
                              Label28: while (true) {
                              if (!(i_436210403 < L_436210404)) break Label28;
                                F.line = 95;
                                z_1308623273 = colontmp__436210402[chckIndx(i_436210403, 0, (colontmp__436210402).length - 1)];
                                if (!(matched_1308622903)) {
                                F.line = 97;
                                break Label26;
                                }
                                
                                F.line = 95;
                                switch (z_1308623273.kind) {
                                case 3:
                                case 4:
                                  F.line = 100;
                                  capts_1308622890[capts_1308622890_Idx].push({parent: captx_1308622902[0], bound: i_1308622900, idx: z_1308623273.idx});;
                                  F.line = 104;
                                  captx_1308622902[0] = ((subInt((capts_1308622890[capts_1308622890_Idx]).length, 1)) | 0);
                                  break;
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                case 29:
                                case 30:
                                  F.line = 109;
                                  matched_1308622903 = match_1207959601(z_1308623273, cPrev_1308622899, c_1308622898);
                                  break;
                                case 41:
                                case 42:
                                case 43:
                                case 44:
                                  F.line = 47;
                                  if (z_1308623273.subExp.reverseCapts) {
                                  Temporary29 = ConstSet49;
                                  }
                                  else {
                                  Temporary29 = ConstSet50;
                                  }
                                  
                                  var flags2_1308623289 = nimCopy(null, Temporary29, NTI1308623526);
                                  F.line = 51;
                                  grow_1174406069(look_1308622894.smL);
                                  F.line = 52;
                                  setLen_1174406038(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], (z_1308623273.subExp.nfa.s).length);
                                  F.line = 53;
                                  F.line = 53;
                                  switch (z_1308623273.kind) {
                                  case 41:
                                    Temporary30 = look_1308622894.ahead(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623273.subExp.nfa, look_1308622894, i_1308622900, flags2_1308623289);
                                    break;
                                  case 43:
                                    Temporary30 = !(look_1308622894.ahead(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623273.subExp.nfa, look_1308622894, i_1308622900, flags2_1308623289));
                                    break;
                                  case 42:
                                    Temporary30 = !((look_1308622894.behind(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623273.subExp.nfa, look_1308622894, i_1308622900, 0, flags2_1308623289) == -1));
                                    break;
                                  case 44:
                                    Temporary30 = (look_1308622894.behind(look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "a", look_1308622894.smL.s[chckIndx(subInt(look_1308622894.smL.i, 1), 0, (look_1308622894.smL.s).length - 1)], "b", capts_1308622890, capts_1308622890_Idx, captx_1308622902, 0, text_1308622892, z_1308623273.subExp.nfa, look_1308622894, i_1308622900, 0, flags2_1308623289) == -1);
                                    break;
                                  default: 
                                    if (true) {
                                    F.line = 71;
                                    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(71, 14) `false` "));
                                    }
                                    
                                    Temporary30 = false;
                                    break;
                                  }
                                  matched_1308622903 = Temporary30;
                                  F.line = 73;
                                  removeLast_1174406094(look_1308622894.smL);
                                  break;
                                default: 
                                  if (true) {
                                  F.line = 113;
                                  failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(113, 20) `false` "));
                                  }
                                  
                                  break;
                                }
                                F.line = 239;
                                i_436210403 = addInt(i_436210403, 1);
                                if (!(((colontmp__436210402).length == L_436210404))) {
                                F.line = 240;
                                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          } while (false);
                        } while (false);
                        if (matched_1308622903) {
                        F.line = 116;
                        add_1174405976(smB_1308622889, smB_1308622889_Idx, {Field0: nt_1308623260, Field1: captx_1308622902[0], Field2: HEX2EHEX2E_905970515(bounds_1308623249.a, subInt(i_1308622900, 1))});
                        }
                        
                      } while (false);
                      F.line = 172;
                      i_436210407 = addInt(i_436210407, 1);
                      if (!(((colontmp__436210406).length == L_436210408))) {
                      F.line = 173;
                      failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
              F.line = 93;
              res_436210413 = addInt(res_436210413, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    F.line = 151;
    var Temporary31 = smA_1308622888[smA_1308622888_Idx]; smA_1308622888[smA_1308622888_Idx] = smB_1308622889[smB_1308622889_Idx]; smB_1308622889[smB_1308622889_Idx] = Temporary31;    if ((0 < len_1174406007(smA_1308622888[smA_1308622888_Idx]))) {
    if ((flags_1308622896[6] != undefined)) {
    F.line = 154;
    captIdx_1308622891[captIdx_1308622891_Idx] = reverse_1174405297(capts_1308622890, capts_1308622890_Idx, HEX5BHEX5D_1174405963(smA_1308622888[smA_1308622888_Idx], 0).Field1, captIdx_1308622891[captIdx_1308622891_Idx]);
    }
    else {
      F.line = 156;
      captIdx_1308622891[captIdx_1308622891_Idx] = HEX5BHEX5D_1174405963(smA_1308622888[smA_1308622888_Idx], 0).Field1;
    }
    
    }
    
    F.line = 157;
    result_1308622897 = (0 < len_1174406007(smA_1308622888[smA_1308622888_Idx]));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1308622897;

}

function runeAt_905969759(s_905969760, i_905969761) {
  var result_905969762 = 0;

  var F = {procname: "unicode.runeAt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\unicode.nim", line: 0};
  framePtr = F;
    if ((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] <= 127)) {
    F.line = 81;
    result_905969762 = chckRange(s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] >>> 5) == 6)) {
    if ((i_905969761 <= subInt((s_905969760).length, 2))) {
    F.line = 86;
    result_905969762 = chckRange((((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] & 31) << 6) | (s_905969760[chckIndx(addInt(i_905969761, 1), 0, (s_905969760).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 90;
      result_905969762 = 65533;
    }
    
    }
    else {
    if (((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] >>> 4) == 14)) {
    if ((i_905969761 <= subInt((s_905969760).length, 3))) {
    F.line = 96;
    result_905969762 = chckRange(((((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] & 15) << 12) | ((s_905969760[chckIndx(addInt(i_905969761, 1), 0, (s_905969760).length - 1)] & 63) << 6)) | (s_905969760[chckIndx(addInt(i_905969761, 2), 0, (s_905969760).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 101;
      result_905969762 = 65533;
    }
    
    }
    else {
    if (((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] >>> 3) == 30)) {
    if ((i_905969761 <= subInt((s_905969760).length, 4))) {
    F.line = 108;
    result_905969762 = chckRange((((((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] & 7) << 18) | ((s_905969760[chckIndx(addInt(i_905969761, 1), 0, (s_905969760).length - 1)] & 63) << 12)) | ((s_905969760[chckIndx(addInt(i_905969761, 2), 0, (s_905969760).length - 1)] & 63) << 6)) | (s_905969760[chckIndx(addInt(i_905969761, 3), 0, (s_905969760).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 114;
      result_905969762 = 65533;
    }
    
    }
    else {
    if (((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] >>> 2) == 62)) {
    if ((i_905969761 <= subInt((s_905969760).length, 5))) {
    F.line = 122;
    result_905969762 = chckRange(((((((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] & 3) << 24) | ((s_905969760[chckIndx(addInt(i_905969761, 1), 0, (s_905969760).length - 1)] & 63) << 18)) | ((s_905969760[chckIndx(addInt(i_905969761, 2), 0, (s_905969760).length - 1)] & 63) << 12)) | ((s_905969760[chckIndx(addInt(i_905969761, 3), 0, (s_905969760).length - 1)] & 63) << 6)) | (s_905969760[chckIndx(addInt(i_905969761, 4), 0, (s_905969760).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 129;
      result_905969762 = 65533;
    }
    
    }
    else {
    if (((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] >>> 1) == 126)) {
    if ((i_905969761 <= subInt((s_905969760).length, 6))) {
    F.line = 138;
    result_905969762 = chckRange((((((((s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)] & 1) << 30) | ((s_905969760[chckIndx(addInt(i_905969761, 1), 0, (s_905969760).length - 1)] & 63) << 24)) | ((s_905969760[chckIndx(addInt(i_905969761, 2), 0, (s_905969760).length - 1)] & 63) << 18)) | ((s_905969760[chckIndx(addInt(i_905969761, 3), 0, (s_905969760).length - 1)] & 63) << 12)) | ((s_905969760[chckIndx(addInt(i_905969761, 4), 0, (s_905969760).length - 1)] & 63) << 6)) | (s_905969760[chckIndx(addInt(i_905969761, 5), 0, (s_905969760).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 146;
      result_905969762 = 65533;
    }
    
    }
    else {
      F.line = 149;
      result_905969762 = chckRange(s_905969760[chckIndx(i_905969761, 0, (s_905969760).length - 1)], -2147483648, 2147483647);
    }
    }}}}}
  framePtr = F.prev;

  return result_905969762;

}

function reversedMatchImpl_1308623334(smA_1308623335, smA_1308623335_Idx, smB_1308623336, smB_1308623336_Idx, capts_1308623337, capts_1308623337_Idx, captIdx_1308623338, captIdx_1308623338_Idx, text_1308623339, nfa_1308623340, look_1308623341, start_1308623342, limit_1308623343, flags_1308623344) {
                var Temporary5;
                                        var Temporary17;
                                        var Temporary18;
          var Temporary22;
                                  var Temporary34;
                                  var Temporary35;

  var result_1308623345 = 0;

  var F = {procname: "nfamatch.reversedMatchImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!((limit_1308623343 <= start_1308623342))) {
    F.line = 171;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(171, 12) `start >= limit` "));
    }
    
    F.line = 173;
    var c_1308623351 = -1;
    F.line = 174;
    var cPrev_1308623352 = -1;
    F.line = 175;
    var i_1308623353 = start_1308623342;
    F.line = 176;
    var iNext_1308623354 = start_1308623342;
    F.line = 177;
    var captx_1308623355 = [0];
    F.line = 178;
    var matched_1308623356 = false;
    F.line = 179;
    var anchored_1308623357 = true;
    if (contains_1107297731(HEX2EHEX2E_905970515(0, subInt((text_1308623339).length, 1)), start_1308623342)) {
    F.line = 181;
    cPrev_1308623352 = runeAt_905969759(text_1308623339, chckRange(start_1308623342, 0, 2147483647));
    }
    
    F.line = 182;
    clear_1174406010(smA_1308623335, smA_1308623335_Idx);
    F.line = 183;
    add_1174405976(smA_1308623335, smA_1308623335_Idx, {Field0: 0, Field1: captIdx_1308623338[captIdx_1308623338_Idx], Field2: HEX2EHEX2E_905970515(i_1308623353, subInt(i_1308623353, 1))});
    Label1: do {
      F.line = 184;
        Label2: while (true) {
        if (!(limit_1308623343 < iNext_1308623354)) break Label2;
          if (!((0 < iNext_1308623354))) {
          F.line = 51;
          failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim(51, 12) `iNext > 0` "));
          }
          
          if (!((iNext_1308623354 <= (text_1308623339).length))) {
          F.line = 52;
          failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim(52, 12) `iNext <= text.len` "));
          }
          
          F.line = 53;
          iNext_1308623354 = subInt(iNext_1308623354, 1);
          Label3: do {
            F.line = 54;
              Label4: while (true) {
                if (!(0 < iNext_1308623354)) Temporary5 = false; else {                  Temporary5 = ((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >> 6) == 2);                }              if (!Temporary5) break Label4;
                F.line = 55;
                iNext_1308623354 = subInt(iNext_1308623354, 1);
              }
          } while (false);
          if ((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] <= 127)) {
          F.line = 81;
          c_1308623351 = chckRange(text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)], -2147483648, 2147483647);
          }
          else {
          if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 5) == 6)) {
          if ((iNext_1308623354 <= subInt((text_1308623339).length, 2))) {
          F.line = 86;
          c_1308623351 = chckRange((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 31) << 6) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
          }
          else {
            F.line = 90;
            c_1308623351 = 65533;
          }
          
          }
          else {
          if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 4) == 14)) {
          if ((iNext_1308623354 <= subInt((text_1308623339).length, 3))) {
          F.line = 96;
          c_1308623351 = chckRange(((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 15) << 12) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
          }
          else {
            F.line = 101;
            c_1308623351 = 65533;
          }
          
          }
          else {
          if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 3) == 30)) {
          if ((iNext_1308623354 <= subInt((text_1308623339).length, 4))) {
          F.line = 108;
          c_1308623351 = chckRange((((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 7) << 18) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 12)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 3), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
          }
          else {
            F.line = 114;
            c_1308623351 = 65533;
          }
          
          }
          else {
          if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 2) == 62)) {
          if ((iNext_1308623354 <= subInt((text_1308623339).length, 5))) {
          F.line = 122;
          c_1308623351 = chckRange(((((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 3) << 24) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 18)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63) << 12)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 3), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 4), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
          }
          else {
            F.line = 129;
            c_1308623351 = 65533;
          }
          
          }
          else {
          if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 1) == 126)) {
          if ((iNext_1308623354 <= subInt((text_1308623339).length, 6))) {
          F.line = 138;
          c_1308623351 = chckRange((((((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 1) << 30) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 24)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63) << 18)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 3), 0, (text_1308623339).length - 1)] & 63) << 12)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 4), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 5), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
          }
          else {
            F.line = 146;
            c_1308623351 = 65533;
          }
          
          }
          else {
            F.line = 149;
            c_1308623351 = chckRange(text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)], -2147483648, 2147483647);
          }
          }}}}}
          F.line = 78;
          clear_1174406010(smB_1308623336, smB_1308623336_Idx);
          Label6: do {
            F.line = 79;
            var n_1308623602 = 0;
            F.line = 79;
            var capt_1308623603 = 0;
            F.line = 79;
            var bounds_1308623604 = ({a: 0, b: 0});
            Label7: do {
              F.line = 134;
              var i_436210440 = 0;
              F.line = 75;
              var colontmp__436210441 = 0;
              F.line = 134;
              colontmp__436210441 = subInt(len_1174406007(smA_1308623335[smA_1308623335_Idx]), 1);
              F.line = 90;
              var res_436210442 = 0;
              Label8: do {
                F.line = 91;
                  Label9: while (true) {
                  if (!(res_436210442 <= colontmp__436210441)) break Label9;
                    F.line = 134;
                    i_436210440 = res_436210442;
                    F.line = 79;
                    var colontmp__436210445 = nimCopy(null, smA_1308623335[smA_1308623335_Idx].sx[chckIndx(i_436210440, 0, (smA_1308623335[smA_1308623335_Idx].sx).length - 1)], NTI1174405631);
                    F.line = 79;
                    n_1308623602 = colontmp__436210445["Field0"];
                    F.line = 79;
                    capt_1308623603 = colontmp__436210445["Field1"];
                    F.line = 79;
                    bounds_1308623604 = nimCopy(bounds_1308623604, colontmp__436210445["Field2"], NTI704643133);
                    if ((anchored_1308623357 && (nfa_1308623340.s[chckIndx(n_1308623602, 0, (nfa_1308623340.s).length - 1)].kind == 46))) {
                    if (!(hasState_1174405972(smB_1308623336[smB_1308623336_Idx], n_1308623602))) {
                    F.line = 82;
                    add_1174405976(smB_1308623336, smB_1308623336_Idx, {Field0: n_1308623602, Field1: capt_1308623603, Field2: nimCopy(null, bounds_1308623604, NTI704643133)});
                    }
                    
                    F.line = 83;
                    break Label6;
                    }
                    
                    Label10: do {
                      F.line = 84;
                      var nti_1308623614 = 0;
                      F.line = 84;
                      var nt_1308623615 = 0;
                      F.line = 166;
                      var colontmp__436210435 = [];
                      F.line = 84;
                      colontmp__436210435 = nfa_1308623340.s[chckIndx(n_1308623602, 0, (nfa_1308623340.s).length - 1)].next;
                      F.line = 168;
                      var i_436210436 = 0;
                      F.line = 169;
                      var L_436210437 = (colontmp__436210435).length;
                      Label11: do {
                        F.line = 170;
                          Label12: while (true) {
                          if (!(i_436210436 < L_436210437)) break Label12;
                            F.line = 84;
                            nti_1308623614 = i_436210436;
                            F.line = 84;
                            nt_1308623615 = colontmp__436210435[chckIndx(i_436210436, 0, (colontmp__436210435).length - 1)];
                            Label13: do {
                              if (hasState_1174405972(smB_1308623336[smB_1308623336_Idx], nt_1308623615)) {
                              F.line = 86;
                              break Label13;
                              }
                              
                              if (!(match_1207959683(nfa_1308623340.s[chckIndx(nt_1308623615, 0, (nfa_1308623340.s).length - 1)], c_1308623351))) {
                              if (!((anchored_1308623357 && (nfa_1308623340.s[chckIndx(nt_1308623615, 0, (nfa_1308623340.s).length - 1)].kind == 46)))) {
                              F.line = 89;
                              break Label13;
                              }
                              
                              }
                              
                              if ((nfa_1308623340.t.allZ[chckIndx(n_1308623602, 0, (nfa_1308623340.t.allZ).length - 1)][chckIndx(nti_1308623614, 0, (nfa_1308623340.t.allZ[chckIndx(n_1308623602, 0, (nfa_1308623340.t.allZ).length - 1)]).length - 1)] == -1)) {
                              F.line = 91;
                              add_1174405976(smB_1308623336, smB_1308623336_Idx, {Field0: nt_1308623615, Field1: capt_1308623603, Field2: HEX2EHEX2E_905970515(i_1308623353, bounds_1308623604.b)});
                              F.line = 92;
                              break Label13;
                              }
                              
                              F.line = 93;
                              matched_1308623356 = true;
                              F.line = 94;
                              captx_1308623355[0] = capt_1308623603;
                              Label14: do {
                                F.line = 95;
                                var z_1308623628 = ({kind: 0, cp: 0, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: ({data: [], counter: 0}), ranges: [], shorthands: [], cc: 0, subExp: ({nfa: ({s: [], t: ({allZ: [], z: []})}), rpn: ({s: []}), reverseCapts: false})});
                                F.line = 233;
                                var colontmp__436210431 = [];
                                F.line = 95;
                                colontmp__436210431 = nfa_1308623340.t.z[chckIndx(nfa_1308623340.t.allZ[chckIndx(n_1308623602, 0, (nfa_1308623340.t.allZ).length - 1)][chckIndx(nti_1308623614, 0, (nfa_1308623340.t.allZ[chckIndx(n_1308623602, 0, (nfa_1308623340.t.allZ).length - 1)]).length - 1)], 0, (nfa_1308623340.t.z).length - 1)];
                                F.line = 235;
                                var i_436210432 = 0;
                                F.line = 236;
                                var L_436210433 = (colontmp__436210431).length;
                                Label15: do {
                                  F.line = 237;
                                    Label16: while (true) {
                                    if (!(i_436210432 < L_436210433)) break Label16;
                                      F.line = 95;
                                      z_1308623628 = colontmp__436210431[chckIndx(i_436210432, 0, (colontmp__436210431).length - 1)];
                                      if (!(matched_1308623356)) {
                                      F.line = 97;
                                      break Label14;
                                      }
                                      
                                      F.line = 95;
                                      switch (z_1308623628.kind) {
                                      case 3:
                                      case 4:
                                        F.line = 100;
                                        capts_1308623337[capts_1308623337_Idx].push({parent: captx_1308623355[0], bound: i_1308623353, idx: z_1308623628.idx});;
                                        F.line = 104;
                                        captx_1308623355[0] = ((subInt((capts_1308623337[capts_1308623337_Idx]).length, 1)) | 0);
                                        break;
                                      case 11:
                                      case 12:
                                      case 13:
                                      case 14:
                                      case 15:
                                      case 16:
                                      case 17:
                                      case 18:
                                      case 29:
                                      case 30:
                                        F.line = 107;
                                        matched_1308623356 = match_1207959601(z_1308623628, c_1308623351, cPrev_1308623352);
                                        break;
                                      case 41:
                                      case 42:
                                      case 43:
                                      case 44:
                                        F.line = 47;
                                        if (z_1308623628.subExp.reverseCapts) {
                                        Temporary17 = ConstSet51;
                                        }
                                        else {
                                        Temporary17 = ConstSet52;
                                        }
                                        
                                        var flags2_1308623644 = nimCopy(null, Temporary17, NTI1308624129);
                                        F.line = 51;
                                        grow_1174406069(look_1308623341.smL);
                                        F.line = 52;
                                        setLen_1174406038(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], (z_1308623628.subExp.nfa.s).length);
                                        F.line = 53;
                                        F.line = 53;
                                        switch (z_1308623628.kind) {
                                        case 41:
                                          Temporary18 = look_1308623341.ahead(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623628.subExp.nfa, look_1308623341, i_1308623353, flags2_1308623644);
                                          break;
                                        case 43:
                                          Temporary18 = !(look_1308623341.ahead(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623628.subExp.nfa, look_1308623341, i_1308623353, flags2_1308623644));
                                          break;
                                        case 42:
                                          Temporary18 = !((look_1308623341.behind(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623628.subExp.nfa, look_1308623341, i_1308623353, 0, flags2_1308623644) == -1));
                                          break;
                                        case 44:
                                          Temporary18 = (look_1308623341.behind(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623628.subExp.nfa, look_1308623341, i_1308623353, 0, flags2_1308623644) == -1);
                                          break;
                                        default: 
                                          if (true) {
                                          F.line = 71;
                                          failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(71, 14) `false` "));
                                          }
                                          
                                          Temporary18 = false;
                                          break;
                                        }
                                        matched_1308623356 = Temporary18;
                                        F.line = 73;
                                        removeLast_1174406094(look_1308623341.smL);
                                        break;
                                      default: 
                                        if (true) {
                                        F.line = 113;
                                        failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(113, 20) `false` "));
                                        }
                                        
                                        break;
                                      }
                                      F.line = 239;
                                      i_436210432 = addInt(i_436210432, 1);
                                      if (!(((colontmp__436210431).length == L_436210433))) {
                                      F.line = 240;
                                      failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                      }
                                      
                                    }
                                } while (false);
                              } while (false);
                              if (matched_1308623356) {
                              F.line = 116;
                              add_1174405976(smB_1308623336, smB_1308623336_Idx, {Field0: nt_1308623615, Field1: captx_1308623355[0], Field2: HEX2EHEX2E_905970515(i_1308623353, bounds_1308623604.b)});
                              }
                              
                            } while (false);
                            F.line = 172;
                            i_436210436 = addInt(i_436210436, 1);
                            if (!(((colontmp__436210435).length == L_436210437))) {
                            F.line = 173;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    F.line = 93;
                    res_436210442 = addInt(res_436210442, 1);
                  }
              } while (false);
            } while (false);
          } while (false);
          F.line = 186;
          var Temporary19 = smA_1308623335[smA_1308623335_Idx]; smA_1308623335[smA_1308623335_Idx] = smB_1308623336[smB_1308623336_Idx]; smB_1308623336[smB_1308623336_Idx] = Temporary19;          if ((len_1174406007(smA_1308623335[smA_1308623335_Idx]) == 0)) {
          F.line = 188;
          result_1308623345 = -1;
          break BeforeRet;
          }
          
          if ((nfa_1308623340.s[chckIndx(HEX5BHEX5D_1174405963(smA_1308623335[smA_1308623335_Idx], 0).Field0, 0, (nfa_1308623340.s).length - 1)].kind == 46)) {
          F.line = 190;
          break Label1;
          }
          
          F.line = 191;
          i_1308623353 = iNext_1308623354;
          F.line = 192;
          cPrev_1308623352 = c_1308623351;
        }
    } while (false);
    F.line = 193;
    c_1308623351 = -1;
    if ((0 < iNext_1308623354)) {
    if (!((0 < iNext_1308623354))) {
    F.line = 51;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim(51, 12) `iNext > 0` "));
    }
    
    if (!((iNext_1308623354 <= (text_1308623339).length))) {
    F.line = 52;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\common.nim(52, 12) `iNext <= text.len` "));
    }
    
    F.line = 53;
    iNext_1308623354 = subInt(iNext_1308623354, 1);
    Label20: do {
      F.line = 54;
        Label21: while (true) {
          if (!(0 < iNext_1308623354)) Temporary22 = false; else {            Temporary22 = ((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >> 6) == 2);          }        if (!Temporary22) break Label21;
          F.line = 55;
          iNext_1308623354 = subInt(iNext_1308623354, 1);
        }
    } while (false);
    if ((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] <= 127)) {
    F.line = 81;
    c_1308623351 = chckRange(text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 5) == 6)) {
    if ((iNext_1308623354 <= subInt((text_1308623339).length, 2))) {
    F.line = 86;
    c_1308623351 = chckRange((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 31) << 6) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 90;
      c_1308623351 = 65533;
    }
    
    }
    else {
    if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 4) == 14)) {
    if ((iNext_1308623354 <= subInt((text_1308623339).length, 3))) {
    F.line = 96;
    c_1308623351 = chckRange(((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 15) << 12) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 101;
      c_1308623351 = 65533;
    }
    
    }
    else {
    if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 3) == 30)) {
    if ((iNext_1308623354 <= subInt((text_1308623339).length, 4))) {
    F.line = 108;
    c_1308623351 = chckRange((((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 7) << 18) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 12)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 3), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 114;
      c_1308623351 = 65533;
    }
    
    }
    else {
    if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 2) == 62)) {
    if ((iNext_1308623354 <= subInt((text_1308623339).length, 5))) {
    F.line = 122;
    c_1308623351 = chckRange(((((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 3) << 24) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 18)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63) << 12)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 3), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 4), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 129;
      c_1308623351 = 65533;
    }
    
    }
    else {
    if (((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] >>> 1) == 126)) {
    if ((iNext_1308623354 <= subInt((text_1308623339).length, 6))) {
    F.line = 138;
    c_1308623351 = chckRange((((((((text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)] & 1) << 30) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 1), 0, (text_1308623339).length - 1)] & 63) << 24)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 2), 0, (text_1308623339).length - 1)] & 63) << 18)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 3), 0, (text_1308623339).length - 1)] & 63) << 12)) | ((text_1308623339[chckIndx(addInt(iNext_1308623354, 4), 0, (text_1308623339).length - 1)] & 63) << 6)) | (text_1308623339[chckIndx(addInt(iNext_1308623354, 5), 0, (text_1308623339).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      F.line = 146;
      c_1308623351 = 65533;
    }
    
    }
    else {
      F.line = 149;
      c_1308623351 = chckRange(text_1308623339[chckIndx(iNext_1308623354, 0, (text_1308623339).length - 1)], -2147483648, 2147483647);
    }
    }}}}}
    }
    
    F.line = 78;
    clear_1174406010(smB_1308623336, smB_1308623336_Idx);
    Label23: do {
      F.line = 79;
      var n_1308623857 = 0;
      F.line = 79;
      var capt_1308623858 = 0;
      F.line = 79;
      var bounds_1308623859 = ({a: 0, b: 0});
      Label24: do {
        F.line = 134;
        var i_436210460 = 0;
        F.line = 75;
        var colontmp__436210461 = 0;
        F.line = 134;
        colontmp__436210461 = subInt(len_1174406007(smA_1308623335[smA_1308623335_Idx]), 1);
        F.line = 90;
        var res_436210462 = 0;
        Label25: do {
          F.line = 91;
            Label26: while (true) {
            if (!(res_436210462 <= colontmp__436210461)) break Label26;
              F.line = 134;
              i_436210460 = res_436210462;
              F.line = 79;
              var colontmp__436210465 = nimCopy(null, smA_1308623335[smA_1308623335_Idx].sx[chckIndx(i_436210460, 0, (smA_1308623335[smA_1308623335_Idx].sx).length - 1)], NTI1174405631);
              F.line = 79;
              n_1308623857 = colontmp__436210465["Field0"];
              F.line = 79;
              capt_1308623858 = colontmp__436210465["Field1"];
              F.line = 79;
              bounds_1308623859 = nimCopy(bounds_1308623859, colontmp__436210465["Field2"], NTI704643133);
              if ((anchored_1308623357 && (nfa_1308623340.s[chckIndx(n_1308623857, 0, (nfa_1308623340.s).length - 1)].kind == 46))) {
              if (!(hasState_1174405972(smB_1308623336[smB_1308623336_Idx], n_1308623857))) {
              F.line = 82;
              add_1174405976(smB_1308623336, smB_1308623336_Idx, {Field0: n_1308623857, Field1: capt_1308623858, Field2: nimCopy(null, bounds_1308623859, NTI704643133)});
              }
              
              F.line = 83;
              break Label23;
              }
              
              Label27: do {
                F.line = 84;
                var nti_1308623869 = 0;
                F.line = 84;
                var nt_1308623870 = 0;
                F.line = 166;
                var colontmp__436210455 = [];
                F.line = 84;
                colontmp__436210455 = nfa_1308623340.s[chckIndx(n_1308623857, 0, (nfa_1308623340.s).length - 1)].next;
                F.line = 168;
                var i_436210456 = 0;
                F.line = 169;
                var L_436210457 = (colontmp__436210455).length;
                Label28: do {
                  F.line = 170;
                    Label29: while (true) {
                    if (!(i_436210456 < L_436210457)) break Label29;
                      F.line = 84;
                      nti_1308623869 = i_436210456;
                      F.line = 84;
                      nt_1308623870 = colontmp__436210455[chckIndx(i_436210456, 0, (colontmp__436210455).length - 1)];
                      Label30: do {
                        if (hasState_1174405972(smB_1308623336[smB_1308623336_Idx], nt_1308623870)) {
                        F.line = 86;
                        break Label30;
                        }
                        
                        if (!(match_1207959683(nfa_1308623340.s[chckIndx(nt_1308623870, 0, (nfa_1308623340.s).length - 1)], c_1308623351))) {
                        if (!((anchored_1308623357 && (nfa_1308623340.s[chckIndx(nt_1308623870, 0, (nfa_1308623340.s).length - 1)].kind == 46)))) {
                        F.line = 89;
                        break Label30;
                        }
                        
                        }
                        
                        if ((nfa_1308623340.t.allZ[chckIndx(n_1308623857, 0, (nfa_1308623340.t.allZ).length - 1)][chckIndx(nti_1308623869, 0, (nfa_1308623340.t.allZ[chckIndx(n_1308623857, 0, (nfa_1308623340.t.allZ).length - 1)]).length - 1)] == -1)) {
                        F.line = 91;
                        add_1174405976(smB_1308623336, smB_1308623336_Idx, {Field0: nt_1308623870, Field1: capt_1308623858, Field2: HEX2EHEX2E_905970515(i_1308623353, bounds_1308623859.b)});
                        F.line = 92;
                        break Label30;
                        }
                        
                        F.line = 93;
                        matched_1308623356 = true;
                        F.line = 94;
                        captx_1308623355[0] = capt_1308623858;
                        Label31: do {
                          F.line = 95;
                          var z_1308623883 = ({kind: 0, cp: 0, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: ({data: [], counter: 0}), ranges: [], shorthands: [], cc: 0, subExp: ({nfa: ({s: [], t: ({allZ: [], z: []})}), rpn: ({s: []}), reverseCapts: false})});
                          F.line = 233;
                          var colontmp__436210451 = [];
                          F.line = 95;
                          colontmp__436210451 = nfa_1308623340.t.z[chckIndx(nfa_1308623340.t.allZ[chckIndx(n_1308623857, 0, (nfa_1308623340.t.allZ).length - 1)][chckIndx(nti_1308623869, 0, (nfa_1308623340.t.allZ[chckIndx(n_1308623857, 0, (nfa_1308623340.t.allZ).length - 1)]).length - 1)], 0, (nfa_1308623340.t.z).length - 1)];
                          F.line = 235;
                          var i_436210452 = 0;
                          F.line = 236;
                          var L_436210453 = (colontmp__436210451).length;
                          Label32: do {
                            F.line = 237;
                              Label33: while (true) {
                              if (!(i_436210452 < L_436210453)) break Label33;
                                F.line = 95;
                                z_1308623883 = colontmp__436210451[chckIndx(i_436210452, 0, (colontmp__436210451).length - 1)];
                                if (!(matched_1308623356)) {
                                F.line = 97;
                                break Label31;
                                }
                                
                                F.line = 95;
                                switch (z_1308623883.kind) {
                                case 3:
                                case 4:
                                  F.line = 100;
                                  capts_1308623337[capts_1308623337_Idx].push({parent: captx_1308623355[0], bound: i_1308623353, idx: z_1308623883.idx});;
                                  F.line = 104;
                                  captx_1308623355[0] = ((subInt((capts_1308623337[capts_1308623337_Idx]).length, 1)) | 0);
                                  break;
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                case 29:
                                case 30:
                                  F.line = 107;
                                  matched_1308623356 = match_1207959601(z_1308623883, c_1308623351, cPrev_1308623352);
                                  break;
                                case 41:
                                case 42:
                                case 43:
                                case 44:
                                  F.line = 47;
                                  if (z_1308623883.subExp.reverseCapts) {
                                  Temporary34 = ConstSet53;
                                  }
                                  else {
                                  Temporary34 = ConstSet54;
                                  }
                                  
                                  var flags2_1308623899 = nimCopy(null, Temporary34, NTI1308624678);
                                  F.line = 51;
                                  grow_1174406069(look_1308623341.smL);
                                  F.line = 52;
                                  setLen_1174406038(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], (z_1308623883.subExp.nfa.s).length);
                                  F.line = 53;
                                  F.line = 53;
                                  switch (z_1308623883.kind) {
                                  case 41:
                                    Temporary35 = look_1308623341.ahead(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623883.subExp.nfa, look_1308623341, i_1308623353, flags2_1308623899);
                                    break;
                                  case 43:
                                    Temporary35 = !(look_1308623341.ahead(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623883.subExp.nfa, look_1308623341, i_1308623353, flags2_1308623899));
                                    break;
                                  case 42:
                                    Temporary35 = !((look_1308623341.behind(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623883.subExp.nfa, look_1308623341, i_1308623353, 0, flags2_1308623899) == -1));
                                    break;
                                  case 44:
                                    Temporary35 = (look_1308623341.behind(look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "a", look_1308623341.smL.s[chckIndx(subInt(look_1308623341.smL.i, 1), 0, (look_1308623341.smL.s).length - 1)], "b", capts_1308623337, capts_1308623337_Idx, captx_1308623355, 0, text_1308623339, z_1308623883.subExp.nfa, look_1308623341, i_1308623353, 0, flags2_1308623899) == -1);
                                    break;
                                  default: 
                                    if (true) {
                                    F.line = 71;
                                    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(71, 14) `false` "));
                                    }
                                    
                                    Temporary35 = false;
                                    break;
                                  }
                                  matched_1308623356 = Temporary35;
                                  F.line = 73;
                                  removeLast_1174406094(look_1308623341.smL);
                                  break;
                                default: 
                                  if (true) {
                                  F.line = 113;
                                  failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(113, 20) `false` "));
                                  }
                                  
                                  break;
                                }
                                F.line = 239;
                                i_436210452 = addInt(i_436210452, 1);
                                if (!(((colontmp__436210451).length == L_436210453))) {
                                F.line = 240;
                                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          } while (false);
                        } while (false);
                        if (matched_1308623356) {
                        F.line = 116;
                        add_1174405976(smB_1308623336, smB_1308623336_Idx, {Field0: nt_1308623870, Field1: captx_1308623355[0], Field2: HEX2EHEX2E_905970515(i_1308623353, bounds_1308623859.b)});
                        }
                        
                      } while (false);
                      F.line = 172;
                      i_436210456 = addInt(i_436210456, 1);
                      if (!(((colontmp__436210455).length == L_436210457))) {
                      F.line = 173;
                      failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
              F.line = 93;
              res_436210462 = addInt(res_436210462, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    F.line = 196;
    var Temporary36 = smA_1308623335[smA_1308623335_Idx]; smA_1308623335[smA_1308623335_Idx] = smB_1308623336[smB_1308623336_Idx]; smB_1308623336[smB_1308623336_Idx] = Temporary36;    Label37: do {
      F.line = 197;
      var n_1308623922 = 0;
      F.line = 197;
      var capt_1308623923 = 0;
      F.line = 197;
      var bounds_1308623924 = ({a: 0, b: 0});
      Label38: do {
        F.line = 134;
        var i_436210468 = 0;
        F.line = 75;
        var colontmp__436210469 = 0;
        F.line = 134;
        colontmp__436210469 = subInt(len_1174406007(smA_1308623335[smA_1308623335_Idx]), 1);
        F.line = 90;
        var res_436210470 = 0;
        Label39: do {
          F.line = 91;
            Label40: while (true) {
            if (!(res_436210470 <= colontmp__436210469)) break Label40;
              F.line = 134;
              i_436210468 = res_436210470;
              F.line = 197;
              var colontmp__436210473 = nimCopy(null, smA_1308623335[smA_1308623335_Idx].sx[chckIndx(i_436210468, 0, (smA_1308623335[smA_1308623335_Idx].sx).length - 1)], NTI1174405631);
              F.line = 197;
              n_1308623922 = colontmp__436210473["Field0"];
              F.line = 197;
              capt_1308623923 = colontmp__436210473["Field1"];
              F.line = 197;
              bounds_1308623924 = nimCopy(bounds_1308623924, colontmp__436210473["Field2"], NTI704643133);
              if ((nfa_1308623340.s[chckIndx(n_1308623922, 0, (nfa_1308623340.s).length - 1)].kind == 46)) {
              if ((flags_1308623344[6] != undefined)) {
              F.line = 200;
              captIdx_1308623338[captIdx_1308623338_Idx] = reverse_1174405297(capts_1308623337, capts_1308623337_Idx, capt_1308623923, captIdx_1308623338[captIdx_1308623338_Idx]);
              }
              else {
                F.line = 202;
                captIdx_1308623338[captIdx_1308623338_Idx] = capt_1308623923;
              }
              
              F.line = 203;
              result_1308623345 = bounds_1308623924.a;
              break BeforeRet;
              }
              
              F.line = 93;
              res_436210470 = addInt(res_436210470, 1);
            }
        } while (false);
      } while (false);
    } while (false);
    F.line = 204;
    result_1308623345 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1308623345;

}

function HEX5BHEX5D_1174405176(s_1174405178, i_1174405179) {
  var result_1174405180 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 2649;
    result_1174405180 = s_1174405178[chckIndx(subInt((s_1174405178).length, i_1174405179), 0, (s_1174405178).length - 1)];
  framePtr = F.prev;

  return result_1174405180;

}

function reverse_1174405242(a_1174405244, first_1174405245, last_1174405246) {
  var F = {procname: "reverse.reverse", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
    F.line = 112;
    var x_1174405247 = first_1174405245;
    F.line = 113;
    var y_1174405248 = last_1174405246;
    Label1: do {
      F.line = 114;
        Label2: while (true) {
        if (!(x_1174405247 < y_1174405248)) break Label2;
          F.line = 115;
          var Temporary3 = a_1174405244[chckIndx(x_1174405247, 0, (a_1174405244).length - 1)]; a_1174405244[chckIndx(x_1174405247, 0, (a_1174405244).length - 1)] = a_1174405244[chckIndx(y_1174405248, 0, (a_1174405244).length - 1)]; a_1174405244[chckIndx(y_1174405248, 0, (a_1174405244).length - 1)] = Temporary3;          F.line = 116;
          y_1174405248 = subInt(y_1174405248, 1);
          F.line = 117;
          x_1174405247 = addInt(x_1174405247, 1);
        }
    } while (false);
  framePtr = F.prev;

  
}

function reverse_1174405236(a_1174405238) {
  var F = {procname: "reverse.reverse", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
    F.line = 132;
    reverse_1174405242(a_1174405238, 0, chckRange(nimMax(0, (a_1174405238).length - 1), 0, 2147483647));
  framePtr = F.prev;

  
}

function constructSubmatches_1174405135(captures_1174405136, captures_1174405136_Idx, capts_1174405137, capt_1174405138, size_1174405139) {
  var F = {procname: "nfatype.constructSubmatches", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 25;
    if (captures_1174405136[captures_1174405136_Idx].length < chckRange(size_1174405139, 0, 2147483647)) { for (var i = captures_1174405136[captures_1174405136_Idx].length ; i < chckRange(size_1174405139, 0, 2147483647) ; ++i) captures_1174405136[captures_1174405136_Idx].push([]); }
               else { captures_1174405136[captures_1174405136_Idx].length = chckRange(size_1174405139, 0, 2147483647); };
    Label1: do {
      F.line = 26;
      var i_1174405153 = 0;
      F.line = 75;
      var colontmp__436210475 = 0;
      F.line = 26;
      colontmp__436210475 = subInt((captures_1174405136[captures_1174405136_Idx]).length, 1);
      F.line = 90;
      var res_436210476 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436210476 <= colontmp__436210475)) break Label3;
            F.line = 26;
            i_1174405153 = res_436210476;
            F.line = 26;
            if (captures_1174405136[captures_1174405136_Idx][chckIndx(i_1174405153, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)].length < 0) { for (var i = captures_1174405136[captures_1174405136_Idx][chckIndx(i_1174405153, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)].length ; i < 0 ; ++i) captures_1174405136[captures_1174405136_Idx][chckIndx(i_1174405153, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)].push(({a: 0, b: 0})); }
               else { captures_1174405136[captures_1174405136_Idx][chckIndx(i_1174405153, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)].length = 0; };
            F.line = 93;
            res_436210476 = addInt(res_436210476, 1);
          }
      } while (false);
    } while (false);
    if (((capts_1174405137).length == 0)) {
    F.line = 29;
    break BeforeRet;
    }
    
    F.line = 30;
    var capt_1174405162 = capt_1174405138;
    Label4: do {
      F.line = 31;
        Label5: while (true) {
        if (!!((capt_1174405162 == -1))) break Label5;
          if (((captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)]).length == 0)) {
          F.line = 33;
          captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)].push(HEX2EHEX2E_905970515(-2, -2));;
          }
          
          if (!((HEX5BHEX5D_1174405176(captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)], 1).a == -2))) {
          F.line = 35;
          captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)].push(HEX2EHEX2E_905970515(-2, -2));;
          }
          
          if ((HEX5BHEX5D_1174405176(captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)], 1).b == -2)) {
          F.line = 37;
          HEX5BHEX5D_1174405176(captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)], 1).b = subInt(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].bound, 1);
          }
          else {
            F.line = 39;
            HEX5BHEX5D_1174405176(captures_1174405136[captures_1174405136_Idx][chckIndx(capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].idx, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1)], 1).a = capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].bound;
          }
          
          F.line = 40;
          capt_1174405162 = ((capts_1174405137[chckIndx(capt_1174405162, 0, (capts_1174405137).length - 1)].parent) | 0);
        }
    } while (false);
    Label6: do {
      F.line = 41;
      var c_1174405235 = null;
      var c_1174405235_Idx = 0;
      F.line = 244;
      var i_436210481 = 0;
      F.line = 245;
      var L_436210482 = (captures_1174405136[captures_1174405136_Idx]).length;
      Label7: do {
        F.line = 246;
          Label8: while (true) {
          if (!(i_436210481 < L_436210482)) break Label8;
            F.line = 41;
            c_1174405235 = captures_1174405136[captures_1174405136_Idx]; c_1174405235_Idx = chckIndx(i_436210481, 0, (captures_1174405136[captures_1174405136_Idx]).length - 1);
            F.line = 41;
            reverse_1174405236(c_1174405235[c_1174405235_Idx]);
            F.line = 248;
            i_436210481 = addInt(i_436210481, 1);
            if (!(((captures_1174405136[captures_1174405136_Idx]).length == L_436210482))) {
            F.line = 249;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(249, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  } while (false);
  framePtr = F.prev;

  
}

function matchImpl_1308623954(text_1308623955, regex_1308623956, m_1308623957, start_1308623958) {
  var result_1308623959 = false;

  var F = {procname: "nfamatch.matchImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
  framePtr = F;
    F.line = 229;
    clear_1174405337(m_1308623957);
    F.line = 231;
    var smA_1308623963 = [newSubmatches_1174405896((regex_1308623956.nfa.s).length)];
    F.line = 232;
    var smB_1308623967 = [newSubmatches_1174405896((regex_1308623956.nfa.s).length)];
    F.line = 233;
    var capts_1308623968 = [[]];
    F.line = 234;
    var capt_1308623969 = [-1];
    F.line = 235;
    var look_1308623970 = [{ahead: matchImpl_1308622887, behind: reversedMatchImpl_1308623334, smL: ({s: [], i: 0})}];
    F.line = 236;
    result_1308623959 = matchImpl_1308622887(smA_1308623963, 0, smB_1308623967, 0, capts_1308623968, 0, capt_1308623969, 0, text_1308623955, regex_1308623956.nfa, look_1308623970[0], start_1308623958, ConstSet55);
    if (result_1308623959) {
    F.line = 239;
    constructSubmatches_1174405135(m_1308623957, "captures", capts_1308623968[0], ((capt_1308623969[0]) | 0), ((regex_1308623956.groupsCount) | 0));
    if ((0 < len_1174405401(regex_1308623956.namedGroups))) {
    F.line = 242;
    m_1308623957.namedGroups = nimCopy(m_1308623957.namedGroups, regex_1308623956.namedGroups, NTI1157628042);
    }
    
    F.line = 243;
    m_1308623957.boundaries = nimCopy(m_1308623957.boundaries, HEX5BHEX5D_1174405963(smA_1308623963[0], 0).Field2, NTI704643133);
    }
    
  framePtr = F.prev;

  return result_1308623959;

}

function match_973079723(s_973079724, pattern_973079725) {
  var result_973079726 = false;

  var F = {procname: "regex.match", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
  framePtr = F;
    F.line = 515;
    var m_973079727 = [({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})})];
    F.line = 516;
    result_973079726 = matchImpl_1308623954(s_973079724, pattern_973079725, m_973079727[0], 0);
  framePtr = F.prev;

  return result_973079726;

}

function re_956304004() {
  var result_956304007 = ({nfa: ({s: [], t: ({allZ: [], z: []})}), groupsCount: 0, namedGroups: ({data: [], counter: 0, first: 0, last: 0}), litOpt: ({lit: 0, nfa: ({s: [], t: ({allZ: [], z: []})})})});

  var F = {procname: "re.re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
  framePtr = F;
    F.line = 292;
    result_956304007 = nimCopy(result_956304007, {nfa: {s: [{kind: 45, cp: 35, next: [1], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 0, cp: 95, next: [2], isGreedy: false, uid: 1, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 0, cp: 80, next: [3], isGreedy: false, uid: 2, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 20, cp: 100, next: [3, 4], isGreedy: false, uid: 3, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 0, cp: 95, next: [5], isGreedy: false, uid: 5, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 46, cp: 35, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}], t: {allZ: [[-1], [-1], [-1], [-1, -1], [-1], []], z: []}}, groupsCount: 0, namedGroups: {data: [{Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}], counter: 0, first: -1, last: -1}, litOpt: {lit: 80, nfa: {s: [{kind: 45, cp: 35, next: [1], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 0, cp: 95, next: [2], isGreedy: true, uid: 1, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 46, cp: 35, next: [], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}], t: {allZ: [[-1], [-1], []], z: []}}}}, NTI1174405330);
  framePtr = F.prev;

  return result_956304007;

}

function rawGet_956302749(t_956302752, key_956302753, hc_956302754, hc_956302754_Idx) {
            var Temporary3;

  var result_956302755 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956302754[hc_956302754_Idx] = hash_637534657(key_956302753);
    if ((hc_956302754[hc_956302754_Idx] == 0)) {
    F.line = 66;
    hc_956302754[hc_956302754_Idx] = 314159265;
    }
    
    if (((t_956302752.data).length == 0)) {
    F.line = 48;
    result_956302755 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956302806 = (hc_956302754[hc_956302754_Idx] & (t_956302752.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956302752.data[chckIndx(h_956302806, 0, (t_956302752.data).length - 1)].Field0)) break Label2;
            if (!(t_956302752.data[chckIndx(h_956302806, 0, (t_956302752.data).length - 1)].Field0 == hc_956302754[hc_956302754_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956302752.data[chckIndx(h_956302806, 0, (t_956302752.data).length - 1)].Field1, key_956302753);            }          if (Temporary3) {
          F.line = 56;
          result_956302755 = h_956302806;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956302806 = nextTry_570425378(h_956302806, (t_956302752.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956302755 = subInt(-1, h_956302806);
  } while (false);
  framePtr = F.prev;

  return result_956302755;

}

function HEX5BHEX5D_956304061(t_956304064, key_956304065) {
  var result_956304066 = null;
  var result_956304066_Idx = 0;

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym22_956304067 = [0];
    F.line = 243;
    var indexHEX60gensym22_956304074 = rawGet_956302749(t_956304064, key_956304065, hcHEX60gensym22_956304067, 0);
    if ((0 <= indexHEX60gensym22_956304074)) {
    F.line = 244;
    result_956304066 = t_956304064.data[chckIndx(indexHEX60gensym22_956304074, 0, (t_956304064.data).length - 1)]; result_956304066_Idx = "Field2";
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_956304065);
    }
    
  framePtr = F.prev;

  return [result_956304066, result_956304066_Idx];

}

function map_956302580(s_956302583, op_956302585) {
  var result_956302586 = [];

  var F = {procname: "map.map", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 385;
    result_956302586 = new Array(chckRange((s_956302583).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_956302583).length, 0, 2147483647) ; ++i) { result_956302586[i] = []; }    Label1: do {
      F.line = 386;
      var i_956302602 = 0;
      F.line = 117;
      var colontmp__436210495 = 0;
      F.line = 386;
      colontmp__436210495 = (s_956302583).length;
      F.line = 119;
      var i_436210496 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210496 < colontmp__436210495)) break Label3;
            F.line = 386;
            i_956302602 = i_436210496;
            F.line = 386;
            result_956302586[chckIndx(i_956302602, 0, (result_956302586).length - 1)] = nimCopy(null, op_956302585(s_956302583[chckIndx(i_956302602, 0, (s_956302583).length - 1)]), NTI33554439);
            F.line = 122;
            i_436210496 = addInt(i_436210496, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956302586;

}

function canOpt_1191182950(litOpt_1191182951) {
  var result_1191182952 = false;

  var F = {procname: "litopt.canOpt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\litopt.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 230;
    result_1191182952 = (0 < (litOpt_1191182951.nfa.s).length);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1191182952;

}

function cap_1174406019(sm_1174406020) {
  var result_1174406021 = 0;

  var F = {procname: "nfatype.cap", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfatype.nim", line: 0};
  framePtr = F;
    F.line = 143;
    result_1174406021 = (sm_1174406020.ss).length;
  framePtr = F.prev;

  return result_1174406021;

}

function clear_1291845690(ms_1291845691) {
  var F = {procname: "nfafindall.clear", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
    F.line = 84;
    ms_1291845691.i = 0;
  framePtr = F.prev;

  
}

function clear_1291845701(ms_1291845702) {
  var F = {procname: "nfafindall.clear", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
    F.line = 108;
    clear_1174406010(ms_1291845702, "a");
    F.line = 109;
    clear_1174406010(ms_1291845702, "b");
    F.line = 110;
    clear_1291845690(ms_1291845702.m);
    F.line = 111;
    if (ms_1291845702.c.length < 0) { for (var i = ms_1291845702.c.length ; i < 0 ; ++i) ms_1291845702.c.push(({parent: 0, bound: 0, idx: 0})); }
               else { ms_1291845702.c.length = 0; };
  framePtr = F.prev;

  
}

function nsuFindChar(s_620758517, sub_620758518, start_620758519, last_620758520) {
    var Temporary1;

  var result_620758521 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1864;
    if ((last_620758520 == 0)) {
    Temporary1 = (s_620758517).length - 1;
    }
    else {
    Temporary1 = last_620758520;
    }
    
    var last_620758522 = Temporary1;
    Label2: do {
      F.line = 1876;
      var i_620758532 = 0;
      F.line = 75;
      var colontmp__436210528 = 0;
      F.line = 1876;
      colontmp__436210528 = start_620758519;
      F.line = 90;
      var res_436210529 = colontmp__436210528;
      Label3: do {
        F.line = 91;
          Label4: while (true) {
          if (!(res_436210529 <= last_620758522)) break Label4;
            F.line = 1876;
            i_620758532 = res_436210529;
            if ((sub_620758518 == s_620758517[chckIndx(i_620758532, 0, (s_620758517).length - 1)])) {
            F.line = 1877;
            result_620758521 = i_620758532;
            break BeforeRet;
            }
            
            F.line = 93;
            res_436210529 = addInt(res_436210529, 1);
          }
      } while (false);
    } while (false);
    F.line = 1878;
    result_620758521 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620758521;

}

function reversedMatchImpl_1308623933(smA_1308623934, smA_1308623934_Idx, smB_1308623935, smB_1308623935_Idx, text_1308623936, nfa_1308623937, look_1308623938, start_1308623939, limit_1308623940) {
  var result_1308623941 = 0;

  var F = {procname: "nfamatch.reversedMatchImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim", line: 0};
  framePtr = F;
    F.line = 213;
    F.line = 213;
    var capts_1308623942 = [[]];
    F.line = 214;
    var captIdx_1308623943 = [-1];
    result_1308623941 = reversedMatchImpl_1308623334(smA_1308623934, smA_1308623934_Idx, smB_1308623935, smB_1308623935_Idx, capts_1308623942, 0, captIdx_1308623943, 0, text_1308623936, nfa_1308623937, look_1308623938, start_1308623939, limit_1308623940, ConstSet56);
  framePtr = F.prev;

  return result_1308623941;

}

function len_1291845656(ms_1291845657) {
  var result_1291845658 = 0;

  var F = {procname: "nfafindall.len", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
    F.line = 65;
    result_1291845658 = ms_1291845657.i;
  framePtr = F.prev;

  return result_1291845658;

}

function add_1291845659(ms_1291845660, m_1291845661) {
  var F = {procname: "nfafindall.add", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
    F.line = 71;
    var size_1291845662 = 0;
    Label1: do {
      F.line = 72;
      var i_1291845668 = 0;
      F.line = 6;
      var colontmp__436210545 = 0;
      F.line = 72;
      colontmp__436210545 = subInt(len_1291845656(ms_1291845660), 1);
      F.line = 33;
      var res_436210546 = colontmp__436210545;
      Label2: do {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_436210546)) break Label3;
            F.line = 72;
            i_1291845668 = res_436210546;
            if ((nimMax(ms_1291845660.s[chckIndx(i_1291845668, 0, (ms_1291845660.s).length - 1)].Field1.b, ms_1291845660.s[chckIndx(i_1291845668, 0, (ms_1291845660.s).length - 1)].Field1.a) < m_1291845661.Field1.a)) {
            F.line = 74;
            size_1291845662 = addInt(i_1291845668, 1);
            F.line = 75;
            break Label1;
            }
            
            F.line = 36;
            res_436210546 = subInt(res_436210546, 1);
          }
      } while (false);
    } while (false);
    F.line = 76;
    ms_1291845660.i = size_1291845662;
    if ((ms_1291845660.i <= subInt((ms_1291845660.s).length, 1))) {
    F.line = 78;
    ms_1291845660.s[chckIndx(ms_1291845660.i, 0, (ms_1291845660.s).length - 1)] = nimCopy(ms_1291845660.s[chckIndx(ms_1291845660.i, 0, (ms_1291845660.s).length - 1)], m_1291845661, NTI1291845636);
    }
    else {
      F.line = 80;
      var Temporary4 = nimCopy(null, m_1291845661, NTI1291845636);
    ms_1291845660.s.push(Temporary4);;
    }
    
    F.line = 81;
    ms_1291845660.i = addInt(ms_1291845660.i, 1);
  framePtr = F.prev;

  
}

function submatch_1291845872(ms_1291845873, text_1291845874, regex_1291845875, i_1291845876, cPrev_1291845877, c_1291845878) {
                      var Temporary7;
                      var Temporary8;
                      var Temporary10;
                              var Temporary13;
                              var Temporary14;

  var F = {procname: "nfafindall.submatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
    F.line = 158;
    clear_1174406010(ms_1291845873, "b");
    F.line = 159;
    var captx_1291845888 = [0];
    F.line = 160;
    var matched_1291845889 = true;
    F.line = 161;
    var eoeFound_1291845890 = false;
    F.line = 162;
    var smi_1291845891 = 0;
    Label1: do {
      F.line = 163;
        Label2: while (true) {
        if (!(smi_1291845891 < len_1174406007(ms_1291845873.a))) break Label2;
          Label3: do {
            F.line = 164;
            var nti_1291845897 = 0;
            F.line = 164;
            var nt_1291845898 = 0;
            F.line = 166;
            var colontmp__436210540 = [];
            F.line = 164;
            colontmp__436210540 = regex_1291845875.nfa.s[chckIndx(HEX5BHEX5D_1174405963(ms_1291845873.a, smi_1291845891).Field0, 0, (regex_1291845875.nfa.s).length - 1)].next;
            F.line = 168;
            var i_436210541 = 0;
            F.line = 169;
            var L_436210542 = (colontmp__436210540).length;
            Label4: do {
              F.line = 170;
                Label5: while (true) {
                if (!(i_436210541 < L_436210542)) break Label5;
                  F.line = 164;
                  nti_1291845897 = i_436210541;
                  F.line = 164;
                  nt_1291845898 = colontmp__436210540[chckIndx(i_436210541, 0, (colontmp__436210540).length - 1)];
                  Label6: do {
                    if (hasState_1174405972(ms_1291845873.b, nt_1291845898)) {
                    F.line = 166;
                    break Label6;
                    }
                    
                      if (!!((regex_1291845875.nfa.s[chckIndx(nt_1291845898, 0, (regex_1291845875.nfa.s).length - 1)].kind == 46))) Temporary7 = false; else {                        Temporary7 = !(match_1207959683(regex_1291845875.nfa.s[chckIndx(nt_1291845898, 0, (regex_1291845875.nfa.s).length - 1)], c_1291845878));                      }                    if (Temporary7) {
                    F.line = 168;
                    break Label6;
                    }
                    
                    F.line = 169;
                    matched_1291845889 = true;
                    F.line = 170;
                    captx_1291845888[0] = HEX5BHEX5D_1174405963(ms_1291845873.a, smi_1291845891).Field1;
                    if ((-1 < (Temporary8 = regex_1291845875.nfa.t.allZ[chckIndx(HEX5BHEX5D_1174405963(ms_1291845873.a, smi_1291845891).Field0, 0, (regex_1291845875.nfa.t.allZ).length - 1)], Temporary8)[chckIndx(nti_1291845897, 0, (Temporary8).length - 1)])) {
                    Label9: do {
                      F.line = 172;
                      var z_1291845906 = ({kind: 0, cp: 0, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: ({data: [], counter: 0}), ranges: [], shorthands: [], cc: 0, subExp: ({nfa: ({s: [], t: ({allZ: [], z: []})}), rpn: ({s: []}), reverseCapts: false})});
                      F.line = 233;
                      var colontmp__436210536 = [];
                      F.line = 172;
                      colontmp__436210536 = regex_1291845875.nfa.t.z[chckIndx((Temporary10 = regex_1291845875.nfa.t.allZ[chckIndx(HEX5BHEX5D_1174405963(ms_1291845873.a, smi_1291845891).Field0, 0, (regex_1291845875.nfa.t.allZ).length - 1)], Temporary10)[chckIndx(nti_1291845897, 0, (Temporary10).length - 1)], 0, (regex_1291845875.nfa.t.z).length - 1)];
                      F.line = 235;
                      var i_436210537 = 0;
                      F.line = 236;
                      var L_436210538 = (colontmp__436210536).length;
                      Label11: do {
                        F.line = 237;
                          Label12: while (true) {
                          if (!(i_436210537 < L_436210538)) break Label12;
                            F.line = 172;
                            z_1291845906 = colontmp__436210536[chckIndx(i_436210537, 0, (colontmp__436210536).length - 1)];
                            if (!(matched_1291845889)) {
                            F.line = 174;
                            break Label9;
                            }
                            
                            F.line = 172;
                            switch (z_1291845906.kind) {
                            case 3:
                            case 4:
                              F.line = 177;
                              ms_1291845873.c.push({parent: captx_1291845888[0], bound: i_1291845876, idx: z_1291845906.idx});;
                              F.line = 181;
                              captx_1291845888[0] = ((subInt((ms_1291845873.c).length, 1)) | 0);
                              break;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                            case 16:
                            case 17:
                            case 18:
                            case 29:
                            case 30:
                              F.line = 183;
                              matched_1291845889 = match_1207959601(z_1291845906, cPrev_1291845877, c_1291845878);
                              break;
                            case 41:
                            case 42:
                            case 43:
                            case 44:
                              F.line = 47;
                              if (z_1291845906.subExp.reverseCapts) {
                              Temporary13 = ConstSet57;
                              }
                              else {
                              Temporary13 = ConstSet58;
                              }
                              
                              var flags2_1291845922 = nimCopy(null, Temporary13, NTI1291845818);
                              F.line = 51;
                              grow_1174406069(ms_1291845873.look.smL);
                              F.line = 52;
                              setLen_1174406038(ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], (z_1291845906.subExp.nfa.s).length);
                              F.line = 53;
                              F.line = 53;
                              switch (z_1291845906.kind) {
                              case 41:
                                Temporary14 = ms_1291845873.look.ahead(ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "a", ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "b", ms_1291845873, "c", captx_1291845888, 0, text_1291845874, z_1291845906.subExp.nfa, ms_1291845873.look, i_1291845876, flags2_1291845922);
                                break;
                              case 43:
                                Temporary14 = !(ms_1291845873.look.ahead(ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "a", ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "b", ms_1291845873, "c", captx_1291845888, 0, text_1291845874, z_1291845906.subExp.nfa, ms_1291845873.look, i_1291845876, flags2_1291845922));
                                break;
                              case 42:
                                Temporary14 = !((ms_1291845873.look.behind(ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "a", ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "b", ms_1291845873, "c", captx_1291845888, 0, text_1291845874, z_1291845906.subExp.nfa, ms_1291845873.look, i_1291845876, 0, flags2_1291845922) == -1));
                                break;
                              case 44:
                                Temporary14 = (ms_1291845873.look.behind(ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "a", ms_1291845873.look.smL.s[chckIndx(subInt(ms_1291845873.look.smL.i, 1), 0, (ms_1291845873.look.smL.s).length - 1)], "b", ms_1291845873, "c", captx_1291845888, 0, text_1291845874, z_1291845906.subExp.nfa, ms_1291845873.look, i_1291845876, 0, flags2_1291845922) == -1);
                                break;
                              default: 
                                if (true) {
                                F.line = 71;
                                failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfamatch.nim(71, 14) `false` "));
                                }
                                
                                Temporary14 = false;
                                break;
                              }
                              matched_1291845889 = Temporary14;
                              F.line = 73;
                              removeLast_1174406094(ms_1291845873.look.smL);
                              break;
                            default: 
                              if (true) {
                              F.line = 187;
                              failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(187, 20) `false` "));
                              }
                              
                              break;
                            }
                            F.line = 239;
                            i_436210537 = addInt(i_436210537, 1);
                            if (!(((colontmp__436210536).length == L_436210538))) {
                            F.line = 240;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    }
                    
                    if (matched_1291845889) {
                    if ((regex_1291845875.nfa.s[chckIndx(nt_1291845898, 0, (regex_1291845875.nfa.s).length - 1)].kind == 46)) {
                    F.line = 192;
                    add_1291845659(ms_1291845873.m, {Field0: captx_1291845888[0], Field1: HEX2EHEX2E_905970515(HEX5BHEX5D_1174405963(ms_1291845873.a, smi_1291845891).Field2.a, subInt(i_1291845876, 1))});
                    F.line = 193;
                    clear_1174406010(ms_1291845873, "a");
                    if (!(eoeFound_1291845890)) {
                    F.line = 195;
                    eoeFound_1291845890 = true;
                    F.line = 196;
                    add_1174405976(ms_1291845873, "a", {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_905970515(i_1291845876, subInt(i_1291845876, 1))});
                    }
                    
                    F.line = 197;
                    smi_1291845891 = -1;
                    F.line = 198;
                    break Label3;
                    }
                    
                    F.line = 199;
                    add_1174405976(ms_1291845873, "b", {Field0: nt_1291845898, Field1: captx_1291845888[0], Field2: HEX2EHEX2E_905970515(HEX5BHEX5D_1174405963(ms_1291845873.a, smi_1291845891).Field2.a, subInt(i_1291845876, 1))});
                    }
                    
                  } while (false);
                  F.line = 172;
                  i_436210541 = addInt(i_436210541, 1);
                  if (!(((colontmp__436210540).length == L_436210542))) {
                  F.line = 173;
                  failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            } while (false);
          } while (false);
          F.line = 200;
          smi_1291845891 = addInt(smi_1291845891, 1);
        }
    } while (false);
    F.line = 201;
    var Temporary15 = ms_1291845873.a; ms_1291845873.a = ms_1291845873.b; ms_1291845873.b = Temporary15;  framePtr = F.prev;

  
}

function hasMatches_1291845698(ms_1291845699) {
  var result_1291845700 = false;

  var F = {procname: "nfafindall.hasMatches", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 105;
    result_1291845700 = (0 < len_1291845656(ms_1291845699.m));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1291845700;

}

function findSomeImpl_1291845963(text_1291845964, regex_1291845965, ms_1291845966, start_1291845967, flags_1291845968) {
      var Temporary1;

  var result_1291845969 = 0;

  var F = {procname: "nfafindall.findSomeImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((ms_1291845966.a == null)) {
    if (!((ms_1291845966.b == null))) {
    F.line = 91;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(91, 12) `ms.b == nil` "));
    }
    
    F.line = 92;
    ms_1291845966.a = newSubmatches_1174405896((regex_1291845965.nfa.s).length);
    F.line = 93;
    ms_1291845966.b = newSubmatches_1174405896((regex_1291845965.nfa.s).length);
    F.line = 94;
    ms_1291845966.look = nimCopy(ms_1291845966.look, {ahead: matchImpl_1308622887, behind: reversedMatchImpl_1308623334, smL: ({s: [], i: 0})}, NTI1308622853);
    }
    
      if (!((regex_1291845965.nfa.s).length <= cap_1174406019(ms_1291845966.a))) Temporary1 = false; else {        Temporary1 = ((regex_1291845965.nfa.s).length <= cap_1174406019(ms_1291845966.b));      }    if (!(Temporary1)) {
    F.line = 211;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(211, 16) `ms.a.cap >= len(regex.nfa.s) and ms.b.cap >= len(regex.nfa.s)` "));
    }
    
    F.line = 212;
    clear_1291845701(ms_1291845966);
    F.line = 214;
    var c_1291845992 = -1;
    F.line = 215;
    var cPrev_1291845993 = -1;
    F.line = 216;
    var i_1291845994 = start_1291845967;
    F.line = 217;
    var iPrev_1291845995 = start_1291845967;
    F.line = 218;
    var optFlag_1291846000 = (flags_1291845968[3] != undefined);
    F.line = 219;
    add_1174405976(ms_1291845966, "a", {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_905970515(i_1291845994, subInt(i_1291845994, 1))});
    if (contains_1107297731(HEX2EHEX2E_905970515(0, subInt((text_1291845964).length, 1)), subInt(start_1291845967, 1))) {
    F.line = 221;
    cPrev_1291845993 = bwRuneAt_1073741866(text_1291845964, subInt(start_1291845967, 1));
    }
    
    Label2: do {
      F.line = 222;
        Label3: while (true) {
        if (!(i_1291845994 < (text_1291845964).length)) break Label3;
          if ((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] <= 127)) {
          F.line = 81;
          c_1291845992 = chckRange(text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)], -2147483648, 2147483647);
          F.line = 82;
          i_1291845994 = addInt(i_1291845994, 1);
          }
          else {
          if (((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] >>> 5) == 6)) {
          if ((i_1291845994 <= subInt((text_1291845964).length, 2))) {
          F.line = 86;
          c_1291845992 = chckRange((((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] & 31) << 6) | (text_1291845964[chckIndx(addInt(i_1291845994, 1), 0, (text_1291845964).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 88;
          i_1291845994 = addInt(i_1291845994, 2);
          }
          else {
            F.line = 90;
            c_1291845992 = 65533;
            F.line = 91;
            i_1291845994 = addInt(i_1291845994, 1);
          }
          
          }
          else {
          if (((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] >>> 4) == 14)) {
          if ((i_1291845994 <= subInt((text_1291845964).length, 3))) {
          F.line = 96;
          c_1291845992 = chckRange(((((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] & 15) << 12) | ((text_1291845964[chckIndx(addInt(i_1291845994, 1), 0, (text_1291845964).length - 1)] & 63) << 6)) | (text_1291845964[chckIndx(addInt(i_1291845994, 2), 0, (text_1291845964).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 99;
          i_1291845994 = addInt(i_1291845994, 3);
          }
          else {
            F.line = 101;
            c_1291845992 = 65533;
            F.line = 102;
            i_1291845994 = addInt(i_1291845994, 1);
          }
          
          }
          else {
          if (((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] >>> 3) == 30)) {
          if ((i_1291845994 <= subInt((text_1291845964).length, 4))) {
          F.line = 108;
          c_1291845992 = chckRange((((((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] & 7) << 18) | ((text_1291845964[chckIndx(addInt(i_1291845994, 1), 0, (text_1291845964).length - 1)] & 63) << 12)) | ((text_1291845964[chckIndx(addInt(i_1291845994, 2), 0, (text_1291845964).length - 1)] & 63) << 6)) | (text_1291845964[chckIndx(addInt(i_1291845994, 3), 0, (text_1291845964).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 112;
          i_1291845994 = addInt(i_1291845994, 4);
          }
          else {
            F.line = 114;
            c_1291845992 = 65533;
            F.line = 115;
            i_1291845994 = addInt(i_1291845994, 1);
          }
          
          }
          else {
          if (((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] >>> 2) == 62)) {
          if ((i_1291845994 <= subInt((text_1291845964).length, 5))) {
          F.line = 122;
          c_1291845992 = chckRange(((((((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] & 3) << 24) | ((text_1291845964[chckIndx(addInt(i_1291845994, 1), 0, (text_1291845964).length - 1)] & 63) << 18)) | ((text_1291845964[chckIndx(addInt(i_1291845994, 2), 0, (text_1291845964).length - 1)] & 63) << 12)) | ((text_1291845964[chckIndx(addInt(i_1291845994, 3), 0, (text_1291845964).length - 1)] & 63) << 6)) | (text_1291845964[chckIndx(addInt(i_1291845994, 4), 0, (text_1291845964).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 127;
          i_1291845994 = addInt(i_1291845994, 5);
          }
          else {
            F.line = 129;
            c_1291845992 = 65533;
            F.line = 130;
            i_1291845994 = addInt(i_1291845994, 1);
          }
          
          }
          else {
          if (((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] >>> 1) == 126)) {
          if ((i_1291845994 <= subInt((text_1291845964).length, 6))) {
          F.line = 138;
          c_1291845992 = chckRange((((((((text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)] & 1) << 30) | ((text_1291845964[chckIndx(addInt(i_1291845994, 1), 0, (text_1291845964).length - 1)] & 63) << 24)) | ((text_1291845964[chckIndx(addInt(i_1291845994, 2), 0, (text_1291845964).length - 1)] & 63) << 18)) | ((text_1291845964[chckIndx(addInt(i_1291845994, 3), 0, (text_1291845964).length - 1)] & 63) << 12)) | ((text_1291845964[chckIndx(addInt(i_1291845994, 4), 0, (text_1291845964).length - 1)] & 63) << 6)) | (text_1291845964[chckIndx(addInt(i_1291845994, 5), 0, (text_1291845964).length - 1)] & 63)), -2147483648, 2147483647);
          F.line = 144;
          i_1291845994 = addInt(i_1291845994, 6);
          }
          else {
            F.line = 146;
            c_1291845992 = 65533;
            F.line = 147;
            i_1291845994 = addInt(i_1291845994, 1);
          }
          
          }
          else {
            F.line = 149;
            c_1291845992 = chckRange(text_1291845964[chckIndx(i_1291845994, 0, (text_1291845964).length - 1)], -2147483648, 2147483647);
            F.line = 150;
            i_1291845994 = addInt(i_1291845994, 1);
          }
          }}}}}
          F.line = 227;
          submatch_1291845872(ms_1291845966, text_1291845964, regex_1291845965, iPrev_1291845995, cPrev_1291845993, c_1291845992);
          if ((len_1174406007(ms_1291845966.a) == 0)) {
          if ((i_1291845994 < (text_1291845964).length)) {
          if (hasMatches_1291845698(ms_1291845966)) {
          F.line = 234;
          result_1291845969 = i_1291845994;
          break BeforeRet;
          }
          
          if (optFlag_1291846000) {
          F.line = 237;
          result_1291845969 = i_1291845994;
          break BeforeRet;
          }
          
          }
          
          }
          
          F.line = 238;
          add_1174405976(ms_1291845966, "a", {Field0: 0, Field1: -1, Field2: HEX2EHEX2E_905970515(i_1291845994, subInt(i_1291845994, 1))});
          F.line = 239;
          iPrev_1291845995 = i_1291845994;
          F.line = 240;
          cPrev_1291845993 = c_1291845992;
        }
    } while (false);
    F.line = 241;
    submatch_1291845872(ms_1291845966, text_1291845964, regex_1291845965, iPrev_1291845995, cPrev_1291845993, -1);
    if (!((len_1174406007(ms_1291845966.a) == 0))) {
    F.line = 242;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(242, 12) `smA.len == 0` "));
    }
    
    if (hasMatches_1291845698(ms_1291845966)) {
    F.line = 245;
    result_1291845969 = i_1291845994;
    break BeforeRet;
    }
    
    F.line = 247;
    result_1291845969 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1291845969;

}

function findSomeOptImpl_1291846277(text_1291846278, regex_1291846279, ms_1291846280, start_1291846281) {
      var Temporary1;

  var result_1291846282 = 0;

  var F = {procname: "nfafindall.findSomeOptImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!((0 < (regex_1291846279.litOpt.nfa.s).length))) {
    F.line = 265;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(265, 12) `opt.nfa.s.len > 0` "));
    }
    
    if ((ms_1291846280.a == null)) {
    if (!((ms_1291846280.b == null))) {
    F.line = 91;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(91, 12) `ms.b == nil` "));
    }
    
    F.line = 92;
    ms_1291846280.a = newSubmatches_1174405896(nimMax((regex_1291846279.litOpt.nfa.s).length, (regex_1291846279.nfa.s).length));
    F.line = 93;
    ms_1291846280.b = newSubmatches_1174405896(nimMax((regex_1291846279.litOpt.nfa.s).length, (regex_1291846279.nfa.s).length));
    F.line = 94;
    ms_1291846280.look = nimCopy(ms_1291846280.look, {ahead: matchImpl_1308622887, behind: reversedMatchImpl_1308623334, smL: ({s: [], i: 0})}, NTI1308622853);
    }
    
      if (!(nimMax((regex_1291846279.litOpt.nfa.s).length, (regex_1291846279.nfa.s).length) <= cap_1174406019(ms_1291846280.a))) Temporary1 = false; else {        Temporary1 = (nimMax((regex_1291846279.litOpt.nfa.s).length, (regex_1291846279.nfa.s).length) <= cap_1174406019(ms_1291846280.b));      }    if (!(Temporary1)) {
    F.line = 266;
    failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(266, 16) `ms.a.cap >= max(len(regex.litOpt.nfa.s), len(regex.nfa.s)) and\x0A    ms.b.cap >= max(len(regex.litOpt.nfa.s), len(regex.nfa.s))` "));
    }
    
    F.line = 267;
    clear_1291845701(ms_1291846280);
    F.line = 268;
    var limit_1291846320 = start_1291846281;
    F.line = 269;
    var i_1291846321 = start_1291846281;
    F.line = 270;
    var i2_1291846322 = -1;
    Label2: do {
      F.line = 271;
        Label3: while (true) {
        if (!(i_1291846321 < (text_1291846278).length)) break Label3;
          if (!((i2_1291846322 < i_1291846321))) {
          F.line = 272;
          failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(272, 14) `i > i2` "));
          }
          
          F.line = 272;
          i2_1291846322 = i_1291846321;
          F.line = 275;
          var litIdx_1291846328 = nsuFindChar(text_1291846278, chckRange(regex_1291846279.litOpt.lit, 0, 255), chckRange(i_1291846321, 0, 2147483647), 0);
          if ((litIdx_1291846328 == -1)) {
          F.line = 277;
          result_1291846282 = -1;
          break BeforeRet;
          }
          
          if (!((i_1291846321 <= litIdx_1291846328))) {
          F.line = 279;
          failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(279, 14) `litIdx >= i` "));
          }
          
          F.line = 280;
          i_1291846321 = litIdx_1291846328;
          F.line = 281;
          i_1291846321 = reversedMatchImpl_1308623933(ms_1291846280, "a", ms_1291846280, "b", text_1291846278, regex_1291846279.litOpt.nfa, ms_1291846280.look, i_1291846321, limit_1291846320);
          if ((i_1291846321 == -1)) {
          F.line = 284;
          i_1291846321 = addInt(litIdx_1291846328, 1);
          }
          else {
            if (!((i_1291846321 <= litIdx_1291846328))) {
            F.line = 286;
            failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim(286, 16) `i <= litIdx` "));
            }
            
            F.line = 288;
            i_1291846321 = findSomeImpl_1291845963(text_1291846278, regex_1291846279, ms_1291846280, chckRange(i_1291846321, 0, 2147483647), ConstSet59);
            if (hasMatches_1291845698(ms_1291846280)) {
            F.line = 291;
            result_1291846282 = i_1291846321;
            break BeforeRet;
            }
            
            if ((i_1291846321 == -1)) {
            F.line = 293;
            result_1291846282 = -1;
            break BeforeRet;
            }
            
          }
          
        }
    } while (false);
    F.line = 294;
    result_1291846282 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_1291846282;

}

function fillMatchImpl_1291845722(m_1291845723, mi_1291845724, ms_1291845725, regex_1291845726) {
  var F = {procname: "nfafindall.fillMatchImpl", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
    if (!((len_1174405401(m_1291845723.namedGroups) == len_1174405401(regex_1291845726.namedGroups)))) {
    F.line = 128;
    m_1291845723.namedGroups = nimCopy(m_1291845723.namedGroups, regex_1291845726.namedGroups, NTI1157628042);
    }
    
    F.line = 129;
    constructSubmatches_1174405135(m_1291845723, "captures", ms_1291845725.c, ((ms_1291845725.m.s[chckIndx(mi_1291845724, 0, (ms_1291845725.m.s).length - 1)].Field0) | 0), ((regex_1291845726.groupsCount) | 0));
    F.line = 131;
    m_1291845723.boundaries = nimCopy(m_1291845723.boundaries, ms_1291845725.m.s[chckIndx(mi_1291845724, 0, (ms_1291845725.m.s).length - 1)].Field1, NTI704643133);
  framePtr = F.prev;

  
}

function findAll_973079759(s_973079760, pattern_973079761, start_973079762) {
            var Temporary4;

  var result_973079763 = [];

  var F = {procname: "regex.findAll", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 574;
      var m_973079764 = ({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})});
      F.line = 554;
      var i_436210510 = start_973079762;
      F.line = 555;
      var i2_436210511 = subInt(start_973079762, 1);
      F.line = 556;
      var m_436210512 = [({captures: [], namedGroups: ({data: [], counter: 0, first: 0, last: 0}), boundaries: ({a: 0, b: 0})})];
      F.line = 557;
      var ms_436210513 = [({a: null, b: null, m: ({s: [], i: 0}), c: [], look: ({ahead: null, behind: null, smL: ({s: [], i: 0})})})];
      Label2: do {
        F.line = 558;
          Label3: while (true) {
          if (!(i_436210510 <= (s_973079760).length)) break Label3;
            if (!((i2_436210511 < i_436210510))) {
            F.line = 559;
            failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim(559, 13) `i > i2` "));
            }
            
            F.line = 559;
            i2_436210511 = i_436210510;
            F.line = 560;
            if (canOpt_1191182950(pattern_973079761.litOpt)) {
            Temporary4 = findSomeOptImpl_1291846277(s_973079760, pattern_973079761, ms_436210513[0], chckRange(i_436210510, 0, 2147483647));
            }
            else {
            Temporary4 = findSomeImpl_1291845963(s_973079760, pattern_973079761, ms_436210513[0], chckRange(i_436210510, 0, 2147483647), ConstSet60);
            }
            
            i_436210510 = Temporary4;
            if ((i_436210510 < 0)) {
            F.line = 562;
            break Label2;
            }
            
            Label5: do {
              F.line = 563;
              var mi_436210516 = 0;
              Label6: do {
                F.line = 118;
                var i_436210518 = 0;
                F.line = 75;
                var colontmp__436210519 = 0;
                F.line = 118;
                colontmp__436210519 = subInt(len_1291845656(ms_436210513[0].m), 1);
                F.line = 90;
                var res_436210520 = 0;
                Label7: do {
                  F.line = 91;
                    Label8: while (true) {
                    if (!(res_436210520 <= colontmp__436210519)) break Label8;
                      F.line = 118;
                      i_436210518 = res_436210520;
                      F.line = 563;
                      mi_436210516 = i_436210518;
                      F.line = 563;
                      fillMatchImpl_1291845722(m_436210512[0], mi_436210516, ms_436210513[0], pattern_973079761);
                      F.line = 574;
                      m_973079764 = nimCopy(m_973079764, m_436210512[0], NTI1174405333);
                      F.line = 574;
                      var Temporary9 = nimCopy(null, m_973079764, NTI1174405333);
                      result_973079763.push(Temporary9);;
                      F.line = 93;
                      res_436210520 = addInt(res_436210520, 1);
                    }
                } while (false);
              } while (false);
            } while (false);
            if ((i_436210510 == (s_973079760).length)) {
            F.line = 567;
            break Label2;
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_973079763;

}

function re_956302243() {
  var result_956302246 = ({nfa: ({s: [], t: ({allZ: [], z: []})}), groupsCount: 0, namedGroups: ({data: [], counter: 0, first: 0, last: 0}), litOpt: ({lit: 0, nfa: ({s: [], t: ({allZ: [], z: []})})})});

  var F = {procname: "re.re", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
  framePtr = F;
    F.line = 292;
    result_956302246 = nimCopy(result_956302246, {nfa: {s: [{kind: 45, cp: 35, next: [1], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 0, cp: 40, next: [2, 3], isGreedy: false, uid: 1, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 40, cp: 35, next: [2, 3], isGreedy: false, uid: 2, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [{Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}, {Field0: 2019811060, Field1: 40}, {Field0: -1823011404, Field1: 41}, {Field0: 0, Field1: 0}, {Field0: 0, Field1: 0}], counter: 2}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 0, cp: 41, next: [4], isGreedy: false, uid: 4, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 46, cp: 35, next: [], isGreedy: false, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}], t: {allZ: [[-1], [-1, -1], [-1, -1], [-1], []], z: []}}, groupsCount: 0, namedGroups: {data: [{Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}, {Field0: 0, Field1: 0, Field2: [], Field3: 0}], counter: 0, first: -1, last: -1}, litOpt: {lit: 40, nfa: {s: [{kind: 45, cp: 35, next: [1], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}, {kind: 46, cp: 35, next: [], isGreedy: true, uid: 0, idx: 0, isCapturing: false, name: [], flags: [], min: 0, max: 0, cps: {data: [], counter: 0}, ranges: [], shorthands: [], cc: 0, subExp: {nfa: {s: [], t: {allZ: [], z: []}}, rpn: {s: []}, reverseCapts: false}}], t: {allZ: [[-1], []], z: []}}}}, NTI1174405330);
  framePtr = F.prev;

  return result_956302246;

}

function HEX5BHEX5D_905970540(s_905970543, x_905970544) {
  var result_905970545 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 2563;
    var a_905970547 = x_905970544.a;
    F.line = 2564;
    var L_905970549 = addInt(subInt(x_905970544.b, a_905970547), 1);
    F.line = 2565;
    result_905970545 = nimCopy(null, mnewString(chckRange(L_905970549, 0, 2147483647)), NTI33554439);
    Label1: do {
      F.line = 2566;
      var i_905970554 = 0;
      F.line = 119;
      var i_436210549 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210549 < L_905970549)) break Label3;
            F.line = 2566;
            i_905970554 = i_436210549;
            F.line = 2566;
            result_905970545[chckIndx(i_905970554, 0, (result_905970545).length - 1)] = s_905970543[chckIndx(addInt(i_905970554, a_905970547), 0, (s_905970543).length - 1)];
            F.line = 122;
            i_436210549 = addInt(i_436210549, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_905970545;

}

function HEX5BHEX5D_1291845827(s_1291845829, i_1291845830) {
  var result_1291845831 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 2649;
    result_1291845831 = s_1291845829[chckIndx(subInt((s_1291845829).length, i_1291845830), 0, (s_1291845829).length - 1)];
  framePtr = F.prev;

  return result_1291845831;

}

function dummyMatch_1291845823(ms_1291845824, i_1291845825) {
      var Temporary1;

  var F = {procname: "nfafindall.dummyMatch", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex\\nfafindall.nim", line: 0};
  framePtr = F;
      if ((len_1291845656(ms_1291845824.m) == 0)) Temporary1 = true; else {        Temporary1 = (nimMax(HEX5BHEX5D_1291845827(ms_1291845824.m.s, 1).Field1.a, HEX5BHEX5D_1291845827(ms_1291845824.m.s, 1).Field1.b) < i_1291845825);      }    if (Temporary1) {
    F.line = 140;
    add_1291845659(ms_1291845824.m, {Field0: -1, Field1: HEX2EHEX2E_905970515(addInt(i_1291845825, 1), i_1291845825)});
    }
    
  framePtr = F.prev;

  
}

function split_973079885(s_973079886, sep_973079887) {
            var Temporary4;
            var Temporary5;
                        var Temporary10;

  var result_973079888 = [];

  var F = {procname: "regex.split", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 691;
      var w_973079889 = [];
      F.line = 670;
      var first_436210563 = 0;
      F.line = 670;
      var last_436210564 = 0;
      F.line = 670;
      var i_436210565 = 0;
      F.line = 671;
      var i2_436210566 = -1;
      F.line = 672;
      var done_436210567 = false;
      F.line = 673;
      var ms_436210568 = [({a: null, b: null, m: ({s: [], i: 0}), c: [], look: ({ahead: null, behind: null, smL: ({s: [], i: 0})})})];
      Label2: do {
        F.line = 674;
          Label3: while (true) {
          if (!!(done_436210567)) break Label3;
            if (!((i2_436210566 < i_436210565))) {
            F.line = 675;
            failedAssertImpl_218103864(makeNimstrLit("C:\\Users\\root.moti-PC.001\\.nimble\\pkgs\\regex-0.20.0\\regex.nim(675, 13) `i > i2` "));
            }
            
            F.line = 675;
            i2_436210566 = i_436210565;
            F.line = 676;
            if (canOpt_1191182950(sep_973079887.litOpt)) {
            Temporary4 = findSomeOptImpl_1291846277(s_973079886, sep_973079887, ms_436210568[0], chckRange(i_436210565, 0, 2147483647));
            }
            else {
            Temporary4 = findSomeImpl_1291845963(s_973079886, sep_973079887, ms_436210568[0], chckRange(i_436210565, 0, 2147483647), ConstSet61);
            }
            
            i_436210565 = Temporary4;
            F.line = 677;
            if ((i_436210565 < 0)) Temporary5 = true; else {              Temporary5 = ((s_973079886).length <= i_436210565);            }            done_436210567 = Temporary5;
            if (done_436210567) {
            F.line = 678;
            dummyMatch_1291845823(ms_436210568[0], (s_973079886).length);
            }
            
            Label6: do {
              F.line = 679;
              var ab_436210571 = ({a: 0, b: 0});
              Label7: do {
                F.line = 114;
                var i_436210573 = 0;
                F.line = 75;
                var colontmp__436210574 = 0;
                F.line = 114;
                colontmp__436210574 = subInt(len_1291845656(ms_436210568[0].m), 1);
                F.line = 90;
                var res_436210575 = 0;
                Label8: do {
                  F.line = 91;
                    Label9: while (true) {
                    if (!(res_436210575 <= colontmp__436210574)) break Label9;
                      F.line = 114;
                      i_436210573 = res_436210575;
                      F.line = 679;
                      ab_436210571 = nimCopy(ab_436210571, ms_436210568[0].m.s[chckIndx(i_436210573, 0, (ms_436210568[0].m.s).length - 1)].Field1, NTI704643133);
                      F.line = 680;
                      last_436210564 = ab_436210571.a;
                        if ((0 < ab_436210571.a)) Temporary10 = true; else {                          Temporary10 = (ab_436210571.a <= ab_436210571.b);                        }                      if (Temporary10) {
                      F.line = 691;
                      w_973079889 = substr_33557906(s_973079886, first_436210563, subInt(last_436210564, 1));
                      F.line = 691;
                      var Temporary11 = nimCopy(null, w_973079889, NTI33554439);
                      result_973079888.push(Temporary11);;
                      }
                      
                      F.line = 683;
                      first_436210563 = addInt(ab_436210571.b, 1);
                      F.line = 93;
                      res_436210575 = addInt(res_436210575, 1);
                    }
                } while (false);
              } while (false);
            } while (false);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_973079888;

}

function nsuStartsWith(s_620758305, prefix_620758306) {
            var Temporary3;

  var result_620758307 = false;

  var F = {procname: "strutils.startsWith", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 56;
    var prefixLenHEX60gensym141_620758312 = (prefix_620758306).length;
    F.line = 57;
    var sLenHEX60gensym141_620758313 = (s_620758305).length;
    F.line = 58;
    var iHEX60gensym141_620758314 = 0;
    Label1: do {
      F.line = 1558;
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym141_620758312 <= iHEX60gensym141_620758314)) {
          F.line = 60;
          result_620758307 = true;
          break BeforeRet;
          }
          
            if ((sLenHEX60gensym141_620758313 <= iHEX60gensym141_620758314)) Temporary3 = true; else {              Temporary3 = !((s_620758305[chckIndx(iHEX60gensym141_620758314, 0, (s_620758305).length - 1)] == prefix_620758306[chckIndx(iHEX60gensym141_620758314, 0, (prefix_620758306).length - 1)]));            }          if (Temporary3) {
          F.line = 61;
          result_620758307 = false;
          break BeforeRet;
          }
          
          F.line = 62;
          iHEX60gensym141_620758314 = addInt(iHEX60gensym141_620758314, 1);
        }
    } while (false);
  } while (false);
  framePtr = F.prev;

  return result_620758307;

}

function nsuDelete(s_620758286, s_620758286_Idx, first_620758287, last_620758288) {
  var F = {procname: "strutils.delete", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 1523;
    var i_620758289 = first_620758287;
    F.line = 1524;
    var j_620758290 = nimMin((s_620758286[s_620758286_Idx]).length, addInt(last_620758288, 1));
    F.line = 1525;
    var newLen_620758291 = addInt(subInt((s_620758286[s_620758286_Idx]).length, j_620758290), i_620758289);
    Label1: do {
      F.line = 1526;
        Label2: while (true) {
        if (!(i_620758289 < newLen_620758291)) break Label2;
          F.line = 1527;
          s_620758286[s_620758286_Idx][chckIndx(i_620758289, 0, (s_620758286[s_620758286_Idx]).length - 1)] = s_620758286[s_620758286_Idx][chckIndx(j_620758290, 0, (s_620758286[s_620758286_Idx]).length - 1)];
          F.line = 1528;
          i_620758289 = addInt(i_620758289, 1);
          F.line = 1529;
          j_620758290 = addInt(j_620758290, 1);
        }
    } while (false);
    F.line = 1530;
    (s_620758286[s_620758286_Idx].length = chckRange(newLen_620758291, 0, 2147483647));
  framePtr = F.prev;

  
}

function nsuRemovePrefixString(s_620758366, s_620758366_Idx, prefix_620758367) {
  var F = {procname: "strutils.removePrefix", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    if (nsuStartsWith(s_620758366[s_620758366_Idx], prefix_620758367)) {
    F.line = 1657;
    nsuDelete(s_620758366, s_620758366_Idx, 0, subInt((prefix_620758367).length, 1));
    }
    
  framePtr = F.prev;

  
}

function nsuEndsWith(s_620758324, suffix_620758325) {
          var Temporary3;

  var result_620758326 = false;

  var F = {procname: "strutils.endsWith", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 65;
    var suffixLenHEX60gensym148_620758332 = (suffix_620758325).length;
    F.line = 66;
    var sLenHEX60gensym148_620758333 = (s_620758324).length;
    F.line = 67;
    var iHEX60gensym148_620758334 = 0;
    F.line = 68;
    var jHEX60gensym148_620758335 = subInt(sLenHEX60gensym148_620758333, suffixLenHEX60gensym148_620758332);
    Label1: do {
      F.line = 69;
        Label2: while (true) {
          if (!(0 <= addInt(iHEX60gensym148_620758334, jHEX60gensym148_620758335))) Temporary3 = false; else {            Temporary3 = (addInt(iHEX60gensym148_620758334, jHEX60gensym148_620758335) < sLenHEX60gensym148_620758333);          }        if (!Temporary3) break Label2;
          if (!((s_620758324[chckIndx(addInt(iHEX60gensym148_620758334, jHEX60gensym148_620758335), 0, (s_620758324).length - 1)] == suffix_620758325[chckIndx(iHEX60gensym148_620758334, 0, (suffix_620758325).length - 1)]))) {
          F.line = 70;
          result_620758326 = false;
          break BeforeRet;
          }
          
          F.line = 71;
          iHEX60gensym148_620758334 = addInt(iHEX60gensym148_620758334, 1);
        }
    } while (false);
    if ((suffixLenHEX60gensym148_620758332 <= iHEX60gensym148_620758334)) {
    F.line = 72;
    result_620758326 = true;
    break BeforeRet;
    }
    
  } while (false);
  framePtr = F.prev;

  return result_620758326;

}

function nsuRemoveSuffixString(s_620758384, s_620758384_Idx, suffix_620758385) {
  var F = {procname: "strutils.removeSuffix", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 1712;
    var newLen_620758386 = (s_620758384[s_620758384_Idx]).length;
    if (nsuEndsWith(s_620758384[s_620758384_Idx], suffix_620758385)) {
    F.line = 1714;
    newLen_620758386 = subInt(newLen_620758386, (suffix_620758385).length);
    F.line = 1715;
    (s_620758384[s_620758384_Idx].length = chckRange(newLen_620758386, 0, 2147483647));
    }
    
  framePtr = F.prev;

  
}

function mustRehash_956303085(t_956303087) {
  var result_956303088 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_956303087.counter < (t_956303087.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_956303088 = ((mulInt((t_956303087.data).length, 2) < mulInt(t_956303087.counter, 3)) || (subInt((t_956303087.data).length, t_956303087.counter) < 4));
  framePtr = F.prev;

  return result_956303088;

}

function rawInsert_956303534(t_956303538, data_956303539, data_956303539_Idx, key_956303540, val_956303541, hc_956303542, h_956303543) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_956303539[data_956303539_Idx][chckIndx(h_956303543, 0, (data_956303539[data_956303539_Idx]).length - 1)].Field1 = nimCopy(null, key_956303540, NTI33554439);
    F.line = 23;
    data_956303539[data_956303539_Idx][chckIndx(h_956303543, 0, (data_956303539[data_956303539_Idx]).length - 1)].Field2 = nimCopy(null, val_956303541, NTI33554439);
    F.line = 24;
    data_956303539[data_956303539_Idx][chckIndx(h_956303543, 0, (data_956303539[data_956303539_Idx]).length - 1)].Field0 = hc_956303542;
  framePtr = F.prev;

  
}

function enlarge_956303240(t_956303243) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_956303246 = [];
    F.line = 250;
    n_956303246 = new Array(chckRange(mulInt((t_956303243.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_956303243.data).length, 2), 0, 2147483647) ; ++i) { n_956303246[i] = {Field0: 0, Field1: [], Field2: []}; }    F.line = 251;
    var Temporary1 = t_956303243.data; t_956303243.data = n_956303246; n_956303246 = Temporary1;    Label2: do {
      F.line = 252;
      var i_956303310 = 0;
      F.line = 43;
      var colontmp__436210582 = 0;
      F.line = 252;
      colontmp__436210582 = (n_956303246).length - 1;
      F.line = 65;
      var res_436210583 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436210583 <= colontmp__436210582)) break Label4;
            F.line = 252;
            i_956303310 = res_436210583;
            F.line = 253;
            var eh_956303364 = n_956303246[chckIndx(i_956303310, 0, (n_956303246).length - 1)].Field0;
            if (isFilled_570425375(eh_956303364)) {
            F.line = 255;
            var j_956303368 = (eh_956303364 & (t_956303243.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_570425375(t_956303243.data[chckIndx(j_956303368, 0, (t_956303243.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_956303368 = nextTry_570425378(j_956303368, (t_956303243.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_956303534(t_956303243, t_956303243, "data", n_956303246[chckIndx(i_956303310, 0, (n_956303246).length - 1)].Field1, n_956303246[chckIndx(i_956303310, 0, (n_956303246).length - 1)].Field2, eh_956303364, j_956303368);
            }
            
            F.line = 68;
            res_436210583 = addInt(res_436210583, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_956303703(t_956303706, key_956303707, hc_956303708) {
  var result_956303709 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_956303706.data).length == 0)) {
    F.line = 48;
    result_956303709 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956303760 = (hc_956303708 & (t_956303706.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956303706.data[chckIndx(h_956303760, 0, (t_956303706.data).length - 1)].Field0)) break Label2;
          if (((t_956303706.data[chckIndx(h_956303760, 0, (t_956303706.data).length - 1)].Field0 == hc_956303708) && eqStrings(t_956303706.data[chckIndx(h_956303760, 0, (t_956303706.data).length - 1)].Field1, key_956303707))) {
          F.line = 56;
          result_956303709 = h_956303760;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956303760 = nextTry_570425378(h_956303760, (t_956303706.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956303709 = subInt(-1, h_956303760);
  } while (false);
  framePtr = F.prev;

  return result_956303709;

}

function HEX5BHEX5DHEX3D_956302688(t_956302691, key_956302692, val_956302693) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    if (((t_956302691.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym20_956302743 = slotsNeeded_570425386(32);
    F.line = 167;
    t_956302691.counter = 0;
    F.line = 168;
    t_956302691.data = new Array(chckRange(correctSizeHEX60gensym20_956302743, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_956302743, 0, 2147483647) ; ++i) { t_956302691.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    F.line = 57;
    var hc_956302748 = [0];
    F.line = 58;
    var index_956302978 = rawGet_956302749(t_956302691, key_956302692, hc_956302748, 0);
    if ((0 <= index_956302978)) {
    F.line = 59;
    t_956302691.data[chckIndx(index_956302978, 0, (t_956302691.data).length - 1)].Field2 = nimCopy(null, val_956302693, NTI33554439);
    }
    else {
      if (((t_956302691.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym25_956303080 = slotsNeeded_570425386(32);
      F.line = 167;
      t_956302691.counter = 0;
      F.line = 168;
      t_956302691.data = new Array(chckRange(correctSizeHEX60gensym25_956303080, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym25_956303080, 0, 2147483647) ; ++i) { t_956302691.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_956303085(t_956302691)) {
      F.line = 49;
      enlarge_956303240(t_956302691);
      F.line = 50;
      index_956302978 = rawGetKnownHC_956303703(t_956302691, key_956302692, hc_956302748[0]);
      }
      
      F.line = 51;
      index_956302978 = subInt(-1, index_956302978);
      F.line = 52;
      rawInsert_956303534(t_956302691, t_956302691, "data", key_956302692, val_956302693, hc_956302748[0], index_956302978);
      F.line = 60;
      t_956302691.counter = addInt(t_956302691.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function CFGstrParenExp_956302211(b_956302212) {

function HEX2A_956303958(S1_956303959, S2_956303960) {
                        var Temporary7;
                        var Temporary8;

  var result_956303961 = [];

  var F = {procname: "CFGstrParenExp.*", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 107;
    var prodseq_956303962 = [[]];
    Label1: do {
      F.line = 108;
      var s1_956303966 = [];
      F.line = 235;
      var i_436210491 = 0;
      F.line = 236;
      var L_436210492 = (S1_956303959).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436210491 < L_436210492)) break Label3;
            F.line = 108;
            s1_956303966 = S1_956303959[chckIndx(i_436210491, 0, (S1_956303959).length - 1)];
            Label4: do {
              F.line = 109;
              var s2_956303970 = [];
              F.line = 235;
              var i_436210488 = 0;
              F.line = 236;
              var L_436210489 = (S2_956303960).length;
              Label5: do {
                F.line = 237;
                  Label6: while (true) {
                  if (!(i_436210488 < L_436210489)) break Label6;
                    F.line = 109;
                    s2_956303970 = S2_956303960[chckIndx(i_436210488, 0, (S2_956303960).length - 1)];
                    F.line = 110;
                    var s_956303971 = [];
                    if (eqStrings(s1_956303966, [])) {
                    F.line = 111;
                    s_956303971 = nimCopy(null, s2_956303970, NTI33554439);
                    }
                    else {
                        if (!eqStrings(s1_956303966, makeNimstrLit("\xCE\xB5"))) Temporary7 = false; else {                          Temporary7 = !(eqStrings(s2_956303970, makeNimstrLit("\xCE\xB5")));                        }                      if (Temporary7) {
                      F.line = 113;
                      s_956303971 = nimCopy(null, s2_956303970, NTI33554439);
                      }
                      else {
                        if (!!(eqStrings(s1_956303966, makeNimstrLit("\xCE\xB5")))) Temporary8 = false; else {                          Temporary8 = eqStrings(s2_956303970, makeNimstrLit("\xCE\xB5"));                        }                      if (Temporary8) {
                      F.line = 114;
                      s_956303971 = nimCopy(null, s1_956303966, NTI33554439);
                      }
                      else {
                        F.line = 116;
                        s_956303971 = nimCopy(null, (s1_956303966 || []).concat(makeNimstrLit("*") || [],s2_956303970 || []), NTI33554439);
                      }
                      }
                    }
                    
                    F.line = 117;
                    add_956303976(prodseq_956303962, 0, [nimCopy(null, s_956303971, NTI33554439)]);
                    F.line = 239;
                    i_436210488 = addInt(i_436210488, 1);
                    if (!(((S2_956303960).length == L_436210489))) {
                    F.line = 240;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 239;
            i_436210491 = addInt(i_436210491, 1);
            if (!(((S1_956303959).length == L_436210492))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 118;
    result_956303961 = nimCopy(null, prodseq_956303962[0], NTI956302800);
  framePtr = F.prev;

  return result_956303961;

}

function HEX2A_956303999(S1_956304000, s2_956304001) {
    var Temporary1;

  var result_956304002 = [];

  var F = {procname: "CFGstrParenExp.*", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 120;
    var S2_956304003 = [];
    if (match_973079723(s2_956304001, re_956304004())) {
    F.line = 121;
    S2_956304003 = nimCopy(null, nsuSplitString((Temporary1 = HEX5BHEX5D_956304061(imap_956302239[0], s2_956304001), Temporary1)[0][Temporary1[1]], makeNimstrLit("+"), -1), NTI620757354);
    }
    else {
      F.line = 123;
      S2_956304003 = nimCopy(null, [nimCopy(null, s2_956304001, NTI33554439)], NTI956302825);
    }
    
    F.line = 124;
    result_956304002 = nimCopy(null, HEX2A_956303958(S1_956304000, S2_956304003), NTI956302799);
  framePtr = F.prev;

  return result_956304002;

}
    
function substituteTatP_956304144(Pstr_956304145) {
      var result_956304146 = [];

      var F = {procname: "CFGstrParenExp.substituteTatP", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
      framePtr = F;
        F.line = 126;
        var sumseq_956304147 = [[]];
        Label1: do {
          F.line = 127;
          var p_956304148 = [];
          F.line = 365;
          var lastHEX60gensym41_436210361 = 0;
          F.line = 366;
          var splitsHEX60gensym41_436210362 = -1;
          Label2: do {
            F.line = 499;
              Label3: while (true) {
              if (!(lastHEX60gensym41_436210361 <= (Pstr_956304145).length)) break Label3;
                F.line = 369;
                var firstHEX60gensym41_436210364 = lastHEX60gensym41_436210361;
                Label4: do {
                  F.line = 370;
                    Label5: while (true) {
                    if (!((lastHEX60gensym41_436210361 < (Pstr_956304145).length) && !(substrEq_620757221(Pstr_956304145, lastHEX60gensym41_436210361, makeNimstrLit("+"))))) break Label5;
                      F.line = 371;
                      lastHEX60gensym41_436210361 = addInt(lastHEX60gensym41_436210361, 1);
                    }
                } while (false);
                if ((splitsHEX60gensym41_436210362 == 0)) {
                F.line = 372;
                lastHEX60gensym41_436210361 = (Pstr_956304145).length;
                }
                
                F.line = 127;
                p_956304148 = substr_33557906(Pstr_956304145, firstHEX60gensym41_436210364, subInt(lastHEX60gensym41_436210361, 1));
                F.line = 128;
                var prodseq_956304153 = [[]];
                Label6: do {
                  F.line = 129;
                  var u_956304154 = [];
                  F.line = 365;
                  var lastHEX60gensym41_436210356 = 0;
                  F.line = 366;
                  var splitsHEX60gensym41_436210357 = -1;
                  Label7: do {
                    F.line = 499;
                      Label8: while (true) {
                      if (!(lastHEX60gensym41_436210356 <= (p_956304148).length)) break Label8;
                        F.line = 369;
                        var firstHEX60gensym41_436210359 = lastHEX60gensym41_436210356;
                        Label9: do {
                          F.line = 370;
                            Label10: while (true) {
                            if (!((lastHEX60gensym41_436210356 < (p_956304148).length) && !(substrEq_620757221(p_956304148, lastHEX60gensym41_436210356, makeNimstrLit("*"))))) break Label10;
                              F.line = 371;
                              lastHEX60gensym41_436210356 = addInt(lastHEX60gensym41_436210356, 1);
                            }
                        } while (false);
                        if ((splitsHEX60gensym41_436210357 == 0)) {
                        F.line = 372;
                        lastHEX60gensym41_436210356 = (p_956304148).length;
                        }
                        
                        F.line = 129;
                        u_956304154 = substr_33557906(p_956304148, firstHEX60gensym41_436210359, subInt(lastHEX60gensym41_436210356, 1));
                        F.line = 129;
                        prodseq_956304153 = nimCopy(null, HEX2A_956303999(prodseq_956304153, u_956304154), NTI956302846);
                        if ((splitsHEX60gensym41_436210357 == 0)) {
                        F.line = 374;
                        break Label7;
                        }
                        
                        F.line = 375;
                        splitsHEX60gensym41_436210357 = subInt(splitsHEX60gensym41_436210357, 1);
                        F.line = 376;
                        lastHEX60gensym41_436210356 = addInt(lastHEX60gensym41_436210356, 1);
                      }
                  } while (false);
                } while (false);
                F.line = 131;
                add_956303976(sumseq_956304147, 0, prodseq_956304153);
                if ((splitsHEX60gensym41_436210362 == 0)) {
                F.line = 374;
                break Label2;
                }
                
                F.line = 375;
                splitsHEX60gensym41_436210362 = subInt(splitsHEX60gensym41_436210362, 1);
                F.line = 376;
                lastHEX60gensym41_436210361 = addInt(lastHEX60gensym41_436210361, 1);
              }
          } while (false);
        } while (false);
        F.line = 132;
        F.line = 894;
        var sHEX60gensym37_956304162 = nimCopy(null, sumseq_956304147[0], NTI956302920);
        if (!((0 < (sHEX60gensym37_956304162).length))) {
        F.line = 895;
        failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym37.len > 0` Can\'t fold empty sequences"));
        }
        
        F.line = 896;
        var resultHEX60gensym37_956304171 = [];
        F.line = 897;
        resultHEX60gensym37_956304171 = nimCopy(null, sHEX60gensym37_956304162[chckIndx(0, 0, (sHEX60gensym37_956304162).length - 1)], NTI33554439);
        Label11: do {
          F.line = 898;
          var iHEX60gensym37_956304179 = 0;
          F.line = 117;
          var colontmp__436210367 = 0;
          F.line = 898;
          colontmp__436210367 = (sHEX60gensym37_956304162).length;
          F.line = 119;
          var i_436210368 = 1;
          Label12: do {
            F.line = 120;
              Label13: while (true) {
              if (!(i_436210368 < colontmp__436210367)) break Label13;
                F.line = 898;
                iHEX60gensym37_956304179 = i_436210368;
                F.line = 900;
                var a_956304180 = nimCopy(null, resultHEX60gensym37_956304171, NTI33554439);
                F.line = 901;
                var b_956304181 = nimCopy(null, sHEX60gensym37_956304162[chckIndx(iHEX60gensym37_956304179, 0, (sHEX60gensym37_956304162).length - 1)], NTI33554439);
                F.line = 132;
                resultHEX60gensym37_956304171 = nimCopy(null, (a_956304180 || []).concat(makeNimstrLit("+") || [],b_956304181 || []), NTI33554439);
                F.line = 122;
                i_436210368 = addInt(i_436210368, 1);
              }
          } while (false);
        } while (false);
        result_956304146 = nimCopy(null, resultHEX60gensym37_956304171, NTI33554439);
      framePtr = F.prev;

      return result_956304146;

    }
    
function parenthtoTable_956302240(b_956302241) {
        b_956302241 = nimCopy(null, b_956302241, NTI33554439);
        
function HEX3Aanonymous_956302560(x_956302563) {
          var result_956302566 = [];

          var F = {procname: "parenthtoTable.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
          framePtr = F;
            F.line = 94;
            result_956302566 = nimCopy(null, HEX5BHEX5D_905970540(b_956302241, x_956302563.boundaries), NTI33554439);
          framePtr = F.prev;

          return result_956302566;

        }

      var result_956302242 = [];

      var F = {procname: "CFGstrParenExp.parenthtoTable", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
      framePtr = F;
        F.line = 94;
        var iseq_956302603 = map_956302580(findAll_973079759(b_956302241, re_956302243(), 0), HEX3Aanonymous_956302560);
        F.line = 96;
        var oseq_956302607 = split_973079885(b_956302241, re_956302243());
        F.line = 97;
        var b_P_956302608 = [];
        if (!(HEX3DHEX3D_956302613(oseq_956302607, []))) {
        F.line = 99;
        b_P_956302608 = nimCopy(null, oseq_956302607[chckIndx(0, 0, (oseq_956302607).length - 1)], NTI33554439);
        Label1: do {
          F.line = 100;
          var k_956302644 = 0;
          F.line = 100;
          var i_956302645 = [];
          F.line = 168;
          var i_436210351 = 0;
          F.line = 169;
          var L_436210352 = (iseq_956302603).length;
          Label2: do {
            F.line = 170;
              Label3: while (true) {
              if (!(i_436210351 < L_436210352)) break Label3;
                F.line = 100;
                k_956302644 = i_436210351;
                F.line = 100;
                i_956302645 = iseq_956302603[chckIndx(i_436210351, 0, (iseq_956302603).length - 1)];
                F.line = 101;
                var Pk_956302646 = (makeNimstrLit("_P") || []).concat(HEX24_318767107(k_956302644) || [],makeNimstrLit("_") || []);
                F.line = 102;
                var Is_956302647 = [nimCopy(null, iseq_956302603[chckIndx(k_956302644, 0, (iseq_956302603).length - 1)], NTI33554439)];
                F.line = 100;
                nsuRemovePrefixString(Is_956302647, 0, makeNimstrLit("("));
                F.line = 100;
                nsuRemoveSuffixString(Is_956302647, 0, makeNimstrLit(")"));
                F.line = 100;
                HEX5BHEX5DHEX3D_956302688(imap_956302239[0], Pk_956302646, Is_956302647[0]);
                F.line = 100;
                b_P_956302608.push.apply(b_P_956302608, (Pk_956302646 || []).concat(oseq_956302607[chckIndx(addInt(k_956302644, 1), 0, (oseq_956302607).length - 1)] || []));;
                F.line = 172;
                i_436210351 = addInt(i_436210351, 1);
                if (!(((iseq_956302603).length == L_436210352))) {
                F.line = 173;
                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while (false);
        } while (false);
        }
        
        F.line = 105;
        result_956302242 = nimCopy(null, b_P_956302608, NTI33554439);
      framePtr = F.prev;

      return result_956302242;

    }

  var result_956302213 = [];

  var F = {procname: "PDA2CFG_separated_re.CFGstrParenExp", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 92;
    var imap_956302239 = [initTable_956302214(32)];
    F.line = 133;
    result_956302213 = nimCopy(null, substituteTatP_956304144(parenthtoTable_956302240(b_956302212)), NTI33554439);
  framePtr = F.prev;

  return result_956302213;

}

function HEX2A_956304191(s1_956304192, s2_956304193) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_956304194 = [];

  var F = {procname: "PDA2CFG_separated_re.*", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
      if (!!(eqStrings(s1_956304192, makeNimstrLit(" ")))) Temporary1 = false; else {        Temporary1 = !(eqStrings(s2_956304193, makeNimstrLit(" ")));      }    if (Temporary1) {
      if (!eqStrings(s1_956304192, makeNimstrLit("\xCE\xB5"))) Temporary2 = false; else {        Temporary2 = !(eqStrings(s2_956304193, makeNimstrLit("\xCE\xB5")));      }    if (Temporary2) {
    F.line = 136;
    result_956304194 = nimCopy(null, s2_956304193, NTI33554439);
    }
    else {
      if (!!(eqStrings(s1_956304192, makeNimstrLit("\xCE\xB5")))) Temporary3 = false; else {        Temporary3 = eqStrings(s2_956304193, makeNimstrLit("\xCE\xB5"));      }    if (Temporary3) {
    F.line = 137;
    result_956304194 = nimCopy(null, s1_956304192, NTI33554439);
    }
    else {
    if ((eqStrings(s1_956304192, makeNimstrLit("\xCE\xB5")) && eqStrings(s2_956304193, makeNimstrLit("\xCE\xB5")))) {
    F.line = 138;
    result_956304194 = nimCopy(null, makeNimstrLit("\xCE\xB5"), NTI33554439);
    }
    else {
      F.line = 139;
      result_956304194 = nimCopy(null, CFGstrParenExp_956302211((makeNimstrLit("(") || []).concat(s1_956304192 || [],makeNimstrLit(")*(") || [],s2_956304193 || [],makeNimstrLit(")") || [])), NTI33554439);
    }
    }}
    }
    else {
      F.line = 140;
      result_956304194 = nimCopy(null, makeNimstrLit(" "), NTI33554439);
    }
    
  framePtr = F.prev;

  return result_956304194;

}

function map_436209912(s_436209915, op_436209917) {
  var result_436209918 = [];

  var F = {procname: "map.map", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 385;
    result_436209918 = new Array(chckRange((s_436209915).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_436209915).length, 0, 2147483647) ; ++i) { result_436209918[i] = []; }    Label1: do {
      F.line = 386;
      var i_436209933 = 0;
      F.line = 117;
      var colontmp__436210587 = 0;
      F.line = 386;
      colontmp__436210587 = (s_436209915).length;
      F.line = 119;
      var i_436210588 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210588 < colontmp__436210587)) break Label3;
            F.line = 386;
            i_436209933 = i_436210588;
            F.line = 386;
            result_436209918[chckIndx(i_436209933, 0, (result_436209918).length - 1)] = nimCopy(null, op_436209917(s_436209915[chckIndx(i_436209933, 0, (s_436209915).length - 1)]), NTI956301315);
            F.line = 122;
            i_436210588 = addInt(i_436210588, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436209918;

}

function fill_620758459(a_620758461, value_620758462) {
  var F = {procname: "fill.fill", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
    F.line = 68;
    var xHEX60gensym166_620758468 = 0;
    Label1: do {
      F.line = 94;
        Label2: while (true) {
        if (!(xHEX60gensym166_620758468 <= (a_620758461).length - 1)) break Label2;
          F.line = 94;
          a_620758461[chckIndx(xHEX60gensym166_620758468, 0, (a_620758461).length - 1)] = value_620758462;
          F.line = 71;
          xHEX60gensym166_620758468 = addInt(xHEX60gensym166_620758468, 1);
        }
    } while (false);
  framePtr = F.prev;

  
}

function nsuInitSkipTable(a_620758456, sub_620758457) {
  var F = {procname: "strutils.initSkipTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 1807;
    var m_620758458 = (sub_620758457).length;
    F.line = 1808;
    fill_620758459(a_620758456, m_620758458);
    Label1: do {
      F.line = 1810;
      var i_620758477 = 0;
      F.line = 117;
      var colontmp__436210597 = 0;
      F.line = 1810;
      colontmp__436210597 = subInt(m_620758458, 1);
      F.line = 119;
      var i_436210598 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210598 < colontmp__436210597)) break Label3;
            F.line = 1810;
            i_620758477 = i_436210598;
            F.line = 1810;
            a_620758456[chckIndx(sub_620758457[chckIndx(i_620758477, 0, (sub_620758457).length - 1)], 0, (a_620758456).length - 1)] = subInt(subInt(m_620758458, 1), i_620758477);
            F.line = 122;
            i_436210598 = addInt(i_436210598, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function nsuFindStrA(a_620758497, s_620758498, sub_620758499, start_620758500, last_620758501) {
    var Temporary1;

  var result_620758502 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1821;
    if ((last_620758501 == 0)) {
    Temporary1 = (s_620758498).length - 1;
    }
    else {
    Temporary1 = last_620758501;
    }
    
    var last_620758503 = Temporary1;
    F.line = 1822;
    var subLast_620758504 = subInt((sub_620758499).length, 1);
    if ((subLast_620758504 == -1)) {
    F.line = 1827;
    result_620758502 = start_620758500;
    break BeforeRet;
    }
    
    F.line = 1831;
    var skip_620758505 = start_620758500;
    Label2: do {
      F.line = 1833;
        Label3: while (true) {
        if (!(subLast_620758504 <= subInt(last_620758503, skip_620758505))) break Label3;
          F.line = 1834;
          var i_620758506 = subLast_620758504;
          Label4: do {
            F.line = 1835;
              Label5: while (true) {
              if (!(s_620758498[chckIndx(addInt(skip_620758505, i_620758506), 0, (s_620758498).length - 1)] == sub_620758499[chckIndx(i_620758506, 0, (sub_620758499).length - 1)])) break Label5;
                if ((i_620758506 == 0)) {
                F.line = 1837;
                result_620758502 = skip_620758505;
                break BeforeRet;
                }
                
                F.line = 1838;
                i_620758506 = subInt(i_620758506, 1);
              }
          } while (false);
          F.line = 1839;
          skip_620758505 = addInt(skip_620758505, a_620758497[chckIndx(s_620758498[chckIndx(addInt(skip_620758505, subLast_620758504), 0, (s_620758498).length - 1)], 0, (a_620758497).length - 1)]);
        }
    } while (false);
    F.line = 1840;
    result_620758502 = -1;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620758502;

}

function nsuFindStr(s_620758550, sub_620758551, start_620758552, last_620758553) {
  var result_620758554 = 0;

  var F = {procname: "strutils.find", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((subInt((s_620758550).length, start_620758552) < (sub_620758551).length)) {
    F.line = 1909;
    result_620758554 = -1;
    break BeforeRet;
    }
    
    if (((sub_620758551).length == 1)) {
    F.line = 1910;
    result_620758554 = nsuFindChar(s_620758550, sub_620758551[chckIndx(0, 0, (sub_620758551).length - 1)], start_620758552, last_620758553);
    break BeforeRet;
    }
    
    F.line = 1913;
    var a_620758556 = [new Int32Array(256)];
    F.line = 1914;
    nsuInitSkipTable(a_620758556[0], sub_620758551);
    F.line = 1915;
    result_620758554 = nsuFindStrA(a_620758556[0], s_620758550, sub_620758551, start_620758552, last_620758553);
  } while (false);
  framePtr = F.prev;

  return result_620758554;

}

function contains_620758679(s_620758680, sub_620758681) {
  var result_620758682 = false;

  var F = {procname: "strutils.contains", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 2070;
    result_620758682 = (0 <= nsuFindStr(s_620758680, sub_620758681, 0, 0));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620758682;

}

function initOrderedTable_956304800(initialSize_956304803) {
  var result_956304804 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "initOrderedTable.initOrderedTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym68_956304806 = slotsNeeded_570425386(chckRange(initialSize_956304803, 0, 2147483647));
    F.line = 167;
    result_956304804.counter = 0;
    F.line = 168;
    result_956304804.data = new Array(chckRange(correctSizeHEX60gensym68_956304806, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym68_956304806, 0, 2147483647) ; ++i) { result_956304804.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: {Field0: false, Field1: []}}; }    F.line = 170;
    result_956304804.first = -1;
    F.line = 171;
    result_956304804.last = -1;
  framePtr = F.prev;

  return result_956304804;

}

function kind_956304785(s_956304786) {
      var Temporary1;

  var result_956304787 = 0;

  var F = {procname: "PDA2CFG_separated_re.kind", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
      if (!allCharsInSet_620758395(s_956304786, ConstSet63)) Temporary1 = false; else {        Temporary1 = (2 <= (s_956304786).length);      }    if (Temporary1) {
    F.line = 168;
    result_956304787 = 0;
    }
    else {
    if (eqStrings(s_956304786, makeNimstrLit("\xCE\xB5"))) {
    F.line = 169;
    result_956304787 = 2;
    }
    else {
      F.line = 170;
      result_956304787 = 1;
    }
    }
  framePtr = F.prev;

  return result_956304787;

}

function rawGet_956304977(t_956304980, key_956304981, hc_956304982, hc_956304982_Idx) {
            var Temporary3;

  var result_956304983 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956304982[hc_956304982_Idx] = hash_637534657(key_956304981);
    if ((hc_956304982[hc_956304982_Idx] == 0)) {
    F.line = 66;
    hc_956304982[hc_956304982_Idx] = 314159265;
    }
    
    if (((t_956304980.data).length == 0)) {
    F.line = 48;
    result_956304983 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956305034 = (hc_956304982[hc_956304982_Idx] & (t_956304980.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956304980.data[chckIndx(h_956305034, 0, (t_956304980.data).length - 1)].Field0)) break Label2;
            if (!(t_956304980.data[chckIndx(h_956305034, 0, (t_956304980.data).length - 1)].Field0 == hc_956304982[hc_956304982_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956304980.data[chckIndx(h_956305034, 0, (t_956304980.data).length - 1)].Field2, key_956304981);            }          if (Temporary3) {
          F.line = 56;
          result_956304983 = h_956305034;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956305034 = nextTry_570425378(h_956305034, (t_956304980.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956304983 = subInt(-1, h_956305034);
  } while (false);
  framePtr = F.prev;

  return result_956304983;

}

function mustRehash_956305313(t_956305315) {
  var result_956305316 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_956305315.counter < (t_956305315.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_956305316 = ((mulInt((t_956305315.data).length, 2) < mulInt(t_956305315.counter, 3)) || (subInt((t_956305315.data).length, t_956305315.counter) < 4));
  framePtr = F.prev;

  return result_956305316;

}

function rawInsert_956305887(t_956305890, data_956305891, data_956305891_Idx, key_956305892, val_956305893, hc_956305894, h_956305895) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_956305891[data_956305891_Idx][chckIndx(h_956305895, 0, (data_956305891[data_956305891_Idx]).length - 1)].Field2 = nimCopy(null, key_956305892, NTI33554439);
    F.line = 23;
    data_956305891[data_956305891_Idx][chckIndx(h_956305895, 0, (data_956305891[data_956305891_Idx]).length - 1)].Field3 = nimCopy(data_956305891[data_956305891_Idx][chckIndx(h_956305895, 0, (data_956305891[data_956305891_Idx]).length - 1)].Field3, val_956305893, NTI956302992);
    F.line = 24;
    data_956305891[data_956305891_Idx][chckIndx(h_956305895, 0, (data_956305891[data_956305891_Idx]).length - 1)].Field0 = hc_956305894;
    F.line = 1275;
    data_956305891[data_956305891_Idx][chckIndx(h_956305895, 0, (data_956305891[data_956305891_Idx]).length - 1)].Field1 = -1;
    if ((t_956305890.first < 0)) {
    F.line = 1276;
    t_956305890.first = h_956305895;
    }
    
    if ((0 <= t_956305890.last)) {
    F.line = 1277;
    data_956305891[data_956305891_Idx][chckIndx(t_956305890.last, 0, (data_956305891[data_956305891_Idx]).length - 1)].Field1 = h_956305895;
    }
    
    F.line = 1278;
    t_956305890.last = h_956305895;
  framePtr = F.prev;

  
}

function enlarge_956305476(t_956305479) {
          var Temporary6;
          var Temporary7;

  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1281;
    var n_956305482 = [];
    F.line = 1282;
    n_956305482 = new Array(chckRange(mulInt((t_956305479.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_956305479.data).length, 2), 0, 2147483647) ; ++i) { n_956305482[i] = {Field0: 0, Field1: 0, Field2: [], Field3: {Field0: false, Field1: []}}; }    F.line = 1283;
    var h_956305534 = t_956305479.first;
    F.line = 1284;
    t_956305479.first = -1;
    F.line = 1285;
    t_956305479.last = -1;
    F.line = 1286;
    var Temporary1 = t_956305479.data; t_956305479.data = n_956305482; n_956305482 = Temporary1;    Label2: do {
      F.line = 1287;
        Label3: while (true) {
        if (!(0 <= h_956305534)) break Label3;
          F.line = 1288;
          var nxt_956305592 = n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field1;
          F.line = 1289;
          var eh_956305646 = n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field0;
          if (isFilled_570425375(eh_956305646)) {
          F.line = 1291;
          var j_956305650 = (eh_956305646 & (t_956305479.data).length - 1);
          Label4: do {
            F.line = 1292;
              Label5: while (true) {
              if (!isFilled_570425375(t_956305479.data[chckIndx(j_956305650, 0, (t_956305479.data).length - 1)].Field0)) break Label5;
                F.line = 1293;
                j_956305650 = nextTry_570425378(j_956305650, (t_956305479.data).length - 1);
              }
          } while (false);
          F.line = 1294;
          Temporary6 = n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field2;
          n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field2 = genericReset(n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field2, NTI33554439);
          Temporary7 = n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field3;
          n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field3 = genericReset(n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field3, NTI956302992);
          rawInsert_956305887(t_956305479, t_956305479, "data", Temporary6, Temporary7, n_956305482[chckIndx(h_956305534, 0, (n_956305482).length - 1)].Field0, j_956305650);
          }
          
          F.line = 1295;
          h_956305534 = nxt_956305592;
        }
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_956306169(t_956306172, key_956306173, hc_956306174) {
  var result_956306175 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_956306172.data).length == 0)) {
    F.line = 48;
    result_956306175 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956306226 = (hc_956306174 & (t_956306172.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956306172.data[chckIndx(h_956306226, 0, (t_956306172.data).length - 1)].Field0)) break Label2;
          if (((t_956306172.data[chckIndx(h_956306226, 0, (t_956306172.data).length - 1)].Field0 == hc_956306174) && eqStrings(t_956306172.data[chckIndx(h_956306226, 0, (t_956306172.data).length - 1)].Field2, key_956306173))) {
          F.line = 56;
          result_956306175 = h_956306226;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956306226 = nextTry_570425378(h_956306226, (t_956306172.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956306175 = subInt(-1, h_956306226);
  } while (false);
  framePtr = F.prev;

  return result_956306175;

}

function HEX5BHEX5DHEX3D_956304908(t_956304911, key_956304912, val_956304913) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    if (((t_956304911.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym74_956304963 = slotsNeeded_570425386(32);
    F.line = 167;
    t_956304911.counter = 0;
    F.line = 168;
    t_956304911.data = new Array(chckRange(correctSizeHEX60gensym74_956304963, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym74_956304963, 0, 2147483647) ; ++i) { t_956304911.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: {Field0: false, Field1: []}}; }    F.line = 170;
    t_956304911.first = -1;
    F.line = 171;
    t_956304911.last = -1;
    }
    
    F.line = 57;
    var hc_956304968 = [0];
    F.line = 58;
    var index_956305206 = rawGet_956304977(t_956304911, key_956304912, hc_956304968, 0);
    if ((0 <= index_956305206)) {
    F.line = 59;
    t_956304911.data[chckIndx(index_956305206, 0, (t_956304911.data).length - 1)].Field3 = nimCopy(t_956304911.data[chckIndx(index_956305206, 0, (t_956304911.data).length - 1)].Field3, val_956304913, NTI956302992);
    }
    else {
      if (((t_956304911.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym79_956305308 = slotsNeeded_570425386(32);
      F.line = 167;
      t_956304911.counter = 0;
      F.line = 168;
      t_956304911.data = new Array(chckRange(correctSizeHEX60gensym79_956305308, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym79_956305308, 0, 2147483647) ; ++i) { t_956304911.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: {Field0: false, Field1: []}}; }      F.line = 170;
      t_956304911.first = -1;
      F.line = 171;
      t_956304911.last = -1;
      }
      
      if (mustRehash_956305313(t_956304911)) {
      F.line = 49;
      enlarge_956305476(t_956304911);
      F.line = 50;
      index_956305206 = rawGetKnownHC_956306169(t_956304911, key_956304912, hc_956304968[0]);
      }
      
      F.line = 51;
      index_956305206 = subInt(-1, index_956305206);
      F.line = 52;
      rawInsert_956305887(t_956304911, t_956304911, "data", key_956304912, val_956304913, hc_956304968[0], index_956305206);
      F.line = 60;
      t_956304911.counter = addInt(t_956304911.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function toRulesflagged_956304797(mtx_956304798) {
  var result_956304799 = [({data: [], counter: 0, first: 0, last: 0})];

  var F = {procname: "PDA2CFG_separated_re.toRulesflagged", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 172;
    result_956304799[0] = nimCopy(result_956304799[0], initOrderedTable_956304800(32), NTI956303001);
    Label1: do {
      F.line = 173;
      var i_956304825 = 0;
      F.line = 173;
      var row_956304826 = [];
      F.line = 168;
      var i_436210622 = 0;
      F.line = 169;
      var L_436210623 = (mtx_956304798).length;
      Label2: do {
        F.line = 170;
          Label3: while (true) {
          if (!(i_436210622 < L_436210623)) break Label3;
            F.line = 173;
            i_956304825 = i_436210622;
            F.line = 173;
            row_956304826 = mtx_956304798[chckIndx(i_436210622, 0, (mtx_956304798).length - 1)];
            Label4: do {
              F.line = 174;
              var j_956304832 = 0;
              F.line = 174;
              var col_956304833 = [];
              F.line = 168;
              var i_436210619 = 0;
              F.line = 169;
              var L_436210620 = (row_956304826).length;
              Label5: do {
                F.line = 170;
                  Label6: while (true) {
                  if (!(i_436210619 < L_436210620)) break Label6;
                    F.line = 174;
                    j_956304832 = i_436210619;
                    F.line = 174;
                    col_956304833 = row_956304826[chckIndx(i_436210619, 0, (row_956304826).length - 1)];
                    F.line = 175;
                    var BS_956304838 = [];
                    Label7: do {
                      F.line = 176;
                      var b_956304839 = [];
                      F.line = 365;
                      var lastHEX60gensym34_436210614 = 0;
                      F.line = 366;
                      var splitsHEX60gensym34_436210615 = -1;
                      Label8: do {
                        F.line = 426;
                          Label9: while (true) {
                          if (!(lastHEX60gensym34_436210614 <= (col_956304833).length)) break Label9;
                            F.line = 369;
                            var firstHEX60gensym34_436210617 = lastHEX60gensym34_436210614;
                            Label10: do {
                              F.line = 370;
                                Label11: while (true) {
                                if (!((lastHEX60gensym34_436210614 < (col_956304833).length) && !((col_956304833[chckIndx(lastHEX60gensym34_436210614, 0, (col_956304833).length - 1)] == 43)))) break Label11;
                                  F.line = 371;
                                  lastHEX60gensym34_436210614 = addInt(lastHEX60gensym34_436210614, 1);
                                }
                            } while (false);
                            if ((splitsHEX60gensym34_436210615 == 0)) {
                            F.line = 372;
                            lastHEX60gensym34_436210614 = (col_956304833).length;
                            }
                            
                            F.line = 176;
                            b_956304839 = substr_33557906(col_956304833, firstHEX60gensym34_436210617, subInt(lastHEX60gensym34_436210614, 1));
                            if (eqStrings(b_956304839, [])) {
                            F.line = 177;
                            break Label7;
                            }
                            
                            F.line = 178;
                            var B_956304844 = [[]];
                            Label12: do {
                              F.line = 179;
                              var s_956304845 = [];
                              F.line = 365;
                              var lastHEX60gensym34_436210609 = 0;
                              F.line = 366;
                              var splitsHEX60gensym34_436210610 = -1;
                              Label13: do {
                                F.line = 426;
                                  Label14: while (true) {
                                  if (!(lastHEX60gensym34_436210609 <= (b_956304839).length)) break Label14;
                                    F.line = 369;
                                    var firstHEX60gensym34_436210612 = lastHEX60gensym34_436210609;
                                    Label15: do {
                                      F.line = 370;
                                        Label16: while (true) {
                                        if (!((lastHEX60gensym34_436210609 < (b_956304839).length) && !((b_956304839[chckIndx(lastHEX60gensym34_436210609, 0, (b_956304839).length - 1)] == 42)))) break Label16;
                                          F.line = 371;
                                          lastHEX60gensym34_436210609 = addInt(lastHEX60gensym34_436210609, 1);
                                        }
                                    } while (false);
                                    if ((splitsHEX60gensym34_436210610 == 0)) {
                                    F.line = 372;
                                    lastHEX60gensym34_436210609 = (b_956304839).length;
                                    }
                                    
                                    F.line = 179;
                                    s_956304845 = substr_33557906(b_956304839, firstHEX60gensym34_436210612, subInt(lastHEX60gensym34_436210609, 1));
                                    F.line = 179;
                                    switch (kind_956304785(s_956304845)) {
                                    case 0:
                                      F.line = 181;
                                      add_956303976(B_956304844, 0, [(makeNimstrLit("V") || []).concat(s_956304845 || [])]);
                                      break;
                                    default: 
                                      F.line = 182;
                                      add_956303976(B_956304844, 0, [nimCopy(null, s_956304845, NTI33554439)]);
                                      break;
                                    }
                                    if ((splitsHEX60gensym34_436210610 == 0)) {
                                    F.line = 374;
                                    break Label13;
                                    }
                                    
                                    F.line = 375;
                                    splitsHEX60gensym34_436210610 = subInt(splitsHEX60gensym34_436210610, 1);
                                    F.line = 376;
                                    lastHEX60gensym34_436210609 = addInt(lastHEX60gensym34_436210609, 1);
                                  }
                              } while (false);
                            } while (false);
                            F.line = 183;
                            var Temporary17 = nimCopy(null, B_956304844[0], NTI956302993);
                            BS_956304838.push(Temporary17);;
                            if ((splitsHEX60gensym34_436210615 == 0)) {
                            F.line = 374;
                            break Label8;
                            }
                            
                            F.line = 375;
                            splitsHEX60gensym34_436210615 = subInt(splitsHEX60gensym34_436210615, 1);
                            F.line = 376;
                            lastHEX60gensym34_436210614 = addInt(lastHEX60gensym34_436210614, 1);
                          }
                      } while (false);
                    } while (false);
                    F.line = 174;
                    HEX5BHEX5DHEX3D_956304908(result_956304799[0], (makeNimstrLit("V") || []).concat(HEX24_318767107(i_956304825) || [],HEX24_318767107(j_956304832) || []), {Field0: false, Field1: nimCopy(null, BS_956304838, NTI956303009)});
                    F.line = 172;
                    i_436210619 = addInt(i_436210619, 1);
                    if (!(((row_956304826).length == L_436210620))) {
                    F.line = 173;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 172;
            i_436210622 = addInt(i_436210622, 1);
            if (!(((mtx_956304798).length == L_436210623))) {
            F.line = 173;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956304799[0];

}

function len_956304268(t_956304271) {
  var result_956304272 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1509;
    result_956304272 = t_956304271.counter;
  framePtr = F.prev;

  return result_956304272;

}

function HEX3DHEX3D_956304566(x_956304568, y_956304569) {
  var result_956304570 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 301;
    var sameObject_956304577 = false;
    F.line = 302;
    sameObject_956304577 = x_956304568 === y_956304569
    if (sameObject_956304577) {
    F.line = 303;
    result_956304570 = true;
    break BeforeRet;
    }
    
    if (!(((x_956304568).length == (y_956304569).length))) {
    F.line = 306;
    result_956304570 = false;
    break BeforeRet;
    }
    
    Label1: do {
      F.line = 308;
      var i_956304591 = 0;
      F.line = 75;
      var colontmp__436210639 = 0;
      F.line = 308;
      colontmp__436210639 = subInt((x_956304568).length, 1);
      F.line = 90;
      var res_436210640 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436210640 <= colontmp__436210639)) break Label3;
            F.line = 308;
            i_956304591 = res_436210640;
            if (!(HEX3DHEX3D_956302613(x_956304568[chckIndx(i_956304591, 0, (x_956304568).length - 1)], y_956304569[chckIndx(i_956304591, 0, (y_956304569).length - 1)]))) {
            F.line = 310;
            result_956304570 = false;
            break BeforeRet;
            }
            
            F.line = 93;
            res_436210640 = addInt(res_436210640, 1);
          }
      } while (false);
    } while (false);
    F.line = 312;
    result_956304570 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_956304570;

}

function map_956304627(s_956304630, op_956304632) {
  var result_956304633 = [];

  var F = {procname: "map.map", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 385;
    result_956304633 = new Array(chckRange((s_956304630).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_956304630).length, 0, 2147483647) ; ++i) { result_956304633[i] = []; }    Label1: do {
      F.line = 386;
      var i_956304649 = 0;
      F.line = 117;
      var colontmp__436210643 = 0;
      F.line = 386;
      colontmp__436210643 = (s_956304630).length;
      F.line = 119;
      var i_436210644 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210644 < colontmp__436210643)) break Label3;
            F.line = 386;
            i_956304649 = i_436210644;
            F.line = 386;
            result_956304633[chckIndx(i_956304649, 0, (result_956304633).length - 1)] = nimCopy(null, op_956304632(s_956304630[chckIndx(i_956304649, 0, (s_956304630).length - 1)]), NTI33554439);
            F.line = 122;
            i_436210644 = addInt(i_436210644, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956304633;

}

function sshow_956304700(rsf_956304701) {
            
function HEX3Aanonymous_956304718(bd_956304721) {
              var result_956304724 = [];

              var F = {procname: "sshow.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
              framePtr = F;
                F.line = 163;
                F.line = 894;
                var sHEX60gensym59_956304728 = nimCopy(null, bd_956304721, NTI956302993);
                if (!((0 < (sHEX60gensym59_956304728).length))) {
                F.line = 895;
                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym59.len > 0` Can\'t fold empty sequences"));
                }
                
                F.line = 896;
                var resultHEX60gensym59_956304737 = [];
                F.line = 897;
                resultHEX60gensym59_956304737 = nimCopy(null, sHEX60gensym59_956304728[chckIndx(0, 0, (sHEX60gensym59_956304728).length - 1)], NTI33554439);
                Label1: do {
                  F.line = 898;
                  var iHEX60gensym59_956304745 = 0;
                  F.line = 117;
                  var colontmp__436210647 = 0;
                  F.line = 898;
                  colontmp__436210647 = (sHEX60gensym59_956304728).length;
                  F.line = 119;
                  var i_436210648 = 1;
                  Label2: do {
                    F.line = 120;
                      Label3: while (true) {
                      if (!(i_436210648 < colontmp__436210647)) break Label3;
                        F.line = 898;
                        iHEX60gensym59_956304745 = i_436210648;
                        F.line = 900;
                        var a_956304746 = nimCopy(null, resultHEX60gensym59_956304737, NTI33554439);
                        F.line = 901;
                        var b_956304747 = nimCopy(null, sHEX60gensym59_956304728[chckIndx(iHEX60gensym59_956304745, 0, (sHEX60gensym59_956304728).length - 1)], NTI33554439);
                        F.line = 163;
                        resultHEX60gensym59_956304737 = nimCopy(null, (a_956304746 || []).concat(makeNimstrLit(" * ") || [],b_956304747 || []), NTI33554439);
                        F.line = 122;
                        i_436210648 = addInt(i_436210648, 1);
                      }
                  } while (false);
                } while (false);
                result_956304724 = nimCopy(null, resultHEX60gensym59_956304737, NTI33554439);
              framePtr = F.prev;

              return result_956304724;

            }

  var result_956304702 = [];

  var F = {procname: "PDA2CFG_separated_re.sshow", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 160;
      var k_956304707 = [];
      F.line = 160;
      var v_956304708 = {Field0: false, Field1: []};
      F.line = 1717;
      var L_436210634 = len_956304268(rsf_956304701);
      if ((0 < rsf_956304701.counter)) {
      F.line = 1299;
      var h_436210635 = rsf_956304701.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210635)) break Label3;
            F.line = 1301;
            var nxt_436210637 = rsf_956304701.data[chckIndx(h_436210635, 0, (rsf_956304701.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956304701.data[chckIndx(h_436210635, 0, (rsf_956304701.data).length - 1)].Field0)) {
            F.line = 160;
            k_956304707 = rsf_956304701.data[chckIndx(h_436210635, 0, (rsf_956304701.data).length - 1)].Field2;
            F.line = 160;
            v_956304708 = nimCopy(v_956304708, rsf_956304701.data[chckIndx(h_436210635, 0, (rsf_956304701.data).length - 1)].Field3, NTI956302992);
            F.line = 161;
            var line_956304709 = (k_956304707 || []).concat(makeNimstrLit(" [") || [],nimBoolToStr(v_956304708.Field0) || [],makeNimstrLit("] -> ") || []);
            if (!(HEX3DHEX3D_956304566(v_956304708.Field1, []))) {
            F.line = 163;
            F.line = 894;
            var sHEX60gensym63_956304758 = map_956304627(v_956304708.Field1, HEX3Aanonymous_956304718);
            if (!((0 < (sHEX60gensym63_956304758).length))) {
            F.line = 895;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym63.len > 0` Can\'t fold empty sequences"));
            }
            
            F.line = 896;
            var resultHEX60gensym63_956304767 = [];
            F.line = 897;
            resultHEX60gensym63_956304767 = nimCopy(null, sHEX60gensym63_956304758[chckIndx(0, 0, (sHEX60gensym63_956304758).length - 1)], NTI33554439);
            Label4: do {
              F.line = 898;
              var iHEX60gensym63_956304775 = 0;
              F.line = 117;
              var colontmp__436210631 = 0;
              F.line = 898;
              colontmp__436210631 = (sHEX60gensym63_956304758).length;
              F.line = 119;
              var i_436210632 = 1;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436210632 < colontmp__436210631)) break Label6;
                    F.line = 898;
                    iHEX60gensym63_956304775 = i_436210632;
                    F.line = 900;
                    var a_956304776 = nimCopy(null, resultHEX60gensym63_956304767, NTI33554439);
                    F.line = 901;
                    var b_956304777 = nimCopy(null, sHEX60gensym63_956304758[chckIndx(iHEX60gensym63_956304775, 0, (sHEX60gensym63_956304758).length - 1)], NTI33554439);
                    F.line = 163;
                    resultHEX60gensym63_956304767 = nimCopy(null, (a_956304776 || []).concat(makeNimstrLit(" | ") || [],b_956304777 || []), NTI33554439);
                    F.line = 122;
                    i_436210632 = addInt(i_436210632, 1);
                  }
              } while (false);
            } while (false);
            line_956304709.push.apply(line_956304709, resultHEX60gensym63_956304767);;
            }
            
            F.line = 160;
            result_956304702.push.apply(result_956304702, (line_956304709 || []).concat(makeNimstrLit("\x0A") || []));;
            if (!((len_956304268(rsf_956304701) == L_436210634))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210635 = nxt_436210637;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  return result_956304702;

}

function any_956306861(s_956306863, pred_956306865) {
  var result_956306866 = false;

  var F = {procname: "any.any", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 736;
    Label1: do {
      F.line = 748;
      var i_956306878 = [];
      F.line = 8;
      var i_436210658 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210658 < (s_956306863).length)) break Label3;
            F.line = 748;
            i_956306878 = s_956306863[chckIndx(i_436210658, 0, (s_956306863).length - 1)];
            if (pred_956306865(i_956306878)) {
            F.line = 750;
            result_956306866 = true;
            break BeforeRet;
            }
            
            F.line = 11;
            i_436210658 = addInt(i_436210658, 1);
          }
      } while (false);
    } while (false);
    result_956306866 = false;
  } while (false);
  framePtr = F.prev;

  return result_956306866;

}

function any_956306423(s_956306425, pred_956306427) {
  var result_956306428 = false;

  var F = {procname: "any.any", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 736;
    Label1: do {
      F.line = 748;
      var i_956306432 = [];
      F.line = 8;
      var i_436210662 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210662 < (s_956306425).length)) break Label3;
            F.line = 748;
            i_956306432 = s_956306425[chckIndx(i_436210662, 0, (s_956306425).length - 1)];
            if (pred_956306427(i_956306432)) {
            F.line = 750;
            result_956306428 = true;
            break BeforeRet;
            }
            
            F.line = 11;
            i_436210662 = addInt(i_436210662, 1);
          }
      } while (false);
    } while (false);
    result_956306428 = false;
  } while (false);
  framePtr = F.prev;

  return result_956306428;

}

function nsuIsUpperAsciiChar(c_620757053) {
  var result_620757054 = false;

  var F = {procname: "strutils.isUpperAscii", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 186;
    result_620757054 = (ConstSet64[c_620757053] != undefined);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_620757054;

}

function isVariable_956306413(s_956306414) {
  var result_956306415 = false;

  var F = {procname: "PDA2CFG_separated_re.isVariable", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 204;
    result_956306415 = nsuIsUpperAsciiChar(s_956306414[chckIndx(0, 0, (s_956306414).length - 1)]);
  framePtr = F.prev;

  return result_956306415;

}

function containsVariable_956306416(b_956306417) {
    
function HEX3Aanonymous_956306419(x_956306420) {
      var result_956306421 = false;

      var F = {procname: "containsVariable.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
      framePtr = F;
      BeforeRet: do {
        F.line = 208;
        result_956306421 = isVariable_956306413(x_956306420);
        break BeforeRet;
      } while (false);
      framePtr = F.prev;

      return result_956306421;

    }

  var result_956306418 = false;

  var F = {procname: "PDA2CFG_separated_re.containsVariable", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 208;
    result_956306418 = any_956306423(b_956306417, HEX3Aanonymous_956306419);
  framePtr = F.prev;

  return result_956306418;

}

function isEmptyBody_956306451(b_956306452) {
  var result_956306453 = false;

  var F = {procname: "PDA2CFG_separated_re.isEmptyBody", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 210;
    result_956306453 = ((b_956306452).length == 0);
  framePtr = F.prev;

  return result_956306453;

}

function all_956306844(s_956306846, pred_956306848) {
  var result_956306849 = false;

  var F = {procname: "all.all", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 694;
    Label1: do {
      F.line = 706;
      var i_956306853 = [];
      F.line = 8;
      var i_436210665 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210665 < (s_956306846).length)) break Label3;
            F.line = 706;
            i_956306853 = s_956306846[chckIndx(i_436210665, 0, (s_956306846).length - 1)];
            if (!(pred_956306848(i_956306853))) {
            F.line = 708;
            result_956306849 = false;
            break BeforeRet;
            }
            
            F.line = 11;
            i_436210665 = addInt(i_436210665, 1);
          }
      } while (false);
    } while (false);
    result_956306849 = true;
  } while (false);
  framePtr = F.prev;

  return result_956306849;

}

function rawGet_956306521(t_956306524, key_956306525, hc_956306526, hc_956306526_Idx) {
            var Temporary3;

  var result_956306527 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956306526[hc_956306526_Idx] = hash_637534657(key_956306525);
    if ((hc_956306526[hc_956306526_Idx] == 0)) {
    F.line = 66;
    hc_956306526[hc_956306526_Idx] = 314159265;
    }
    
    if (((t_956306524.data).length == 0)) {
    F.line = 48;
    result_956306527 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956306578 = (hc_956306526[hc_956306526_Idx] & (t_956306524.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956306524.data[chckIndx(h_956306578, 0, (t_956306524.data).length - 1)].Field0)) break Label2;
            if (!(t_956306524.data[chckIndx(h_956306578, 0, (t_956306524.data).length - 1)].Field0 == hc_956306526[hc_956306526_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956306524.data[chckIndx(h_956306578, 0, (t_956306524.data).length - 1)].Field2, key_956306525);            }          if (Temporary3) {
          F.line = 56;
          result_956306527 = h_956306578;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956306578 = nextTry_570425378(h_956306578, (t_956306524.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956306527 = subInt(-1, h_956306578);
  } while (false);
  framePtr = F.prev;

  return result_956306527;

}

function HEX5BHEX5D_956306514(t_956306517, key_956306518) {
  var result_956306519 = {Field0: false, Field1: []};

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym87_956306520 = [0];
    F.line = 243;
    var indexHEX60gensym87_956306741 = rawGet_956306521(t_956306517, key_956306518, hcHEX60gensym87_956306520, 0);
    if ((0 <= indexHEX60gensym87_956306741)) {
    F.line = 244;
    result_956306519 = nimCopy(result_956306519, t_956306517.data[chckIndx(indexHEX60gensym87_956306741, 0, (t_956306517.data).length - 1)].Field3, NTI956302992);
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_956306518);
    }
    
  framePtr = F.prev;

  return result_956306519;

}

function isGenerativeSymb_956306457(rsf_956306458, s_956306459) {
  var result_956306460 = false;

  var F = {procname: "PDA2CFG_separated_re.isGenerativeSymb", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 212;
    result_956306460 = (HEX5BHEX5D_956306514(rsf_956306458, s_956306459).Field0 == true);
  framePtr = F.prev;

  return result_956306460;

}

function isGenerativeBody_956306798(rsf_956306799, b_956306800) {
      
function HEX3Aanonymous_956306802(x_956306815) {
        var result_956306818 = false;

        var F = {procname: "isGenerativeBody.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
        framePtr = F;
          F.line = 217;
          result_956306818 = isVariable_956306413(x_956306815);
        framePtr = F.prev;

        return result_956306818;

      }
      rsf_956306799 = nimCopy(null, rsf_956306799, NTI956303001);
      
function HEX3Aanonymous_956306841(x_956306842) {
        var result_956306843 = false;

        var F = {procname: "isGenerativeBody.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
        framePtr = F;
        BeforeRet: do {
          F.line = 217;
          result_956306843 = isGenerativeSymb_956306457(rsf_956306799, x_956306842);
          break BeforeRet;
        } while (false);
        framePtr = F.prev;

        return result_956306843;

      }

  var result_956306801 = false;

  var F = {procname: "PDA2CFG_separated_re.isGenerativeBody", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    if (!(containsVariable_956306416(b_956306800))) {
    F.line = 215;
    result_956306801 = !(isEmptyBody_956306451(b_956306800));
    }
    else {
      F.line = 217;
      result_956306801 = all_956306844(filter_956306820(b_956306800, HEX3Aanonymous_956306802), HEX3Aanonymous_956306841);
    }
    
  framePtr = F.prev;

  return result_956306801;

}

function isGenerativeSeqB_956306854(rsf_956306855, sb_956306856) {
    rsf_956306855 = nimCopy(null, rsf_956306855, NTI956303001);
    
function HEX3Aanonymous_956306858(X_956306859) {
      var result_956306860 = false;

      var F = {procname: "isGenerativeSeqB.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
      framePtr = F;
      BeforeRet: do {
        F.line = 219;
        result_956306860 = isGenerativeBody_956306798(rsf_956306855, X_956306859);
        break BeforeRet;
      } while (false);
      framePtr = F.prev;

      return result_956306860;

    }

  var result_956306857 = false;

  var F = {procname: "PDA2CFG_separated_re.isGenerativeSeqB", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 219;
    result_956306857 = any_956306861(sb_956306856, HEX3Aanonymous_956306858);
  framePtr = F.prev;

  return result_956306857;

}

function HEX5BHEX5D_956306950(t_956306953, key_956306954) {
  var result_956306955 = null;

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym89_956306956 = [0];
    F.line = 243;
    var indexHEX60gensym89_956306963 = rawGet_956306521(t_956306953, key_956306954, hcHEX60gensym89_956306956, 0);
    if ((0 <= indexHEX60gensym89_956306963)) {
    F.line = 244;
    result_956306955 = t_956306953.data[chckIndx(indexHEX60gensym89_956306963, 0, (t_956306953.data).length - 1)].Field3;
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_956306954);
    }
    
  framePtr = F.prev;

  return result_956306955;

}

function compGenerative_956306888(rsf_956306889) {
                    var Temporary6;

  var F = {procname: "PDA2CFG_separated_re.compGenerative", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 222;
    var isChanging_956306890 = true;
    Label1: do {
      F.line = 223;
        Label2: while (true) {
        if (!isChanging_956306890) break Label2;
          F.line = 224;
          isChanging_956306890 = false;
          Label3: do {
            F.line = 225;
            var h_956306895 = [];
            F.line = 225;
            var f_bs_956306896 = {Field0: false, Field1: []};
            F.line = 1717;
            var L_436210652 = len_956304268(rsf_956306889);
            if ((0 < rsf_956306889.counter)) {
            F.line = 1299;
            var h_436210653 = rsf_956306889.first;
            Label4: do {
              F.line = 1300;
                Label5: while (true) {
                if (!(0 <= h_436210653)) break Label5;
                  F.line = 1301;
                  var nxt_436210655 = rsf_956306889.data[chckIndx(h_436210653, 0, (rsf_956306889.data).length - 1)].Field1;
                  if (isFilled_570425375(rsf_956306889.data[chckIndx(h_436210653, 0, (rsf_956306889.data).length - 1)].Field0)) {
                  F.line = 225;
                  h_956306895 = rsf_956306889.data[chckIndx(h_436210653, 0, (rsf_956306889.data).length - 1)].Field2;
                  F.line = 225;
                  f_bs_956306896 = nimCopy(f_bs_956306896, rsf_956306889.data[chckIndx(h_436210653, 0, (rsf_956306889.data).length - 1)].Field3, NTI956302992);
                    if (!(f_bs_956306896.Field0 == false)) Temporary6 = false; else {                      Temporary6 = isGenerativeSeqB_956306854(rsf_956306889, f_bs_956306896.Field1);                    }                  if (Temporary6) {
                  F.line = 227;
                  HEX5BHEX5D_956306950(rsf_956306889, h_956306895).Field0 = true;
                  F.line = 228;
                  isChanging_956306890 = true;
                  }
                  
                  if (!((len_956304268(rsf_956306889) == L_436210652))) {
                  F.line = 1720;
                  failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  F.line = 1304;
                  h_436210653 = nxt_436210655;
                }
            } while (false);
            }
            
          } while (false);
        }
    } while (false);
  framePtr = F.prev;

  
}

function newSeq_956307078(len_956307080) {
  var result_956307081 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_956307081 = new Array(len_956307080); for (var i = 0 ; i < len_956307080 ; ++i) { result_956307081[i] = []; }  framePtr = F.prev;

  return result_956307081;

}

function filter_956307072(s_956307074, pred_956307076) {
  var result_956307077 = [];

  var F = {procname: "filter.filter", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 482;
    result_956307077 = nimCopy(null, newSeq_956307078(0), NTI956304592);
    Label1: do {
      F.line = 483;
      var i_956307093 = 0;
      F.line = 117;
      var colontmp__436210674 = 0;
      F.line = 483;
      colontmp__436210674 = (s_956307074).length;
      F.line = 119;
      var i_436210675 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210675 < colontmp__436210674)) break Label3;
            F.line = 483;
            i_956307093 = i_436210675;
            if (pred_956307076(s_956307074[chckIndx(i_956307093, 0, (s_956307074).length - 1)])) {
            F.line = 485;
            var Temporary4 = nimCopy(null, s_956307074[chckIndx(i_956307093, 0, (s_956307074).length - 1)], NTI956302993);
            result_956307077.push(Temporary4);;
            }
            
            F.line = 122;
            i_436210675 = addInt(i_436210675, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956307077;

}

function delNongeneBody_956307029(rsf_956307030) {
            rsf_956307030 = nimCopy(null, rsf_956307030, NTI956303001);
            
function HEX3Aanonymous_956307064(x_956307067) {
              var result_956307070 = false;

              var F = {procname: "delNongeneBody.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
              framePtr = F;
                F.line = 250;
                result_956307070 = isGenerativeBody_956306798(rsf_956307030, x_956307067);
              framePtr = F.prev;

              return result_956307070;

            }

  var result_956307031 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "PDA2CFG_separated_re.delNongeneBody", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 248;
    var newrsf_956307036 = [initOrderedTable_956304800(32)];
    Label1: do {
      F.line = 249;
      var k_956307041 = [];
      F.line = 249;
      var v_956307042 = {Field0: false, Field1: []};
      F.line = 1717;
      var L_436210669 = len_956304268(rsf_956307030);
      if ((0 < rsf_956307030.counter)) {
      F.line = 1299;
      var h_436210670 = rsf_956307030.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210670)) break Label3;
            F.line = 1301;
            var nxt_436210672 = rsf_956307030.data[chckIndx(h_436210670, 0, (rsf_956307030.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956307030.data[chckIndx(h_436210670, 0, (rsf_956307030.data).length - 1)].Field0)) {
            F.line = 249;
            k_956307041 = rsf_956307030.data[chckIndx(h_436210670, 0, (rsf_956307030.data).length - 1)].Field2;
            F.line = 249;
            v_956307042 = nimCopy(v_956307042, rsf_956307030.data[chckIndx(h_436210670, 0, (rsf_956307030.data).length - 1)].Field3, NTI956302992);
            F.line = 249;
            HEX5BHEX5DHEX3D_956304908(newrsf_956307036[0], k_956307041, {Field0: v_956307042.Field0, Field1: filter_956307072(v_956307042.Field1, HEX3Aanonymous_956307064)});
            if (!((len_956304268(rsf_956307030) == L_436210669))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210670 = nxt_436210672;
          }
      } while (false);
      }
      
    } while (false);
    F.line = 251;
    result_956307031 = nimCopy(result_956307031, newrsf_956307036[0], NTI956303001);
  framePtr = F.prev;

  return result_956307031;

}

function delNongeneSymb_956307153(rsf_956307154) {
  var result_956307155 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "PDA2CFG_separated_re.delNongeneSymb", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 272;
    var newrsf_956307160 = [initOrderedTable_956304800(32)];
    Label1: do {
      F.line = 273;
      var k_956307165 = [];
      F.line = 273;
      var v_956307166 = {Field0: false, Field1: []};
      F.line = 1717;
      var L_436210678 = len_956304268(rsf_956307154);
      if ((0 < rsf_956307154.counter)) {
      F.line = 1299;
      var h_436210679 = rsf_956307154.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210679)) break Label3;
            F.line = 1301;
            var nxt_436210681 = rsf_956307154.data[chckIndx(h_436210679, 0, (rsf_956307154.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956307154.data[chckIndx(h_436210679, 0, (rsf_956307154.data).length - 1)].Field0)) {
            F.line = 273;
            k_956307165 = rsf_956307154.data[chckIndx(h_436210679, 0, (rsf_956307154.data).length - 1)].Field2;
            F.line = 273;
            v_956307166 = nimCopy(v_956307166, rsf_956307154.data[chckIndx(h_436210679, 0, (rsf_956307154.data).length - 1)].Field3, NTI956302992);
            if ((v_956307166.Field0 == true)) {
            F.line = 275;
            HEX5BHEX5DHEX3D_956304908(newrsf_956307160[0], k_956307165, {Field0: v_956307166.Field0, Field1: nimCopy(null, v_956307166.Field1, NTI956303009)});
            }
            
            if (!((len_956304268(rsf_956307154) == L_436210678))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210679 = nxt_436210681;
          }
      } while (false);
      }
      
    } while (false);
    F.line = 276;
    result_956307155 = nimCopy(result_956307155, newrsf_956307160[0], NTI956303001);
  framePtr = F.prev;

  return result_956307155;

}

function isTerminal_956307213(s_956307214) {
    var Temporary1;

  var result_956307215 = false;

  var F = {procname: "PDA2CFG_separated_re.isTerminal", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 290;
    if (!!(isVariable_956306413(s_956307214))) Temporary1 = false; else {      Temporary1 = !(eqStrings(s_956307214, makeNimstrLit("\xCE\xB5")));    }    result_956307215 = Temporary1;
  framePtr = F.prev;

  return result_956307215;

}

function isEpshilonSymb_956307216(rsf_956307217, s_956307218) {
  var result_956307219 = false;

  var F = {procname: "PDA2CFG_separated_re.isEpshilonSymb", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 292;
    result_956307219 = HEX3DHEX3D_956304566(HEX5BHEX5D_956306514(rsf_956307217, s_956307218).Field1, [[makeNimstrLit("\xCE\xB5")]]);
  framePtr = F.prev;

  return result_956307219;

}

function add_956308992(x_956308994, x_956308994_Idx, y_956308995) {
    var Temporary1;

  var F = {procname: "add.add", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 1308;
    var xl_956308999 = (x_956308994[x_956308994_Idx]).length;
    F.line = 1309;
    if (x_956308994[x_956308994_Idx].length < (Temporary1 = chckRange(addInt(xl_956308999, (y_956308995).length), 0, 2147483647), Temporary1)) { for (var i = x_956308994[x_956308994_Idx].length ; i < Temporary1 ; ++i) x_956308994[x_956308994_Idx].push([]); }
               else { x_956308994[x_956308994_Idx].length = Temporary1; };
    Label2: do {
      F.line = 1310;
      var i_956309014 = 0;
      F.line = 75;
      var colontmp__436210683 = 0;
      F.line = 1310;
      colontmp__436210683 = (y_956308995).length - 1;
      F.line = 90;
      var res_436210684 = 0;
      Label3: do {
        F.line = 91;
          Label4: while (true) {
          if (!(res_436210684 <= colontmp__436210683)) break Label4;
            F.line = 1310;
            i_956309014 = res_436210684;
            F.line = 1310;
            x_956308994[x_956308994_Idx][chckIndx(addInt(xl_956308999, i_956309014), 0, (x_956308994[x_956308994_Idx]).length - 1)] = nimCopy(null, y_956308995[chckIndx(i_956309014, 0, (y_956308995).length - 1)], NTI956302993);
            F.line = 93;
            res_436210684 = addInt(res_436210684, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function count_436210014(s_436210016, x_436210017) {
  var result_436210018 = 0;

  var F = {procname: "count.count", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 150;
      var itm_436210022 = [];
      F.line = 8;
      var i_436210687 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210687 < (s_436210016).length)) break Label3;
            F.line = 150;
            itm_436210022 = s_436210016[chckIndx(i_436210687, 0, (s_436210016).length - 1)];
            if (HEX3DHEX3D_956302613(itm_436210022, x_436210017)) {
            F.line = 152;
            result_436210018 = addInt(result_436210018, 1);
            }
            
            F.line = 11;
            i_436210687 = addInt(i_436210687, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436210018;

}

function HEX26_436210060(x_436210062, y_436210063) {
  var result_436210064 = [];

  var F = {procname: "&.&", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 1685;
    result_436210064 = new Array(chckRange(addInt((x_436210062).length, (y_436210063).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_436210062).length, (y_436210063).length), 0, 2147483647) ; ++i) { result_436210064[i] = []; }    Label1: do {
      F.line = 1686;
      var i_436210082 = 0;
      F.line = 75;
      var colontmp__436210690 = 0;
      F.line = 1686;
      colontmp__436210690 = subInt((x_436210062).length, 1);
      F.line = 90;
      var res_436210691 = 0;
      Label2: do {
        F.line = 91;
          Label3: while (true) {
          if (!(res_436210691 <= colontmp__436210690)) break Label3;
            F.line = 1686;
            i_436210082 = res_436210691;
            F.line = 1686;
            result_436210064[chckIndx(i_436210082, 0, (result_436210064).length - 1)] = nimCopy(null, x_436210062[chckIndx(i_436210082, 0, (x_436210062).length - 1)], NTI956302993);
            F.line = 93;
            res_436210691 = addInt(res_436210691, 1);
          }
      } while (false);
    } while (false);
    Label4: do {
      F.line = 1688;
      var i_436210090 = 0;
      F.line = 75;
      var colontmp__436210694 = 0;
      F.line = 1688;
      colontmp__436210694 = subInt((y_436210063).length, 1);
      F.line = 90;
      var res_436210695 = 0;
      Label5: do {
        F.line = 91;
          Label6: while (true) {
          if (!(res_436210695 <= colontmp__436210694)) break Label6;
            F.line = 1688;
            i_436210090 = res_436210695;
            F.line = 1688;
            result_436210064[chckIndx(addInt(i_436210090, (x_436210062).length), 0, (result_436210064).length - 1)] = nimCopy(null, y_436210063[chckIndx(i_436210090, 0, (y_436210063).length - 1)], NTI956302993);
            F.line = 93;
            res_436210695 = addInt(res_436210695, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436210064;

}

function setflagsfalse_956307299(rsf_956307300) {
  var result_956307301 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "PDA2CFG_separated_re.setflagsfalse", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 308;
    var newrsf_956307306 = [initOrderedTable_956304800(32)];
    Label1: do {
      F.line = 309;
      var k_956307311 = [];
      F.line = 309;
      var v_956307312 = {Field0: false, Field1: []};
      F.line = 1717;
      var L_436210698 = len_956304268(rsf_956307300);
      if ((0 < rsf_956307300.counter)) {
      F.line = 1299;
      var h_436210699 = rsf_956307300.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210699)) break Label3;
            F.line = 1301;
            var nxt_436210701 = rsf_956307300.data[chckIndx(h_436210699, 0, (rsf_956307300.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956307300.data[chckIndx(h_436210699, 0, (rsf_956307300.data).length - 1)].Field0)) {
            F.line = 309;
            k_956307311 = rsf_956307300.data[chckIndx(h_436210699, 0, (rsf_956307300.data).length - 1)].Field2;
            F.line = 309;
            v_956307312 = nimCopy(v_956307312, rsf_956307300.data[chckIndx(h_436210699, 0, (rsf_956307300.data).length - 1)].Field3, NTI956302992);
            F.line = 309;
            HEX5BHEX5DHEX3D_956304908(newrsf_956307306[0], k_956307311, {Field0: false, Field1: nimCopy(null, v_956307312.Field1, NTI956303009)});
            if (!((len_956304268(rsf_956307300) == L_436210698))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210699 = nxt_436210701;
          }
      } while (false);
      }
      
    } while (false);
    F.line = 311;
    result_956307301 = nimCopy(result_956307301, newrsf_956307306[0], NTI956303001);
  framePtr = F.prev;

  return result_956307301;

}

function startSyms_956307359(iniSs_956307360, accSs_956307361) {
  var result_956307362 = [];

  var F = {procname: "PDA2CFG_separated_re.startSyms", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 325;
      var i_956307366 = 0;
      F.line = 235;
      var i_436210707 = 0;
      F.line = 236;
      var L_436210708 = (iniSs_956307360).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436210707 < L_436210708)) break Label3;
            F.line = 325;
            i_956307366 = iniSs_956307360[chckIndx(i_436210707, 0, (iniSs_956307360).length - 1)];
            Label4: do {
              F.line = 326;
              var a_956307370 = 0;
              F.line = 235;
              var i_436210704 = 0;
              F.line = 236;
              var L_436210705 = (accSs_956307361).length;
              Label5: do {
                F.line = 237;
                  Label6: while (true) {
                  if (!(i_436210704 < L_436210705)) break Label6;
                    F.line = 326;
                    a_956307370 = accSs_956307361[chckIndx(i_436210704, 0, (accSs_956307361).length - 1)];
                    F.line = 326;
                    result_956307362.push((makeNimstrLit("V") || []).concat(HEX24_318767107(i_956307366) || [],HEX24_318767107(a_956307370) || []));;
                    F.line = 239;
                    i_436210704 = addInt(i_436210704, 1);
                    if (!(((accSs_956307361).length == L_436210705))) {
                    F.line = 240;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 239;
            i_436210707 = addInt(i_436210707, 1);
            if (!(((iniSs_956307360).length == L_436210708))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956307362;

}

function hasKey_436210245(t_436210248, key_436210249) {
  var result_436210250 = false;

  var F = {procname: "hasKey.hasKey", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1413;
    var hc_436210251 = [0];
    F.line = 1414;
    result_436210250 = (0 <= rawGet_956304977(t_436210248, key_436210249, hc_436210251, 0));
  framePtr = F.prev;

  return result_436210250;

}

function DFSfrom_956307375(rsf_956307376, start_956307377) {
              
function HEX3Aanonymous_956307573(x_956307586) {
                var result_956307589 = false;

                var F = {procname: "DFSfrom.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
                framePtr = F;
                  F.line = 332;
                  result_956307589 = isVariable_956306413(x_956307586);
                framePtr = F.prev;

                return result_956307589;

              }

  var F = {procname: "PDA2CFG_separated_re.DFSfrom", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((HEX5BHEX5D_956306950(rsf_956307376, start_956307377).Field0 == true)) {
    F.line = 329;
    break BeforeRet;
    }
    
    F.line = 330;
    HEX5BHEX5D_956306950(rsf_956307376, start_956307377).Field0 = true;
    Label1: do {
      F.line = 331;
      var b_956307572 = [];
      F.line = 233;
      var colontmp__436210722 = [];
      F.line = 331;
      colontmp__436210722 = HEX5BHEX5D_956306950(rsf_956307376, start_956307377).Field1;
      F.line = 235;
      var i_436210723 = 0;
      F.line = 236;
      var L_436210724 = (colontmp__436210722).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436210723 < L_436210724)) break Label3;
            F.line = 331;
            b_956307572 = colontmp__436210722[chckIndx(i_436210723, 0, (colontmp__436210722).length - 1)];
            Label4: do {
              F.line = 332;
              var s_956307604 = [];
              F.line = 437;
              var colontmp__436210712 = null;
              F.line = 332;
              colontmp__436210712 = HEX3Aanonymous_956307573;
              Label5: do {
                F.line = 456;
                var i_436210718 = 0;
                F.line = 117;
                var colontmp__436210719 = 0;
                F.line = 456;
                colontmp__436210719 = (b_956307572).length;
                F.line = 119;
                var i_436210720 = 0;
                Label6: do {
                  F.line = 120;
                    Label7: while (true) {
                    if (!(i_436210720 < colontmp__436210719)) break Label7;
                      F.line = 456;
                      i_436210718 = i_436210720;
                      if (colontmp__436210712(b_956307572[chckIndx(i_436210718, 0, (b_956307572).length - 1)])) {
                      F.line = 332;
                      s_956307604 = b_956307572[chckIndx(i_436210718, 0, (b_956307572).length - 1)];
                      F.line = 332;
                      DFSfrom_956307375(rsf_956307376, s_956307604);
                      }
                      
                      F.line = 122;
                      i_436210720 = addInt(i_436210720, 1);
                    }
                } while (false);
              } while (false);
            } while (false);
            F.line = 239;
            i_436210723 = addInt(i_436210723, 1);
            if (!(((colontmp__436210722).length == L_436210724))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  } while (false);
  framePtr = F.prev;

  
}

function delFalseflagSymb_956307605(rsf_956307606) {
  var result_956307607 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "PDA2CFG_separated_re.delFalseflagSymb", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 335;
    var newrsf_956307612 = [initOrderedTable_956304800(32)];
    Label1: do {
      F.line = 336;
      var k_956307617 = [];
      F.line = 336;
      var v_956307618 = {Field0: false, Field1: []};
      F.line = 1717;
      var L_436210727 = len_956304268(rsf_956307606);
      if ((0 < rsf_956307606.counter)) {
      F.line = 1299;
      var h_436210728 = rsf_956307606.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210728)) break Label3;
            F.line = 1301;
            var nxt_436210730 = rsf_956307606.data[chckIndx(h_436210728, 0, (rsf_956307606.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956307606.data[chckIndx(h_436210728, 0, (rsf_956307606.data).length - 1)].Field0)) {
            F.line = 336;
            k_956307617 = rsf_956307606.data[chckIndx(h_436210728, 0, (rsf_956307606.data).length - 1)].Field2;
            F.line = 336;
            v_956307618 = nimCopy(v_956307618, rsf_956307606.data[chckIndx(h_436210728, 0, (rsf_956307606.data).length - 1)].Field3, NTI956302992);
            if ((v_956307618.Field0 == true)) {
            F.line = 338;
            HEX5BHEX5DHEX3D_956304908(newrsf_956307612[0], k_956307617, {Field0: v_956307618.Field0, Field1: nimCopy(null, v_956307618.Field1, NTI956303009)});
            }
            
            if (!((len_956304268(rsf_956307606) == L_436210727))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210728 = nxt_436210730;
          }
      } while (false);
      }
      
    } while (false);
    F.line = 339;
    result_956307607 = nimCopy(result_956307607, newrsf_956307612[0], NTI956303001);
  framePtr = F.prev;

  return result_956307607;

}

function initOrderedTable_956308171(initialSize_956308174) {
  var result_956308175 = ({data: [], counter: 0, first: 0, last: 0});

  var F = {procname: "initOrderedTable.initOrderedTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym113_956308177 = slotsNeeded_570425386(chckRange(initialSize_956308174, 0, 2147483647));
    F.line = 167;
    result_956308175.counter = 0;
    F.line = 168;
    result_956308175.data = new Array(chckRange(correctSizeHEX60gensym113_956308177, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym113_956308177, 0, 2147483647) ; ++i) { result_956308175.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: []}; }    F.line = 170;
    result_956308175.first = -1;
    F.line = 171;
    result_956308175.last = -1;
  framePtr = F.prev;

  return result_956308175;

}

function find_872415280(a_872415283, item_872415284) {
  var result_872415285 = 0;

  var F = {procname: "find.find", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1837;
    result_872415285 = 0;
    Label1: do {
      F.line = 1838;
      var i_872415289 = [];
      F.line = 8;
      var i_436210767 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210767 < (a_872415283).length)) break Label3;
            F.line = 1838;
            i_872415289 = a_872415283[chckIndx(i_436210767, 0, (a_872415283).length - 1)];
            if (eqStrings(i_872415289, item_872415284)) {
            F.line = 1839;
            break BeforeRet;
            }
            
            F.line = 1838;
            result_872415285 = addInt(result_872415285, 1);
            F.line = 11;
            i_436210767 = addInt(i_436210767, 1);
          }
      } while (false);
    } while (false);
    F.line = 1841;
    result_872415285 = -1;
  } while (false);
  framePtr = F.prev;

  return result_872415285;

}

function contains_872415275(a_872415277, item_872415278) {
  var result_872415279 = false;

  var F = {procname: "contains.contains", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 1855;
    result_872415279 = (0 <= find_872415280(a_872415277, item_872415278));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_872415279;

}

function rawGet_956309124(t_956309127, key_956309128, hc_956309129, hc_956309129_Idx) {
            var Temporary3;

  var result_956309130 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956309129[hc_956309129_Idx] = hash_637534657(key_956309128);
    if ((hc_956309129[hc_956309129_Idx] == 0)) {
    F.line = 66;
    hc_956309129[hc_956309129_Idx] = 314159265;
    }
    
    if (((t_956309127.data).length == 0)) {
    F.line = 48;
    result_956309130 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956309181 = (hc_956309129[hc_956309129_Idx] & (t_956309127.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956309127.data[chckIndx(h_956309181, 0, (t_956309127.data).length - 1)].Field0)) break Label2;
            if (!(t_956309127.data[chckIndx(h_956309181, 0, (t_956309127.data).length - 1)].Field0 == hc_956309129[hc_956309129_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956309127.data[chckIndx(h_956309181, 0, (t_956309127.data).length - 1)].Field2, key_956309128);            }          if (Temporary3) {
          F.line = 56;
          result_956309130 = h_956309181;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956309181 = nextTry_570425378(h_956309181, (t_956309127.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956309130 = subInt(-1, h_956309181);
  } while (false);
  framePtr = F.prev;

  return result_956309130;

}

function mustRehash_956309460(t_956309462) {
  var result_956309463 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_956309462.counter < (t_956309462.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_956309463 = ((mulInt((t_956309462.data).length, 2) < mulInt(t_956309462.counter, 3)) || (subInt((t_956309462.data).length, t_956309462.counter) < 4));
  framePtr = F.prev;

  return result_956309463;

}

function rawInsert_956310034(t_956310037, data_956310038, data_956310038_Idx, key_956310039, val_956310040, hc_956310041, h_956310042) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_956310038[data_956310038_Idx][chckIndx(h_956310042, 0, (data_956310038[data_956310038_Idx]).length - 1)].Field2 = nimCopy(null, key_956310039, NTI33554439);
    F.line = 23;
    data_956310038[data_956310038_Idx][chckIndx(h_956310042, 0, (data_956310038[data_956310038_Idx]).length - 1)].Field3 = nimCopy(null, val_956310040, NTI956304922);
    F.line = 24;
    data_956310038[data_956310038_Idx][chckIndx(h_956310042, 0, (data_956310038[data_956310038_Idx]).length - 1)].Field0 = hc_956310041;
    F.line = 1275;
    data_956310038[data_956310038_Idx][chckIndx(h_956310042, 0, (data_956310038[data_956310038_Idx]).length - 1)].Field1 = -1;
    if ((t_956310037.first < 0)) {
    F.line = 1276;
    t_956310037.first = h_956310042;
    }
    
    if ((0 <= t_956310037.last)) {
    F.line = 1277;
    data_956310038[data_956310038_Idx][chckIndx(t_956310037.last, 0, (data_956310038[data_956310038_Idx]).length - 1)].Field1 = h_956310042;
    }
    
    F.line = 1278;
    t_956310037.last = h_956310042;
  framePtr = F.prev;

  
}

function enlarge_956309623(t_956309626) {
          var Temporary6;
          var Temporary7;

  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1281;
    var n_956309629 = [];
    F.line = 1282;
    n_956309629 = new Array(chckRange(mulInt((t_956309626.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_956309626.data).length, 2), 0, 2147483647) ; ++i) { n_956309629[i] = {Field0: 0, Field1: 0, Field2: [], Field3: []}; }    F.line = 1283;
    var h_956309681 = t_956309626.first;
    F.line = 1284;
    t_956309626.first = -1;
    F.line = 1285;
    t_956309626.last = -1;
    F.line = 1286;
    var Temporary1 = t_956309626.data; t_956309626.data = n_956309629; n_956309629 = Temporary1;    Label2: do {
      F.line = 1287;
        Label3: while (true) {
        if (!(0 <= h_956309681)) break Label3;
          F.line = 1288;
          var nxt_956309739 = n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field1;
          F.line = 1289;
          var eh_956309793 = n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field0;
          if (isFilled_570425375(eh_956309793)) {
          F.line = 1291;
          var j_956309797 = (eh_956309793 & (t_956309626.data).length - 1);
          Label4: do {
            F.line = 1292;
              Label5: while (true) {
              if (!isFilled_570425375(t_956309626.data[chckIndx(j_956309797, 0, (t_956309626.data).length - 1)].Field0)) break Label5;
                F.line = 1293;
                j_956309797 = nextTry_570425378(j_956309797, (t_956309626.data).length - 1);
              }
          } while (false);
          F.line = 1294;
          Temporary6 = n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field2;
          n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field2 = genericReset(n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field2, NTI33554439);
          Temporary7 = n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field3;
          n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field3 = genericReset(n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field3, NTI956304922);
          rawInsert_956310034(t_956309626, t_956309626, "data", Temporary6, Temporary7, n_956309629[chckIndx(h_956309681, 0, (n_956309629).length - 1)].Field0, j_956309797);
          }
          
          F.line = 1295;
          h_956309681 = nxt_956309739;
        }
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_956310316(t_956310319, key_956310320, hc_956310321) {
  var result_956310322 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_956310319.data).length == 0)) {
    F.line = 48;
    result_956310322 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956310373 = (hc_956310321 & (t_956310319.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956310319.data[chckIndx(h_956310373, 0, (t_956310319.data).length - 1)].Field0)) break Label2;
          if (((t_956310319.data[chckIndx(h_956310373, 0, (t_956310319.data).length - 1)].Field0 == hc_956310321) && eqStrings(t_956310319.data[chckIndx(h_956310373, 0, (t_956310319.data).length - 1)].Field2, key_956310320))) {
          F.line = 56;
          result_956310322 = h_956310373;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956310373 = nextTry_570425378(h_956310373, (t_956310319.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956310322 = subInt(-1, h_956310373);
  } while (false);
  framePtr = F.prev;

  return result_956310322;

}

function HEX5BHEX5DHEX3D_956309055(t_956309058, key_956309059, val_956309060) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    if (((t_956309058.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym123_956309110 = slotsNeeded_570425386(32);
    F.line = 167;
    t_956309058.counter = 0;
    F.line = 168;
    t_956309058.data = new Array(chckRange(correctSizeHEX60gensym123_956309110, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym123_956309110, 0, 2147483647) ; ++i) { t_956309058.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: []}; }    F.line = 170;
    t_956309058.first = -1;
    F.line = 171;
    t_956309058.last = -1;
    }
    
    F.line = 57;
    var hc_956309115 = [0];
    F.line = 58;
    var index_956309353 = rawGet_956309124(t_956309058, key_956309059, hc_956309115, 0);
    if ((0 <= index_956309353)) {
    F.line = 59;
    t_956309058.data[chckIndx(index_956309353, 0, (t_956309058.data).length - 1)].Field3 = nimCopy(null, val_956309060, NTI956304922);
    }
    else {
      if (((t_956309058.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym128_956309455 = slotsNeeded_570425386(32);
      F.line = 167;
      t_956309058.counter = 0;
      F.line = 168;
      t_956309058.data = new Array(chckRange(correctSizeHEX60gensym128_956309455, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym128_956309455, 0, 2147483647) ; ++i) { t_956309058.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: []}; }      F.line = 170;
      t_956309058.first = -1;
      F.line = 171;
      t_956309058.last = -1;
      }
      
      if (mustRehash_956309460(t_956309058)) {
      F.line = 49;
      enlarge_956309623(t_956309058);
      F.line = 50;
      index_956309353 = rawGetKnownHC_956310316(t_956309058, key_956309059, hc_956309115[0]);
      }
      
      F.line = 51;
      index_956309353 = subInt(-1, index_956309353);
      F.line = 52;
      rawInsert_956310034(t_956309058, t_956309058, "data", key_956309059, val_956309060, hc_956309115[0], index_956309353);
      F.line = 60;
      t_956309058.counter = addInt(t_956309058.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function numVartoAlphaVar_956308167(rsf_956308168, ssyms_956308169) {
    ssyms_956308169 = nimCopy(null, ssyms_956308169, NTI956305251);
    
function HEX3Aanonymous_956308860(s_956308863) {
      var result_956308866 = false;

      var F = {procname: "numVartoAlphaVar.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
      framePtr = F;
        F.line = 373;
        result_956308866 = !(contains_872415275(ssyms_956308169, s_956308863));
      framePtr = F.prev;

      return result_956308866;

    }
      
function HEX3Aanonymous_956310560(s_956310563) {
        var result_956310566 = false;

        var F = {procname: "numVartoAlphaVar.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
        framePtr = F;
          F.line = 381;
          result_956310566 = !(contains_872415275(ssyms_956308169, s_956310563));
        framePtr = F.prev;

        return result_956310566;

      }
                            var Temporary26;
            var Temporary30;

  var result_956308170 = [({data: [], counter: 0, first: 0, last: 0})];

  var F = {procname: "PDA2CFG_separated_re.numVartoAlphaVar", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 362;
    result_956308170[0] = nimCopy(result_956308170[0], initOrderedTable_956308171(32), NTI956304929);
    F.line = 363;
    var oldnew_956308195 = [initTable_956302214(32)];
    F.line = 364;
    F.line = 851;
    var resultHEX60gensym115_956308739 = [];
    Label1: do {
      F.line = 852;
      var xHEX60gensym115_956308744 = [];
      F.line = 1760;
      var L_436210733 = len_956304268(rsf_956308168);
      if ((0 < rsf_956308168.counter)) {
      F.line = 1299;
      var h_436210734 = rsf_956308168.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210734)) break Label3;
            F.line = 1301;
            var nxt_436210736 = rsf_956308168.data[chckIndx(h_436210734, 0, (rsf_956308168.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956308168.data[chckIndx(h_436210734, 0, (rsf_956308168.data).length - 1)].Field0)) {
            F.line = 852;
            xHEX60gensym115_956308744 = rsf_956308168.data[chckIndx(h_436210734, 0, (rsf_956308168.data).length - 1)]["Field2"];
            F.line = 852;
            var Temporary4 = nimCopy(null, xHEX60gensym115_956308744, NTI33554439);
            resultHEX60gensym115_956308739.push(Temporary4);;
            if (!((len_956304268(rsf_956308168) == L_436210733))) {
            F.line = 1763;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1763, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210734 = nxt_436210736;
          }
      } while (false);
      }
      
    } while (false);
    var oldSyms_956308749 = nimCopy(null, resultHEX60gensym115_956308739, NTI956305396);
    F.line = 367;
    var alphSymSet_956308754 = [makeNimstrLit("A"), makeNimstrLit("B"), makeNimstrLit("C"), makeNimstrLit("D"), makeNimstrLit("E"), makeNimstrLit("F"), makeNimstrLit("G"), makeNimstrLit("H"), makeNimstrLit("I"), makeNimstrLit("J"), makeNimstrLit("K"), makeNimstrLit("L"), makeNimstrLit("M"), makeNimstrLit("N"), makeNimstrLit("O"), makeNimstrLit("P"), makeNimstrLit("Q"), makeNimstrLit("R"), makeNimstrLit("T"), makeNimstrLit("U"), makeNimstrLit("V"), makeNimstrLit("W"), makeNimstrLit("X"), makeNimstrLit("Y"), makeNimstrLit("Z")];
    if (((ssyms_956308169).length == 0)) {
    Label5: do {
      F.line = 370;
      var i_956308763 = 0;
      F.line = 370;
      var s_956308764 = [];
      F.line = 168;
      var i_436210738 = 0;
      F.line = 169;
      var L_436210739 = (oldSyms_956308749).length;
      Label6: do {
        F.line = 170;
          Label7: while (true) {
          if (!(i_436210738 < L_436210739)) break Label7;
            F.line = 370;
            i_956308763 = i_436210738;
            F.line = 370;
            s_956308764 = oldSyms_956308749[chckIndx(i_436210738, 0, (oldSyms_956308749).length - 1)];
            F.line = 370;
            HEX5BHEX5DHEX3D_956302688(oldnew_956308195[0], s_956308764, alphSymSet_956308754[chckIndx(i_956308763, 0, (alphSymSet_956308754).length - 1)]);
            F.line = 172;
            i_436210738 = addInt(i_436210738, 1);
            if (!(((oldSyms_956308749).length == L_436210739))) {
            F.line = 173;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    }
    else {
    if (((ssyms_956308169).length == 1)) {
    F.line = 372;
    HEX5BHEX5DHEX3D_956302688(oldnew_956308195[0], ssyms_956308169[chckIndx(0, 0, (ssyms_956308169).length - 1)], makeNimstrLit("S"));
    F.line = 373;
    oldSyms_956308749 = nimCopy(null, filter_956306820(oldSyms_956308749, HEX3Aanonymous_956308860), NTI956304452);
    Label8: do {
      F.line = 374;
      var i_956308882 = 0;
      F.line = 374;
      var s_956308883 = [];
      F.line = 168;
      var i_436210742 = 0;
      F.line = 169;
      var L_436210743 = (oldSyms_956308749).length;
      Label9: do {
        F.line = 170;
          Label10: while (true) {
          if (!(i_436210742 < L_436210743)) break Label10;
            F.line = 374;
            i_956308882 = i_436210742;
            F.line = 374;
            s_956308883 = oldSyms_956308749[chckIndx(i_436210742, 0, (oldSyms_956308749).length - 1)];
            F.line = 374;
            HEX5BHEX5DHEX3D_956302688(oldnew_956308195[0], s_956308883, alphSymSet_956308754[chckIndx(i_956308882, 0, (alphSymSet_956308754).length - 1)]);
            F.line = 172;
            i_436210742 = addInt(i_436210742, 1);
            if (!(((oldSyms_956308749).length == L_436210743))) {
            F.line = 173;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    }
    else {
      F.line = 376;
      var bs_956308930 = [[]];
      Label11: do {
        F.line = 377;
        var i_956308936 = 0;
        F.line = 377;
        var s_956308937 = [];
        F.line = 168;
        var i_436210746 = 0;
        F.line = 169;
        var L_436210747 = (ssyms_956308169).length;
        Label12: do {
          F.line = 170;
            Label13: while (true) {
            if (!(i_436210746 < L_436210747)) break Label13;
              F.line = 377;
              i_956308936 = i_436210746;
              F.line = 377;
              s_956308937 = ssyms_956308169[chckIndx(i_436210746, 0, (ssyms_956308169).length - 1)];
              F.line = 377;
              HEX5BHEX5DHEX3D_956302688(oldnew_956308195[0], s_956308937, (makeNimstrLit("S") || []).concat(HEX24_318767107(addInt(i_956308936, 1)) || []));
              F.line = 379;
              add_956308992(bs_956308930, 0, [[(makeNimstrLit("S") || []).concat(HEX24_318767107(addInt(i_956308936, 1)) || [])]]);
              F.line = 172;
              i_436210746 = addInt(i_436210746, 1);
              if (!(((ssyms_956308169).length == L_436210747))) {
              F.line = 173;
              failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      F.line = 380;
      HEX5BHEX5DHEX3D_956309055(result_956308170[0], makeNimstrLit("S"), bs_956308930[0]);
      F.line = 381;
      oldSyms_956308749 = nimCopy(null, filter_956306820(oldSyms_956308749, HEX3Aanonymous_956310560), NTI956304452);
      Label14: do {
        F.line = 382;
        var i_956310582 = 0;
        F.line = 382;
        var s_956310583 = [];
        F.line = 168;
        var i_436210750 = 0;
        F.line = 169;
        var L_436210751 = (oldSyms_956308749).length;
        Label15: do {
          F.line = 170;
            Label16: while (true) {
            if (!(i_436210750 < L_436210751)) break Label16;
              F.line = 382;
              i_956310582 = i_436210750;
              F.line = 382;
              s_956310583 = oldSyms_956308749[chckIndx(i_436210750, 0, (oldSyms_956308749).length - 1)];
              F.line = 382;
              HEX5BHEX5DHEX3D_956302688(oldnew_956308195[0], s_956310583, alphSymSet_956308754[chckIndx(i_956310582, 0, (alphSymSet_956308754).length - 1)]);
              F.line = 172;
              i_436210750 = addInt(i_436210750, 1);
              if (!(((oldSyms_956308749).length == L_436210751))) {
              F.line = 173;
              failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    }
    }
    Label17: do {
      F.line = 384;
      var k_956310634 = [];
      F.line = 384;
      var v_956310635 = {Field0: false, Field1: []};
      F.line = 1717;
      var L_436210762 = len_956304268(rsf_956308168);
      if ((0 < rsf_956308168.counter)) {
      F.line = 1299;
      var h_436210763 = rsf_956308168.first;
      Label18: do {
        F.line = 1300;
          Label19: while (true) {
          if (!(0 <= h_436210763)) break Label19;
            F.line = 1301;
            var nxt_436210765 = rsf_956308168.data[chckIndx(h_436210763, 0, (rsf_956308168.data).length - 1)].Field1;
            if (isFilled_570425375(rsf_956308168.data[chckIndx(h_436210763, 0, (rsf_956308168.data).length - 1)].Field0)) {
            F.line = 384;
            k_956310634 = rsf_956308168.data[chckIndx(h_436210763, 0, (rsf_956308168.data).length - 1)].Field2;
            F.line = 384;
            v_956310635 = nimCopy(v_956310635, rsf_956308168.data[chckIndx(h_436210763, 0, (rsf_956308168.data).length - 1)].Field3, NTI956302992);
            F.line = 386;
            var newbs_956310636 = [];
            Label20: do {
              F.line = 387;
              var b_956310640 = [];
              F.line = 235;
              var i_436210759 = 0;
              F.line = 236;
              var L_436210760 = (v_956310635.Field1).length;
              Label21: do {
                F.line = 237;
                  Label22: while (true) {
                  if (!(i_436210759 < L_436210760)) break Label22;
                    F.line = 387;
                    b_956310640 = v_956310635.Field1[chckIndx(i_436210759, 0, (v_956310635.Field1).length - 1)];
                    F.line = 388;
                    var newb_956310641 = [];
                    Label23: do {
                      F.line = 389;
                      var s_956310645 = [];
                      F.line = 235;
                      var i_436210756 = 0;
                      F.line = 236;
                      var L_436210757 = (b_956310640).length;
                      Label24: do {
                        F.line = 237;
                          Label25: while (true) {
                          if (!(i_436210756 < L_436210757)) break Label25;
                            F.line = 389;
                            s_956310645 = b_956310640[chckIndx(i_436210756, 0, (b_956310640).length - 1)];
                            if (isVariable_956306413(s_956310645)) {
                            F.line = 390;
                            var Temporary27 = nimCopy(null, (Temporary26 = HEX5BHEX5D_956304061(oldnew_956308195[0], s_956310645), Temporary26)[0][Temporary26[1]], NTI33554439);
                            newb_956310641.push(Temporary27);;
                            }
                            else {
                              F.line = 391;
                              var Temporary28 = nimCopy(null, s_956310645, NTI33554439);
                              newb_956310641.push(Temporary28);;
                            }
                            
                            F.line = 239;
                            i_436210756 = addInt(i_436210756, 1);
                            if (!(((b_956310640).length == L_436210757))) {
                            F.line = 240;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    F.line = 392;
                    var Temporary29 = nimCopy(null, newb_956310641, NTI956306519);
                    newbs_956310636.push(Temporary29);;
                    F.line = 239;
                    i_436210759 = addInt(i_436210759, 1);
                    if (!(((v_956310635.Field1).length == L_436210760))) {
                    F.line = 240;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 384;
            HEX5BHEX5DHEX3D_956309055(result_956308170[0], (Temporary30 = HEX5BHEX5D_956304061(oldnew_956308195[0], k_956310634), Temporary30)[0][Temporary30[1]], newbs_956310636);
            if (!((len_956304268(rsf_956308168) == L_436210762))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210763 = nxt_436210765;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  return result_956308170[0];

}

function len_956307727(t_956307730) {
  var result_956307731 = 0;

  var F = {procname: "len.len", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 1509;
    result_956307731 = t_956307730.counter;
  framePtr = F.prev;

  return result_956307731;

}

function sshow_956308089(rs_956308090) {
            
function HEX3Aanonymous_956308107(bd_956308110) {
              var result_956308113 = [];

              var F = {procname: "sshow.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
              framePtr = F;
                F.line = 358;
                F.line = 894;
                var sHEX60gensym105_956308117 = nimCopy(null, bd_956308110, NTI956302993);
                if (!((0 < (sHEX60gensym105_956308117).length))) {
                F.line = 895;
                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym105.len > 0` Can\'t fold empty sequences"));
                }
                
                F.line = 896;
                var resultHEX60gensym105_956308126 = [];
                F.line = 897;
                resultHEX60gensym105_956308126 = nimCopy(null, sHEX60gensym105_956308117[chckIndx(0, 0, (sHEX60gensym105_956308117).length - 1)], NTI33554439);
                Label1: do {
                  F.line = 898;
                  var iHEX60gensym105_956308134 = 0;
                  F.line = 117;
                  var colontmp__436210784 = 0;
                  F.line = 898;
                  colontmp__436210784 = (sHEX60gensym105_956308117).length;
                  F.line = 119;
                  var i_436210785 = 1;
                  Label2: do {
                    F.line = 120;
                      Label3: while (true) {
                      if (!(i_436210785 < colontmp__436210784)) break Label3;
                        F.line = 898;
                        iHEX60gensym105_956308134 = i_436210785;
                        F.line = 900;
                        var a_956308135 = nimCopy(null, resultHEX60gensym105_956308126, NTI33554439);
                        F.line = 901;
                        var b_956308136 = nimCopy(null, sHEX60gensym105_956308117[chckIndx(iHEX60gensym105_956308134, 0, (sHEX60gensym105_956308117).length - 1)], NTI33554439);
                        F.line = 358;
                        resultHEX60gensym105_956308126 = nimCopy(null, (a_956308135 || []).concat(makeNimstrLit(" * ") || [],b_956308136 || []), NTI33554439);
                        F.line = 122;
                        i_436210785 = addInt(i_436210785, 1);
                      }
                  } while (false);
                } while (false);
                result_956308113 = nimCopy(null, resultHEX60gensym105_956308126, NTI33554439);
              framePtr = F.prev;

              return result_956308113;

            }

  var result_956308091 = [];

  var F = {procname: "PDA2CFG_separated_re.sshow", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 355;
      var k_956308096 = [];
      F.line = 355;
      var v_956308097 = [];
      F.line = 1717;
      var L_436210779 = len_956307727(rs_956308090);
      if ((0 < rs_956308090.counter)) {
      F.line = 1299;
      var h_436210780 = rs_956308090.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210780)) break Label3;
            F.line = 1301;
            var nxt_436210782 = rs_956308090.data[chckIndx(h_436210780, 0, (rs_956308090.data).length - 1)].Field1;
            if (isFilled_570425375(rs_956308090.data[chckIndx(h_436210780, 0, (rs_956308090.data).length - 1)].Field0)) {
            F.line = 355;
            k_956308096 = rs_956308090.data[chckIndx(h_436210780, 0, (rs_956308090.data).length - 1)].Field2;
            F.line = 355;
            v_956308097 = rs_956308090.data[chckIndx(h_436210780, 0, (rs_956308090.data).length - 1)].Field3;
            F.line = 356;
            var line_956308098 = (k_956308096 || []).concat(makeNimstrLit(" -> ") || []);
            if (!(HEX3DHEX3D_956304566(v_956308097, []))) {
            F.line = 358;
            F.line = 894;
            var sHEX60gensym109_956308147 = map_956304627(v_956308097, HEX3Aanonymous_956308107);
            if (!((0 < (sHEX60gensym109_956308147).length))) {
            F.line = 895;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym109.len > 0` Can\'t fold empty sequences"));
            }
            
            F.line = 896;
            var resultHEX60gensym109_956308156 = [];
            F.line = 897;
            resultHEX60gensym109_956308156 = nimCopy(null, sHEX60gensym109_956308147[chckIndx(0, 0, (sHEX60gensym109_956308147).length - 1)], NTI33554439);
            Label4: do {
              F.line = 898;
              var iHEX60gensym109_956308164 = 0;
              F.line = 117;
              var colontmp__436210775 = 0;
              F.line = 898;
              colontmp__436210775 = (sHEX60gensym109_956308147).length;
              F.line = 119;
              var i_436210776 = 1;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436210776 < colontmp__436210775)) break Label6;
                    F.line = 898;
                    iHEX60gensym109_956308164 = i_436210776;
                    F.line = 900;
                    var a_956308165 = nimCopy(null, resultHEX60gensym109_956308156, NTI33554439);
                    F.line = 901;
                    var b_956308166 = nimCopy(null, sHEX60gensym109_956308147[chckIndx(iHEX60gensym109_956308164, 0, (sHEX60gensym109_956308147).length - 1)], NTI33554439);
                    F.line = 358;
                    resultHEX60gensym109_956308156 = nimCopy(null, (a_956308165 || []).concat(makeNimstrLit(" | ") || [],b_956308166 || []), NTI33554439);
                    F.line = 122;
                    i_436210776 = addInt(i_436210776, 1);
                  }
              } while (false);
            } while (false);
            line_956308098.push.apply(line_956308098, resultHEX60gensym109_956308156);;
            }
            
            F.line = 355;
            result_956308091.push.apply(result_956308091, (line_956308098 || []).concat(makeNimstrLit("\x0A") || []));;
            if (!((len_956307727(rs_956308090) == L_436210779))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210780 = nxt_436210782;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  return result_956308091;

}

function newSeq_956310870(len_956310872) {
  var result_956310873 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
    F.line = 680;
    result_956310873 = new Array(len_956310872); for (var i = 0 ; i < len_956310872 ; ++i) { result_956310873[i] = {Field0: [], Field1: []}; }  framePtr = F.prev;

  return result_956310873;

}

function HEX2A_788529160(x_788529161, order_788529162) {
  var result_788529163 = 0;

  var F = {procname: "algorithm.*", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
    F.line = 64;
    var y_788529168 = subInt(order_788529162, 1);
    F.line = 65;
    result_788529163 = subInt((x_788529161 ^ y_788529168), y_788529168);
  framePtr = F.prev;

  return result_788529163;

}

function mergeAlt_956310890(a_956310892, b_956310893, lo_956310894, m_956310895, hi_956310896, cmp_956310899, order_956310900) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((HEX2A_788529160(cmp_956310899(a_956310892[chckIndx(m_956310895, 0, (a_956310892).length - 1)], a_956310892[chckIndx(addInt(m_956310895, 1), 0, (a_956310892).length - 1)]), order_956310900) <= 0)) {
    F.line = 331;
    break BeforeRet;
    }
    
    F.line = 332;
    var j_956310901 = lo_956310894;
    if (!((j_956310901 <= m_956310895))) {
    F.line = 334;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\algorithm.nim(334, 10) `j <= m` "));
    }
    
    F.line = 336;
    var bb_956310907 = 0;
    Label1: do {
      F.line = 337;
        Label2: while (true) {
        if (!(j_956310901 <= m_956310895)) break Label2;
          F.line = 338;
          b_956310893[chckIndx(bb_956310907, 0, (b_956310893).length - 1)] = nimCopy(b_956310893[chckIndx(bb_956310907, 0, (b_956310893).length - 1)], a_956310892[chckIndx(j_956310901, 0, (a_956310892).length - 1)], NTI956306628);
          F.line = 339;
          bb_956310907 = addInt(bb_956310907, 1);
          F.line = 340;
          j_956310901 = addInt(j_956310901, 1);
        }
    } while (false);
    F.line = 344;
    var i_956310916 = 0;
    F.line = 345;
    var k_956310917 = lo_956310894;
    Label3: do {
      F.line = 347;
        Label4: while (true) {
        if (!((k_956310917 < j_956310901) && (j_956310901 <= hi_956310896))) break Label4;
          if ((HEX2A_788529160(cmp_956310899(b_956310893[chckIndx(i_956310916, 0, (b_956310893).length - 1)], a_956310892[chckIndx(j_956310901, 0, (a_956310892).length - 1)]), order_956310900) <= 0)) {
          F.line = 349;
          a_956310892[chckIndx(k_956310917, 0, (a_956310892).length - 1)] = nimCopy(a_956310892[chckIndx(k_956310917, 0, (a_956310892).length - 1)], b_956310893[chckIndx(i_956310916, 0, (b_956310893).length - 1)], NTI956306628);
          F.line = 350;
          i_956310916 = addInt(i_956310916, 1);
          }
          else {
            F.line = 352;
            a_956310892[chckIndx(k_956310917, 0, (a_956310892).length - 1)] = nimCopy(a_956310892[chckIndx(k_956310917, 0, (a_956310892).length - 1)], a_956310892[chckIndx(j_956310901, 0, (a_956310892).length - 1)], NTI956306628);
            F.line = 353;
            j_956310901 = addInt(j_956310901, 1);
          }
          
          F.line = 354;
          k_956310917 = addInt(k_956310917, 1);
        }
    } while (false);
    Label5: do {
      F.line = 357;
        Label6: while (true) {
        if (!(k_956310917 < j_956310901)) break Label6;
          F.line = 358;
          a_956310892[chckIndx(k_956310917, 0, (a_956310892).length - 1)] = nimCopy(a_956310892[chckIndx(k_956310917, 0, (a_956310892).length - 1)], b_956310893[chckIndx(i_956310916, 0, (b_956310893).length - 1)], NTI956306628);
          F.line = 359;
          k_956310917 = addInt(k_956310917, 1);
          F.line = 360;
          i_956310916 = addInt(i_956310916, 1);
        }
    } while (false);
  } while (false);
  framePtr = F.prev;

  
}

function sort_956310858(a_956310860, cmp_956310863, order_956310864) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
    F.line = 407;
    var n_956310869 = (a_956310860).length;
    F.line = 408;
    var b_956310887 = newSeq_956310870(chckRange(divInt(n_956310869, 2), 0, 2147483647));
    F.line = 409;
    var s_956310888 = 1;
    Label1: do {
      F.line = 410;
        Label2: while (true) {
        if (!(s_956310888 < n_956310869)) break Label2;
          F.line = 411;
          var m_956310889 = subInt(subInt(n_956310869, 1), s_956310888);
          Label3: do {
            F.line = 412;
              Label4: while (true) {
              if (!(0 <= m_956310889)) break Label4;
                F.line = 413;
                mergeAlt_956310890(a_956310860, b_956310887, nimMax(addInt(subInt(m_956310889, s_956310888), 1), 0), m_956310889, addInt(m_956310889, s_956310888), cmp_956310863, order_956310864);
                F.line = 414;
                m_956310889 = subInt(m_956310889, mulInt(s_956310888, 2));
              }
          } while (false);
          F.line = 415;
          s_956310888 = mulInt(s_956310888, 2);
        }
    } while (false);
  framePtr = F.prev;

  
}

function symCmp_956310830(x_956310833, y_956310834) {
  var result_956310835 = 0;

  var F = {procname: "PDA2CFG_separated_re.symCmp", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((nsuStartsWith(x_956310833.Field0, makeNimstrLit("S")) && nsuStartsWith(y_956310834.Field0, makeNimstrLit("S")))) {
    F.line = 402;
    result_956310835 = 0;
    break BeforeRet;
    }
    else {
    if ((nsuStartsWith(x_956310833.Field0, makeNimstrLit("S")) && !(nsuStartsWith(y_956310834.Field0, makeNimstrLit("S"))))) {
    F.line = 403;
    result_956310835 = -1;
    break BeforeRet;
    }
    else {
    if ((!(nsuStartsWith(x_956310833.Field0, makeNimstrLit("S"))) && nsuStartsWith(y_956310834.Field0, makeNimstrLit("S")))) {
    F.line = 404;
    result_956310835 = 1;
    break BeforeRet;
    }
    else {
    if ((!(nsuStartsWith(x_956310833.Field0, makeNimstrLit("S"))) && !(nsuStartsWith(y_956310834.Field0, makeNimstrLit("S"))))) {
    F.line = 405;
    result_956310835 = 0;
    break BeforeRet;
    }
    }}}
  } while (false);
  framePtr = F.prev;

  return result_956310835;

}

function sortRules_956310836(rs_956310837) {
  var result_956310838 = [({data: [], counter: 0, first: 0, last: 0})];

  var F = {procname: "PDA2CFG_separated_re.sortRules", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 407;
    result_956310838[0] = nimCopy(result_956310838[0], initOrderedTable_956308171(32), NTI956304929);
    F.line = 408;
    var tmp_956310845 = [];
    Label1: do {
      F.line = 409;
      var k_956310850 = [];
      F.line = 409;
      var v_956310851 = [];
      F.line = 1717;
      var L_436210788 = len_956307727(rs_956310837);
      if ((0 < rs_956310837.counter)) {
      F.line = 1299;
      var h_436210789 = rs_956310837.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210789)) break Label3;
            F.line = 1301;
            var nxt_436210791 = rs_956310837.data[chckIndx(h_436210789, 0, (rs_956310837.data).length - 1)].Field1;
            if (isFilled_570425375(rs_956310837.data[chckIndx(h_436210789, 0, (rs_956310837.data).length - 1)].Field0)) {
            F.line = 409;
            k_956310850 = rs_956310837.data[chckIndx(h_436210789, 0, (rs_956310837.data).length - 1)].Field2;
            F.line = 409;
            v_956310851 = rs_956310837.data[chckIndx(h_436210789, 0, (rs_956310837.data).length - 1)].Field3;
            F.line = 409;
            tmp_956310845.push({Field0: nimCopy(null, k_956310850, NTI33554439), Field1: nimCopy(null, v_956310851, NTI956304922)});;
            if (!((len_956307727(rs_956310837) == L_436210788))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210789 = nxt_436210791;
          }
      } while (false);
      }
      
    } while (false);
    F.line = 410;
    sort_956310858(tmp_956310845, symCmp_956310830, 1);
    Label4: do {
      F.line = 411;
      var x_956310972 = {Field0: [], Field1: []};
      F.line = 235;
      var i_436210794 = 0;
      F.line = 236;
      var L_436210795 = (tmp_956310845).length;
      Label5: do {
        F.line = 237;
          Label6: while (true) {
          if (!(i_436210794 < L_436210795)) break Label6;
            F.line = 411;
            x_956310972 = tmp_956310845[chckIndx(i_436210794, 0, (tmp_956310845).length - 1)];
            F.line = 411;
            HEX5BHEX5DHEX3D_956309055(result_956310838[0], x_956310972.Field0, x_956310972.Field1);
            F.line = 239;
            i_436210794 = addInt(i_436210794, 1);
            if (!(((tmp_956310845).length == L_436210795))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956310838[0];

}

function mergeAlt_956311091(a_956311093, b_956311094, lo_956311095, m_956311096, hi_956311097, cmp_956311100, order_956311101) {
  var F = {procname: "mergeAlt.mergeAlt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if ((HEX2A_788529160(cmp_956311100(a_956311093[chckIndx(m_956311096, 0, (a_956311093).length - 1)], a_956311093[chckIndx(addInt(m_956311096, 1), 0, (a_956311093).length - 1)]), order_956311101) <= 0)) {
    F.line = 331;
    break BeforeRet;
    }
    
    F.line = 332;
    var j_956311102 = lo_956311095;
    if (!((j_956311102 <= m_956311096))) {
    F.line = 334;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\algorithm.nim(334, 10) `j <= m` "));
    }
    
    F.line = 336;
    var bb_956311108 = 0;
    Label1: do {
      F.line = 337;
        Label2: while (true) {
        if (!(j_956311102 <= m_956311096)) break Label2;
          F.line = 338;
          b_956311094[chckIndx(bb_956311108, 0, (b_956311094).length - 1)] = a_956311093[chckIndx(j_956311102, 0, (a_956311093).length - 1)];
          F.line = 339;
          bb_956311108 = addInt(bb_956311108, 1);
          F.line = 340;
          j_956311102 = addInt(j_956311102, 1);
        }
    } while (false);
    F.line = 344;
    var i_956311117 = 0;
    F.line = 345;
    var k_956311118 = lo_956311095;
    Label3: do {
      F.line = 347;
        Label4: while (true) {
        if (!((k_956311118 < j_956311102) && (j_956311102 <= hi_956311097))) break Label4;
          if ((HEX2A_788529160(cmp_956311100(b_956311094[chckIndx(i_956311117, 0, (b_956311094).length - 1)], a_956311093[chckIndx(j_956311102, 0, (a_956311093).length - 1)]), order_956311101) <= 0)) {
          F.line = 349;
          a_956311093[chckIndx(k_956311118, 0, (a_956311093).length - 1)] = b_956311094[chckIndx(i_956311117, 0, (b_956311094).length - 1)];
          F.line = 350;
          i_956311117 = addInt(i_956311117, 1);
          }
          else {
            F.line = 352;
            a_956311093[chckIndx(k_956311118, 0, (a_956311093).length - 1)] = a_956311093[chckIndx(j_956311102, 0, (a_956311093).length - 1)];
            F.line = 353;
            j_956311102 = addInt(j_956311102, 1);
          }
          
          F.line = 354;
          k_956311118 = addInt(k_956311118, 1);
        }
    } while (false);
    Label5: do {
      F.line = 357;
        Label6: while (true) {
        if (!(k_956311118 < j_956311102)) break Label6;
          F.line = 358;
          a_956311093[chckIndx(k_956311118, 0, (a_956311093).length - 1)] = b_956311094[chckIndx(i_956311117, 0, (b_956311094).length - 1)];
          F.line = 359;
          k_956311118 = addInt(k_956311118, 1);
          F.line = 360;
          i_956311117 = addInt(i_956311117, 1);
        }
    } while (false);
  } while (false);
  framePtr = F.prev;

  
}

function sort_956311074(a_956311076, cmp_956311079, order_956311080) {
  var F = {procname: "sort.sort", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\algorithm.nim", line: 0};
  framePtr = F;
    F.line = 407;
    var n_956311084 = (a_956311076).length;
    F.line = 408;
    var b_956311088 = newSeq_956307078(chckRange(divInt(n_956311084, 2), 0, 2147483647));
    F.line = 409;
    var s_956311089 = 1;
    Label1: do {
      F.line = 410;
        Label2: while (true) {
        if (!(s_956311089 < n_956311084)) break Label2;
          F.line = 411;
          var m_956311090 = subInt(subInt(n_956311084, 1), s_956311089);
          Label3: do {
            F.line = 412;
              Label4: while (true) {
              if (!(0 <= m_956311090)) break Label4;
                F.line = 413;
                mergeAlt_956311091(a_956311076, b_956311088, nimMax(addInt(subInt(m_956311090, s_956311089), 1), 0), m_956311090, addInt(m_956311090, s_956311089), cmp_956311079, order_956311080);
                F.line = 414;
                m_956311090 = subInt(m_956311090, mulInt(s_956311089, 2));
              }
          } while (false);
          F.line = 415;
          s_956311089 = mulInt(s_956311089, 2);
        }
    } while (false);
  framePtr = F.prev;

  
}

function sortBodies_956311046(rs_956311047) {
            
function HEX3Aanonymous_956311060(x_956311061, y_956311062) {
                var Temporary1;

              var result_956311063 = 0;

              var F = {procname: "sortBodies.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
              framePtr = F;
                F.line = 422;
                if (((x_956311061).length < (y_956311062).length)) {
                Temporary1 = 1;
                }
                else {
                Temporary1 = -1;
                }
                
                result_956311063 = Temporary1;
              framePtr = F.prev;

              return result_956311063;

            }

  var result_956311048 = [({data: [], counter: 0, first: 0, last: 0})];

  var F = {procname: "PDA2CFG_separated_re.sortBodies", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 418;
    result_956311048[0] = nimCopy(result_956311048[0], initOrderedTable_956308171(32), NTI956304929);
    Label1: do {
      F.line = 419;
      var k_956311057 = [];
      F.line = 419;
      var bs_956311058 = [];
      F.line = 1717;
      var L_436210803 = len_956307727(rs_956311047);
      if ((0 < rs_956311047.counter)) {
      F.line = 1299;
      var h_436210804 = rs_956311047.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210804)) break Label3;
            F.line = 1301;
            var nxt_436210806 = rs_956311047.data[chckIndx(h_436210804, 0, (rs_956311047.data).length - 1)].Field1;
            if (isFilled_570425375(rs_956311047.data[chckIndx(h_436210804, 0, (rs_956311047.data).length - 1)].Field0)) {
            F.line = 419;
            k_956311057 = rs_956311047.data[chckIndx(h_436210804, 0, (rs_956311047.data).length - 1)].Field2;
            F.line = 419;
            bs_956311058 = rs_956311047.data[chckIndx(h_436210804, 0, (rs_956311047.data).length - 1)].Field3;
            F.line = 420;
            var newbs_956311059 = nimCopy(null, bs_956311058, NTI956304922);
            F.line = 419;
            sort_956311074(newbs_956311059, HEX3Aanonymous_956311060, 1);
            F.line = 419;
            HEX5BHEX5DHEX3D_956309055(result_956311048[0], k_956311057, newbs_956311059);
            if (!((len_956307727(rs_956311047) == L_436210803))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210804 = nxt_436210806;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  return result_956311048[0];

}

function deduplicate_956312366(s_956312368, isSorted_956312369) {
  var result_956312370 = [];

  var F = {procname: "deduplicate.deduplicate", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim", line: 0};
  framePtr = F;
    F.line = 200;
    result_956312370 = nimCopy(null, [], NTI956307432);
    if ((0 < (s_956312368).length)) {
    if (isSorted_956312369) {
    F.line = 203;
    var prev_956312378 = nimCopy(null, s_956312368[chckIndx(0, 0, (s_956312368).length - 1)], NTI33554439);
    F.line = 204;
    var Temporary1 = nimCopy(null, prev_956312378, NTI33554439);
    result_956312370.push(Temporary1);;
    Label2: do {
      F.line = 205;
      var i_956312390 = 0;
      F.line = 75;
      var colontmp__436210840 = 0;
      F.line = 205;
      colontmp__436210840 = (s_956312368).length - 1;
      F.line = 90;
      var res_436210841 = 1;
      Label3: do {
        F.line = 91;
          Label4: while (true) {
          if (!(res_436210841 <= colontmp__436210840)) break Label4;
            F.line = 205;
            i_956312390 = res_436210841;
            if (!(eqStrings(s_956312368[chckIndx(i_956312390, 0, (s_956312368).length - 1)], prev_956312378))) {
            F.line = 207;
            prev_956312378 = nimCopy(null, s_956312368[chckIndx(i_956312390, 0, (s_956312368).length - 1)], NTI33554439);
            F.line = 208;
            var Temporary5 = nimCopy(null, prev_956312378, NTI33554439);
            result_956312370.push(Temporary5);;
            }
            
            F.line = 93;
            res_436210841 = addInt(res_436210841, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      Label6: do {
        F.line = 210;
        var itm_956312398 = [];
        F.line = 8;
        var i_436210844 = 0;
        Label7: do {
          F.line = 9;
            Label8: while (true) {
            if (!(i_436210844 < (s_956312368).length)) break Label8;
              F.line = 210;
              itm_956312398 = s_956312368[chckIndx(i_436210844, 0, (s_956312368).length - 1)];
              if (!(contains_872415275(result_956312370, itm_956312398))) {
              F.line = 211;
              var Temporary9 = nimCopy(null, itm_956312398, NTI33554439);
              result_956312370.push(Temporary9);;
              }
              
              F.line = 11;
              i_436210844 = addInt(i_436210844, 1);
            }
        } while (false);
      } while (false);
    }
    
    }
    
  framePtr = F.prev;

  return result_956312370;

}

function extractVerTer_956311216(rs_956311217) {
                              var Temporary18;

  var result_956311218 = {Field0: [], Field1: []};

  var F = {procname: "PDA2CFG_separated_re.extractVerTer", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 430;
    F.line = 851;
    var resultHEX60gensym146_956311762 = [];
    Label1: do {
      F.line = 852;
      var xHEX60gensym146_956311767 = [];
      F.line = 1760;
      var L_436210815 = len_956307727(rs_956311217);
      if ((0 < rs_956311217.counter)) {
      F.line = 1299;
      var h_436210816 = rs_956311217.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210816)) break Label3;
            F.line = 1301;
            var nxt_436210818 = rs_956311217.data[chckIndx(h_436210816, 0, (rs_956311217.data).length - 1)].Field1;
            if (isFilled_570425375(rs_956311217.data[chckIndx(h_436210816, 0, (rs_956311217.data).length - 1)].Field0)) {
            F.line = 852;
            xHEX60gensym146_956311767 = rs_956311217.data[chckIndx(h_436210816, 0, (rs_956311217.data).length - 1)]["Field2"];
            F.line = 852;
            var Temporary4 = nimCopy(null, xHEX60gensym146_956311767, NTI33554439);
            resultHEX60gensym146_956311762.push(Temporary4);;
            if (!((len_956307727(rs_956311217) == L_436210815))) {
            F.line = 1763;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1763, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210816 = nxt_436210818;
          }
      } while (false);
      }
      
    } while (false);
    var V_956311772 = nimCopy(null, resultHEX60gensym146_956311762, NTI956306969);
    F.line = 431;
    F.line = 851;
    var resultHEX60gensym151_956312316 = [];
    Label5: do {
      F.line = 852;
      var xHEX60gensym151_956312321 = [];
      F.line = 1780;
      var L_436210821 = len_956307727(rs_956311217);
      if ((0 < rs_956311217.counter)) {
      F.line = 1299;
      var h_436210822 = rs_956311217.first;
      Label6: do {
        F.line = 1300;
          Label7: while (true) {
          if (!(0 <= h_436210822)) break Label7;
            F.line = 1301;
            var nxt_436210824 = rs_956311217.data[chckIndx(h_436210822, 0, (rs_956311217.data).length - 1)].Field1;
            if (isFilled_570425375(rs_956311217.data[chckIndx(h_436210822, 0, (rs_956311217.data).length - 1)].Field0)) {
            F.line = 852;
            xHEX60gensym151_956312321 = rs_956311217.data[chckIndx(h_436210822, 0, (rs_956311217.data).length - 1)]["Field3"];
            F.line = 852;
            var Temporary8 = nimCopy(null, xHEX60gensym151_956312321, NTI956304922);
            resultHEX60gensym151_956312316.push(Temporary8);;
            if (!((len_956307727(rs_956311217) == L_436210821))) {
            F.line = 1783;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1783, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210822 = nxt_436210824;
          }
      } while (false);
      }
      
    } while (false);
    var bodies_956312326 = nimCopy(null, resultHEX60gensym151_956312316, NTI956307241);
    F.line = 432;
    var T_956312327 = [];
    Label9: do {
      F.line = 433;
      var bs_956312349 = [];
      F.line = 235;
      var i_436210834 = 0;
      F.line = 236;
      var L_436210835 = (bodies_956312326).length;
      Label10: do {
        F.line = 237;
          Label11: while (true) {
          if (!(i_436210834 < L_436210835)) break Label11;
            F.line = 433;
            bs_956312349 = bodies_956312326[chckIndx(i_436210834, 0, (bodies_956312326).length - 1)];
            Label12: do {
              F.line = 434;
              var b_956312353 = [];
              F.line = 235;
              var i_436210831 = 0;
              F.line = 236;
              var L_436210832 = (bs_956312349).length;
              Label13: do {
                F.line = 237;
                  Label14: while (true) {
                  if (!(i_436210831 < L_436210832)) break Label14;
                    F.line = 434;
                    b_956312353 = bs_956312349[chckIndx(i_436210831, 0, (bs_956312349).length - 1)];
                    Label15: do {
                      F.line = 435;
                      var s_956312357 = [];
                      F.line = 235;
                      var i_436210828 = 0;
                      F.line = 236;
                      var L_436210829 = (b_956312353).length;
                      Label16: do {
                        F.line = 237;
                          Label17: while (true) {
                          if (!(i_436210828 < L_436210829)) break Label17;
                            F.line = 435;
                            s_956312357 = b_956312353[chckIndx(i_436210828, 0, (b_956312353).length - 1)];
                              if (!!(contains_872415275(V_956311772, s_956312357))) Temporary18 = false; else {                                Temporary18 = !(eqStrings(s_956312357, makeNimstrLit("\xCE\xB5")));                              }                            if (Temporary18) {
                            F.line = 436;
                            var Temporary19 = nimCopy(null, s_956312357, NTI33554439);
                            T_956312327.push(Temporary19);;
                            }
                            
                            F.line = 239;
                            i_436210828 = addInt(i_436210828, 1);
                            if (!(((b_956312353).length == L_436210829))) {
                            F.line = 240;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    F.line = 239;
                    i_436210831 = addInt(i_436210831, 1);
                    if (!(((bs_956312349).length == L_436210832))) {
                    F.line = 240;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 239;
            i_436210834 = addInt(i_436210834, 1);
            if (!(((bodies_956312326).length == L_436210835))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 437;
    var colontmp__436210837 = nimCopy(null, V_956311772, NTI956306840);
    F.line = 437;
    var colontmp__436210838 = deduplicate_956312366(T_956312327, false);
    F.line = 437;
    result_956311218 = nimCopy(result_956311218, {Field0: nimCopy(null, colontmp__436210837, NTI956306840), Field1: nimCopy(null, colontmp__436210838, NTI956306841)}, NTI956306839);
  framePtr = F.prev;

  return result_956311218;

}

function startSyms_956312740(rs_956312741) {
  var result_956312742 = [];

  var F = {procname: "PDA2CFG_separated_re.startSyms", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 468;
      var k_956312747 = [];
      F.line = 1760;
      var L_436210847 = len_956307727(rs_956312741);
      if ((0 < rs_956312741.counter)) {
      F.line = 1299;
      var h_436210848 = rs_956312741.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210848)) break Label3;
            F.line = 1301;
            var nxt_436210850 = rs_956312741.data[chckIndx(h_436210848, 0, (rs_956312741.data).length - 1)].Field1;
            if (isFilled_570425375(rs_956312741.data[chckIndx(h_436210848, 0, (rs_956312741.data).length - 1)].Field0)) {
            F.line = 468;
            k_956312747 = rs_956312741.data[chckIndx(h_436210848, 0, (rs_956312741.data).length - 1)]["Field2"];
            if (nsuStartsWith(k_956312747, makeNimstrLit("S"))) {
            F.line = 469;
            var Temporary4 = nimCopy(null, k_956312747, NTI33554439);
            result_956312742.push(Temporary4);;
            }
            
            if (!((len_956307727(rs_956312741) == L_436210847))) {
            F.line = 1763;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1763, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210848 = nxt_436210850;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  return result_956312742;

}

function sshow_956312593(cfg_956312594) {
            
function HEX3Aanonymous_956312657(bd_956312660) {
              var result_956312663 = [];

              var F = {procname: "sshow.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
              framePtr = F;
                F.line = 463;
                F.line = 894;
                var sHEX60gensym191_956312667 = nimCopy(null, bd_956312660, NTI956302993);
                if (!((0 < (sHEX60gensym191_956312667).length))) {
                F.line = 895;
                failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym191.len > 0` Can\'t fold empty sequences"));
                }
                
                F.line = 896;
                var resultHEX60gensym191_956312676 = [];
                F.line = 897;
                resultHEX60gensym191_956312676 = nimCopy(null, sHEX60gensym191_956312667[chckIndx(0, 0, (sHEX60gensym191_956312667).length - 1)], NTI33554439);
                Label1: do {
                  F.line = 898;
                  var iHEX60gensym191_956312684 = 0;
                  F.line = 117;
                  var colontmp__436210885 = 0;
                  F.line = 898;
                  colontmp__436210885 = (sHEX60gensym191_956312667).length;
                  F.line = 119;
                  var i_436210886 = 1;
                  Label2: do {
                    F.line = 120;
                      Label3: while (true) {
                      if (!(i_436210886 < colontmp__436210885)) break Label3;
                        F.line = 898;
                        iHEX60gensym191_956312684 = i_436210886;
                        F.line = 900;
                        var a_956312685 = nimCopy(null, resultHEX60gensym191_956312676, NTI33554439);
                        F.line = 901;
                        var b_956312686 = nimCopy(null, sHEX60gensym191_956312667[chckIndx(iHEX60gensym191_956312684, 0, (sHEX60gensym191_956312667).length - 1)], NTI33554439);
                        F.line = 463;
                        resultHEX60gensym191_956312676 = nimCopy(null, (a_956312685 || []).concat(makeNimstrLit(" * ") || [],b_956312686 || []), NTI33554439);
                        F.line = 122;
                        i_436210886 = addInt(i_436210886, 1);
                      }
                  } while (false);
                } while (false);
                result_956312663 = nimCopy(null, resultHEX60gensym191_956312676, NTI33554439);
              framePtr = F.prev;

              return result_956312663;

            }

  var result_956312595 = [];

  var F = {procname: "PDA2CFG_separated_re.sshow", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 457;
    F.line = 894;
    var sHEX60gensym182_956312599 = nimCopy(null, cfg_956312594.Field0, NTI956307479);
    if (!((0 < (sHEX60gensym182_956312599).length))) {
    F.line = 895;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym182.len > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 896;
    var resultHEX60gensym182_956312608 = [];
    F.line = 897;
    resultHEX60gensym182_956312608 = nimCopy(null, sHEX60gensym182_956312599[chckIndx(0, 0, (sHEX60gensym182_956312599).length - 1)], NTI33554439);
    Label1: do {
      F.line = 898;
      var iHEX60gensym182_956312616 = 0;
      F.line = 117;
      var colontmp__436210856 = 0;
      F.line = 898;
      colontmp__436210856 = (sHEX60gensym182_956312599).length;
      F.line = 119;
      var i_436210857 = 1;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436210857 < colontmp__436210856)) break Label3;
            F.line = 898;
            iHEX60gensym182_956312616 = i_436210857;
            F.line = 900;
            var a_956312617 = nimCopy(null, resultHEX60gensym182_956312608, NTI33554439);
            F.line = 901;
            var b_956312618 = nimCopy(null, sHEX60gensym182_956312599[chckIndx(iHEX60gensym182_956312616, 0, (sHEX60gensym182_956312599).length - 1)], NTI33554439);
            F.line = 457;
            resultHEX60gensym182_956312608 = nimCopy(null, (a_956312617 || []).concat(makeNimstrLit(",") || [],b_956312618 || []), NTI33554439);
            F.line = 122;
            i_436210857 = addInt(i_436210857, 1);
          }
      } while (false);
    } while (false);
    result_956312595.push.apply(result_956312595, (makeNimstrLit("V={") || []).concat(resultHEX60gensym182_956312608 || [],makeNimstrLit("}\x0A") || []));;
    F.line = 458;
    F.line = 894;
    var sHEX60gensym186_956312622 = nimCopy(null, cfg_956312594.Field1, NTI956307480);
    if (!((0 < (sHEX60gensym186_956312622).length))) {
    F.line = 895;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym186.len > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 896;
    var resultHEX60gensym186_956312631 = [];
    F.line = 897;
    resultHEX60gensym186_956312631 = nimCopy(null, sHEX60gensym186_956312622[chckIndx(0, 0, (sHEX60gensym186_956312622).length - 1)], NTI33554439);
    Label4: do {
      F.line = 898;
      var iHEX60gensym186_956312639 = 0;
      F.line = 117;
      var colontmp__436210864 = 0;
      F.line = 898;
      colontmp__436210864 = (sHEX60gensym186_956312622).length;
      F.line = 119;
      var i_436210865 = 1;
      Label5: do {
        F.line = 120;
          Label6: while (true) {
          if (!(i_436210865 < colontmp__436210864)) break Label6;
            F.line = 898;
            iHEX60gensym186_956312639 = i_436210865;
            F.line = 900;
            var a_956312640 = nimCopy(null, resultHEX60gensym186_956312631, NTI33554439);
            F.line = 901;
            var b_956312641 = nimCopy(null, sHEX60gensym186_956312622[chckIndx(iHEX60gensym186_956312639, 0, (sHEX60gensym186_956312622).length - 1)], NTI33554439);
            F.line = 458;
            resultHEX60gensym186_956312631 = nimCopy(null, (a_956312640 || []).concat(makeNimstrLit(",") || [],b_956312641 || []), NTI33554439);
            F.line = 122;
            i_436210865 = addInt(i_436210865, 1);
          }
      } while (false);
    } while (false);
    result_956312595.push.apply(result_956312595, (makeNimstrLit("T={") || []).concat(resultHEX60gensym186_956312631 || [],makeNimstrLit("}\x0A") || []));;
    F.line = 459;
    result_956312595.push.apply(result_956312595, makeNimstrLit("P={\x0A"));;
    Label7: do {
      F.line = 460;
      var k_956312646 = [];
      F.line = 460;
      var v_956312647 = [];
      F.line = 1717;
      var L_436210872 = len_956307727(cfg_956312594.Field2);
      if ((0 < cfg_956312594.Field2.counter)) {
      F.line = 1299;
      var h_436210873 = cfg_956312594.Field2.first;
      Label8: do {
        F.line = 1300;
          Label9: while (true) {
          if (!(0 <= h_436210873)) break Label9;
            F.line = 1301;
            var nxt_436210875 = cfg_956312594.Field2.data[chckIndx(h_436210873, 0, (cfg_956312594.Field2.data).length - 1)].Field1;
            if (isFilled_570425375(cfg_956312594.Field2.data[chckIndx(h_436210873, 0, (cfg_956312594.Field2.data).length - 1)].Field0)) {
            F.line = 460;
            k_956312646 = cfg_956312594.Field2.data[chckIndx(h_436210873, 0, (cfg_956312594.Field2.data).length - 1)].Field2;
            F.line = 460;
            v_956312647 = cfg_956312594.Field2.data[chckIndx(h_436210873, 0, (cfg_956312594.Field2.data).length - 1)].Field3;
            F.line = 461;
            var line_956312648 = (makeNimstrLit("    ") || []).concat(k_956312646 || [],makeNimstrLit(" -> ") || []);
            if (!(HEX3DHEX3D_956304566(v_956312647, []))) {
            F.line = 463;
            F.line = 894;
            var sHEX60gensym195_956312697 = map_956304627(v_956312647, HEX3Aanonymous_956312657);
            if (!((0 < (sHEX60gensym195_956312697).length))) {
            F.line = 895;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym195.len > 0` Can\'t fold empty sequences"));
            }
            
            F.line = 896;
            var resultHEX60gensym195_956312706 = [];
            F.line = 897;
            resultHEX60gensym195_956312706 = nimCopy(null, sHEX60gensym195_956312697[chckIndx(0, 0, (sHEX60gensym195_956312697).length - 1)], NTI33554439);
            Label10: do {
              F.line = 898;
              var iHEX60gensym195_956312714 = 0;
              F.line = 117;
              var colontmp__436210869 = 0;
              F.line = 898;
              colontmp__436210869 = (sHEX60gensym195_956312697).length;
              F.line = 119;
              var i_436210870 = 1;
              Label11: do {
                F.line = 120;
                  Label12: while (true) {
                  if (!(i_436210870 < colontmp__436210869)) break Label12;
                    F.line = 898;
                    iHEX60gensym195_956312714 = i_436210870;
                    F.line = 900;
                    var a_956312715 = nimCopy(null, resultHEX60gensym195_956312706, NTI33554439);
                    F.line = 901;
                    var b_956312716 = nimCopy(null, sHEX60gensym195_956312697[chckIndx(iHEX60gensym195_956312714, 0, (sHEX60gensym195_956312697).length - 1)], NTI33554439);
                    F.line = 463;
                    resultHEX60gensym195_956312706 = nimCopy(null, (a_956312715 || []).concat(makeNimstrLit(" | ") || [],b_956312716 || []), NTI33554439);
                    F.line = 122;
                    i_436210870 = addInt(i_436210870, 1);
                  }
              } while (false);
            } while (false);
            line_956312648.push.apply(line_956312648, resultHEX60gensym195_956312706);;
            }
            
            F.line = 460;
            result_956312595.push.apply(result_956312595, (line_956312648 || []).concat(makeNimstrLit("\x0A") || []));;
            if (!((len_956307727(cfg_956312594.Field2) == L_436210872))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210873 = nxt_436210875;
          }
      } while (false);
      }
      
    } while (false);
    F.line = 465;
    result_956312595.push.apply(result_956312595, makeNimstrLit("  }\x0A"));;
    F.line = 466;
    F.line = 894;
    var sHEX60gensym199_956312720 = nimCopy(null, cfg_956312594.Field3, NTI956307489);
    if (!((0 < (sHEX60gensym199_956312720).length))) {
    F.line = 895;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\sequtils.nim(895, 10) `s`gensym199.len > 0` Can\'t fold empty sequences"));
    }
    
    F.line = 896;
    var resultHEX60gensym199_956312729 = [];
    F.line = 897;
    resultHEX60gensym199_956312729 = nimCopy(null, sHEX60gensym199_956312720[chckIndx(0, 0, (sHEX60gensym199_956312720).length - 1)], NTI33554439);
    Label13: do {
      F.line = 898;
      var iHEX60gensym199_956312737 = 0;
      F.line = 117;
      var colontmp__436210881 = 0;
      F.line = 898;
      colontmp__436210881 = (sHEX60gensym199_956312720).length;
      F.line = 119;
      var i_436210882 = 1;
      Label14: do {
        F.line = 120;
          Label15: while (true) {
          if (!(i_436210882 < colontmp__436210881)) break Label15;
            F.line = 898;
            iHEX60gensym199_956312737 = i_436210882;
            F.line = 900;
            var a_956312738 = nimCopy(null, resultHEX60gensym199_956312729, NTI33554439);
            F.line = 901;
            var b_956312739 = nimCopy(null, sHEX60gensym199_956312720[chckIndx(iHEX60gensym199_956312737, 0, (sHEX60gensym199_956312720).length - 1)], NTI33554439);
            F.line = 466;
            resultHEX60gensym199_956312729 = nimCopy(null, (a_956312738 || []).concat(makeNimstrLit(",") || [],b_956312739 || []), NTI33554439);
            F.line = 122;
            i_436210882 = addInt(i_436210882, 1);
          }
      } while (false);
    } while (false);
    result_956312595.push.apply(result_956312595, (makeNimstrLit("S={") || []).concat(resultHEX60gensym199_956312729 || [],makeNimstrLit("}\x0A") || []));;
  framePtr = F.prev;

  return result_956312595;

}

function toCFGtxt() {
    
function HEX2B_436209772(m1_436209773, m2_436209774) {
      var result_436209775 = [];

      var F = {procname: "toCFGtxt.+", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 111;
        result_436209775 = nimCopy(null, newPDAmtx_956301415(N_436207624[0]), NTI956301315);
        Label1: do {
          F.line = 112;
          var i_436209780 = 0;
          F.line = 119;
          var i_436210339 = 0;
          Label2: do {
            F.line = 120;
              Label3: while (true) {
              if (!(i_436210339 < N_436207624[0])) break Label3;
                F.line = 112;
                i_436209780 = i_436210339;
                Label4: do {
                  F.line = 113;
                  var j_436209785 = 0;
                  F.line = 119;
                  var i_436210337 = 0;
                  Label5: do {
                    F.line = 120;
                      Label6: while (true) {
                      if (!(i_436210337 < N_436207624[0])) break Label6;
                        F.line = 113;
                        j_436209785 = i_436210337;
                        F.line = 113;
                        result_436209775[chckIndx(i_436209780, 0, (result_436209775).length - 1)][chckIndx(j_436209785, 0, (result_436209775[chckIndx(i_436209780, 0, (result_436209775).length - 1)]).length - 1)] = nimCopy(null, HEX2B_956304195(m1_436209773[chckIndx(i_436209780, 0, (m1_436209773).length - 1)][chckIndx(j_436209785, 0, (m1_436209773[chckIndx(i_436209780, 0, (m1_436209773).length - 1)]).length - 1)], m2_436209774[chckIndx(i_436209780, 0, (m2_436209774).length - 1)][chckIndx(j_436209785, 0, (m2_436209774[chckIndx(i_436209780, 0, (m2_436209774).length - 1)]).length - 1)]), NTI33554439);
                        F.line = 122;
                        i_436210337 = addInt(i_436210337, 1);
                      }
                  } while (false);
                } while (false);
                F.line = 122;
                i_436210339 = addInt(i_436210339, 1);
              }
          } while (false);
        } while (false);
      framePtr = F.prev;

      return result_436209775;

    }
    
function HEX2A_436209753(m1_436209754, m2_436209755) {
      var result_436209756 = [];

      var F = {procname: "toCFGtxt.*", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 103;
        result_436209756 = nimCopy(null, newPDAmtx_956301415(N_436207624[0]), NTI956301315);
        Label1: do {
          F.line = 104;
          var i_436209761 = 0;
          F.line = 119;
          var i_436210348 = 0;
          Label2: do {
            F.line = 120;
              Label3: while (true) {
              if (!(i_436210348 < N_436207624[0])) break Label3;
                F.line = 104;
                i_436209761 = i_436210348;
                Label4: do {
                  F.line = 105;
                  var j_436209766 = 0;
                  F.line = 119;
                  var i_436210346 = 0;
                  Label5: do {
                    F.line = 120;
                      Label6: while (true) {
                      if (!(i_436210346 < N_436207624[0])) break Label6;
                        F.line = 105;
                        j_436209766 = i_436210346;
                        F.line = 106;
                        result_436209756[chckIndx(i_436209761, 0, (result_436209756).length - 1)][chckIndx(j_436209766, 0, (result_436209756[chckIndx(i_436209761, 0, (result_436209756).length - 1)]).length - 1)] = nimCopy(null, makeNimstrLit(" "), NTI33554439);
                        Label7: do {
                          F.line = 107;
                          var k_436209771 = 0;
                          F.line = 119;
                          var i_436210344 = 0;
                          Label8: do {
                            F.line = 120;
                              Label9: while (true) {
                              if (!(i_436210344 < N_436207624[0])) break Label9;
                                F.line = 107;
                                k_436209771 = i_436210344;
                                F.line = 107;
                                result_436209756[chckIndx(i_436209761, 0, (result_436209756).length - 1)][chckIndx(j_436209766, 0, (result_436209756[chckIndx(i_436209761, 0, (result_436209756).length - 1)]).length - 1)] = nimCopy(null, HEX2B_956304195(result_436209756[chckIndx(i_436209761, 0, (result_436209756).length - 1)][chckIndx(j_436209766, 0, (result_436209756[chckIndx(i_436209761, 0, (result_436209756).length - 1)]).length - 1)], HEX2A_956304191(m1_436209754[chckIndx(i_436209761, 0, (m1_436209754).length - 1)][chckIndx(k_436209771, 0, (m1_436209754[chckIndx(i_436209761, 0, (m1_436209754).length - 1)]).length - 1)], m2_436209755[chckIndx(k_436209771, 0, (m2_436209755).length - 1)][chckIndx(j_436209766, 0, (m2_436209755[chckIndx(k_436209771, 0, (m2_436209755).length - 1)]).length - 1)])), NTI33554439);
                                F.line = 122;
                                i_436210344 = addInt(i_436210344, 1);
                              }
                          } while (false);
                        } while (false);
                        F.line = 122;
                        i_436210346 = addInt(i_436210346, 1);
                      }
                  } while (false);
                } while (false);
                F.line = 122;
                i_436210348 = addInt(i_436210348, 1);
              }
          } while (false);
        } while (false);
      framePtr = F.prev;

      return result_436209756;

    }
      
function HEX3Aanonymous_436209789(s_436209792) {
          var Temporary1;
          var Temporary2;

        var result_436209795 = [];

        var F = {procname: "toCFGtxt.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
        framePtr = F;
          F.line = 119;
          result_436209795 = nimCopy(null, HEX2A_436209753(HEX2A_436209753((Temporary1 = HEX5BHEX5D_436209371(m_436207631[0].Field0, s_436209792), Temporary1)[0][Temporary1[1]], mX_436209787), (Temporary2 = HEX5BHEX5D_436209371(m_436207631[0].Field1, s_436209792), Temporary2)[0][Temporary2[1]]), NTI956301315);
        framePtr = F.prev;

        return result_436209795;

      }
    
function whitestoDoubleQuotes_436209944(m_436209945, m_436209945_Idx) {
                          var Temporary7;
                            var Temporary8;

      var result_436209946 = [];

      var F = {procname: "toCFGtxt.whitestoDoubleQuotes", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 123;
        result_436209946 = nimCopy(null, newPDAmtx_956301415(N_436207624[0]), NTI956301315);
        Label1: do {
          F.line = 124;
          var i_436209951 = 0;
          F.line = 119;
          var i_436210594 = 0;
          Label2: do {
            F.line = 120;
              Label3: while (true) {
              if (!(i_436210594 < N_436207624[0])) break Label3;
                F.line = 124;
                i_436209951 = i_436210594;
                Label4: do {
                  F.line = 125;
                  var j_436209956 = 0;
                  F.line = 119;
                  var i_436210592 = 0;
                  Label5: do {
                    F.line = 120;
                      Label6: while (true) {
                      if (!(i_436210592 < N_436207624[0])) break Label6;
                        F.line = 125;
                        j_436209956 = i_436210592;
                          if (!contains_620758679(m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)], makeNimstrLit("+"))) Temporary7 = false; else {                            if (!nsuStartsWith(m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)], makeNimstrLit("("))) Temporary8 = false; else {                              Temporary8 = nsuEndsWith(m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)], makeNimstrLit(")"));                            }                            Temporary7 = !(Temporary8);                          }                        if (Temporary7) {
                        F.line = 127;
                        result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)][chckIndx(j_436209956, 0, (result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)]).length - 1)] = nimCopy(null, (makeNimstrLit("(") || []).concat(m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)] || [],makeNimstrLit(")") || []), NTI33554439);
                        }
                        else {
                          F.line = 127;
                          result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)][chckIndx(j_436209956, 0, (result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)]).length - 1)] = nimCopy(null, m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)], NTI33554439);
                        }
                        
                        if (allCharsInSet_620758395(m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)], ConstSet62)) {
                        F.line = 128;
                        result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)][chckIndx(j_436209956, 0, (result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)]).length - 1)] = nimCopy(null, [], NTI33554439);
                        }
                        else {
                          F.line = 128;
                          result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)][chckIndx(j_436209956, 0, (result_436209946[chckIndx(i_436209951, 0, (result_436209946).length - 1)]).length - 1)] = nimCopy(null, m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)][chckIndx(j_436209956, 0, (m_436209945[m_436209945_Idx][chckIndx(i_436209951, 0, (m_436209945[m_436209945_Idx]).length - 1)]).length - 1)], NTI33554439);
                        }
                        
                        F.line = 122;
                        i_436210592 = addInt(i_436210592, 1);
                      }
                  } while (false);
                } while (false);
                F.line = 122;
                i_436210594 = addInt(i_436210594, 1);
              }
          } while (false);
        } while (false);
      framePtr = F.prev;

      return result_436209946;

    }
                          
function HEX3Aanonymous_436209976(x_436209979) {
                            var result_436209982 = false;

                            var F = {procname: "toCFGtxt.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                            framePtr = F;
                              F.line = 167;
                              result_436209982 = ((isTerminal_956307213(x_436209979) || eqStrings(x_436209979, makeNimstrLit("\xCE\xB5"))) || !(isEpshilonSymb_956307216(grsf_436209958[0], x_436209979)));
                            framePtr = F.prev;

                            return result_436209982;

                          }
                  
function HEX3Aanonymous_436210031(x_436210034) {
                    var result_436210037 = false;

                    var F = {procname: "toCFGtxt.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
                    framePtr = F;
                      F.line = 171;
                      result_436210037 = !(HEX3DHEX3D_956302613(x_436210034, [makeNimstrLit("\xCE\xB5")]));
                    framePtr = F.prev;

                    return result_436210037;

                  }
    
function HEX3Aanonymous_436210198(s_436210201) {
      var result_436210204 = false;

      var F = {procname: "toCFGtxt.:anonymous", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
      framePtr = F;
        F.line = 183;
        result_436210204 = hasKey_436210245(grsf_436209958[0], s_436210201);
      framePtr = F.prev;

      return result_436210204;

    }

  var result_436209752 = null;

  var F = {procname: "PDAtoCFGjs.toCFGtxt", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 116;
    var mI_436209786 = makeIdentmtx_956301437(N_436207624[0]);
    F.line = 117;
    var mX_436209787 = makeNpairmtx_956301450(N_436207624[0]);
    F.line = 118;
    var mZ_436209788 = makeZeromtx_956301463(N_436207624[0]);
    F.line = 119;
    F.line = 924;
    var resultHEX60gensym61_436209936 = nimCopy(null, mZ_436209788, NTI956301315);
    Label1: do {
      F.line = 925;
      var xHEX60gensym61_436209940 = [];
      F.line = 233;
      var colontmp__436210286 = [];
      F.line = 119;
      colontmp__436210286 = map_436209912(m_436207631[0].Field3, HEX3Aanonymous_436209789);
      F.line = 235;
      var i_436210288 = 0;
      F.line = 236;
      var L_436210289 = (colontmp__436210286).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436210288 < L_436210289)) break Label3;
            F.line = 925;
            xHEX60gensym61_436209940 = colontmp__436210286[chckIndx(i_436210288, 0, (colontmp__436210286).length - 1)];
            F.line = 927;
            var a_436209941 = nimCopy(null, resultHEX60gensym61_436209936, NTI956301315);
            F.line = 928;
            var b_436209942 = nimCopy(null, xHEX60gensym61_436209940, NTI956304922);
            F.line = 119;
            resultHEX60gensym61_436209936 = nimCopy(null, HEX2B_436209772(a_436209941, b_436209942), NTI956301315);
            F.line = 239;
            i_436210288 = addInt(i_436210288, 1);
            if (!(((colontmp__436210286).length == L_436210289))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    var mXrhs_436209943 = [HEX2B_436209772(HEX2A_436209753(HEX2B_436209772(resultHEX60gensym61_436209936, m_436207631[0].Field2), mX_436209787), mI_436209786)];
    F.line = 129;
    mXrhs_436209943[0] = nimCopy(null, whitestoDoubleQuotes_436209944(mXrhs_436209943, 0), NTI956301315);
    F.line = 133;
    var textarea_436209957 = [];
    F.line = 134;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal multiplied & added CFG matrix form:\x0A"));;
    F.line = 135;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956301397(mXrhs_436209943[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 139;
    var grsf_436209958 = [toRulesflagged_956304797(mXrhs_436209943[0])];
    F.line = 141;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal flag-appended CFG matrix form:\x0A"));;
    F.line = 142;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 146;
    compGenerative_956306888(grsf_436209958[0]);
    F.line = 147;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal generative-flagged CFG matrix form:\x0A"));;
    F.line = 148;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 149;
    grsf_436209958[0] = nimCopy(grsf_436209958[0], delNongeneBody_956307029(grsf_436209958[0]), NTI956303001);
    F.line = 150;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal generative-body only CFG rules form:\x0A"));;
    F.line = 151;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 152;
    grsf_436209958[0] = nimCopy(grsf_436209958[0], delNongeneSymb_956307153(grsf_436209958[0]), NTI956303001);
    F.line = 153;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal generative-symbol only CFG rules form:\x0A"));;
    F.line = 154;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 160;
    var isChanging_436209959 = true;
    Label4: do {
      F.line = 161;
        Label5: while (true) {
        if (!isChanging_436209959) break Label5;
          F.line = 162;
          isChanging_436209959 = false;
          F.line = 163;
          var newrsf_436209964 = [initOrderedTable_956304800(32)];
          Label6: do {
            F.line = 164;
            var h_436209969 = [];
            F.line = 164;
            var fbs_436209970 = {Field0: false, Field1: []};
            F.line = 1717;
            var L_436210299 = len_956304268(grsf_436209958[0]);
            if ((0 < grsf_436209958[0].counter)) {
            F.line = 1299;
            var h_436210300 = grsf_436209958[0].first;
            Label7: do {
              F.line = 1300;
                Label8: while (true) {
                if (!(0 <= h_436210300)) break Label8;
                  F.line = 1301;
                  var nxt_436210302 = grsf_436209958[0].data[chckIndx(h_436210300, 0, (grsf_436209958[0].data).length - 1)].Field1;
                  if (isFilled_570425375(grsf_436209958[0].data[chckIndx(h_436210300, 0, (grsf_436209958[0].data).length - 1)].Field0)) {
                  F.line = 164;
                  h_436209969 = grsf_436209958[0].data[chckIndx(h_436210300, 0, (grsf_436209958[0].data).length - 1)].Field2;
                  F.line = 164;
                  fbs_436209970 = nimCopy(fbs_436209970, grsf_436209958[0].data[chckIndx(h_436210300, 0, (grsf_436209958[0].data).length - 1)].Field3, NTI956302992);
                  F.line = 165;
                  var newfbs_436209971 = {Field0: false, Field1: []};
                  Label9: do {
                    F.line = 166;
                    var b_436209975 = [];
                    F.line = 235;
                    var i_436210295 = 0;
                    F.line = 236;
                    var L_436210296 = (fbs_436209970.Field1).length;
                    Label10: do {
                      F.line = 237;
                        Label11: while (true) {
                        if (!(i_436210295 < L_436210296)) break Label11;
                          F.line = 166;
                          b_436209975 = fbs_436209970.Field1[chckIndx(i_436210295, 0, (fbs_436209970.Field1).length - 1)];
                          F.line = 167;
                          var newb_436209989 = filter_956306820(b_436209975, HEX3Aanonymous_436209976);
                          if (HEX3DHEX3D_956302613(newb_436209989, [])) {
                          F.line = 168;
                          newb_436209989 = nimCopy(null, [makeNimstrLit("\xCE\xB5")], NTI956302825);
                          }
                          
                          F.line = 169;
                          add_956308992(newfbs_436209971, "Field1", [nimCopy(null, newb_436209989, NTI956304452)]);
                          F.line = 239;
                          i_436210295 = addInt(i_436210295, 1);
                          if (!(((fbs_436209970.Field1).length == L_436210296))) {
                          F.line = 240;
                          failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    } while (false);
                  } while (false);
                  if ((2 <= count_436210014(newfbs_436209971.Field1, [makeNimstrLit("\xCE\xB5")]))) {
                  F.line = 171;
                  newfbs_436209971.Field1 = nimCopy(null, HEX26_436210060(filter_956307072(newfbs_436209971.Field1, HEX3Aanonymous_436210031), [[makeNimstrLit("\xCE\xB5")]]), NTI436209140);
                  F.line = 172;
                  isChanging_436209959 = true;
                  }
                  
                  F.line = 164;
                  HEX5BHEX5DHEX3D_956304908(newrsf_436209964[0], h_436209969, {Field0: HEX5BHEX5D_956306950(grsf_436209958[0], h_436209969).Field0, Field1: nimCopy(null, newfbs_436209971.Field1, NTI956303009)});
                  if (!((len_956304268(grsf_436209958[0]) == L_436210299))) {
                  F.line = 1720;
                  failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
                  }
                  
                  }
                  
                  F.line = 1304;
                  h_436210300 = nxt_436210302;
                }
            } while (false);
            }
            
          } while (false);
          F.line = 174;
          grsf_436209958[0] = nimCopy(grsf_436209958[0], newrsf_436209964[0], NTI956303001);
        }
    } while (false);
    F.line = 175;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal epsilon-contraced CFG rules form:\x0A"));;
    F.line = 176;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 180;
    grsf_436209958[0] = nimCopy(grsf_436209958[0], setflagsfalse_956307299(grsf_436209958[0]), NTI956303001);
    F.line = 181;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal flags-falsed CFG rules form:\x0A"));;
    F.line = 182;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 183;
    var ssyms_436210272 = filter_956306820(startSyms_956307359(m_436207631[0].Field4, m_436207631[0].Field5), HEX3Aanonymous_436210198);
    Label12: do {
      F.line = 186;
      var st_436210276 = [];
      F.line = 235;
      var i_436210304 = 0;
      F.line = 236;
      var L_436210305 = (ssyms_436210272).length;
      Label13: do {
        F.line = 237;
          Label14: while (true) {
          if (!(i_436210304 < L_436210305)) break Label14;
            F.line = 186;
            st_436210276 = ssyms_436210272[chckIndx(i_436210304, 0, (ssyms_436210272).length - 1)];
            F.line = 186;
            DFSfrom_956307375(grsf_436209958[0], st_436210276);
            F.line = 239;
            i_436210304 = addInt(i_436210304, 1);
            if (!(((ssyms_436210272).length == L_436210305))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    F.line = 188;
    grsf_436209958[0] = nimCopy(grsf_436209958[0], delFalseflagSymb_956307605(grsf_436209958[0]), NTI956303001);
    F.line = 189;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal reachable symbol only CFG rules form:\x0A"));;
    F.line = 190;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956304700(grsf_436209958[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 191;
    var grs_436210277 = numVartoAlphaVar_956308167(grsf_436209958[0], ssyms_436210272);
    F.line = 192;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal alphabetical nonterminal CFG rules form:\x0A"));;
    F.line = 193;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956308089(grs_436210277) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 194;
    grs_436210277 = nimCopy(grs_436210277, sortRules_956310836(grs_436210277), NTI956304929);
    F.line = 195;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal start-symbol-first CFG rules form:\x0A"));;
    F.line = 196;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956308089(grs_436210277) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 198;
    grs_436210277 = nimCopy(grs_436210277, sortBodies_956311046(grs_436210277), NTI956304929);
    F.line = 199;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal longer-body-first CFG rules form:\x0A"));;
    F.line = 200;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956308089(grs_436210277) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 204;
    var colontmp__436210812 = extractVerTer_956311216(grs_436210277);
    F.line = 204;
    var grsV_436210278 = nimCopy(null, colontmp__436210812["Field0"], NTI956306840);
    F.line = 204;
    var grsT_436210279 = nimCopy(null, colontmp__436210812["Field1"], NTI956306841);
    F.line = 207;
    var colontmp__436210307 = nimCopy(null, grsV_436210278, NTI956307479);
    F.line = 208;
    var colontmp__436210308 = nimCopy(null, grsT_436210279, NTI956307480);
    F.line = 209;
    var colontmp__436210309 = nimCopy(null, grs_436210277, NTI956304929);
    F.line = 210;
    var colontmp__436210310 = startSyms_956312740(grs_436210277);
    F.line = 205;
    gcfg_436207632[0] = nimCopy(gcfg_436207632[0], {Field0: nimCopy(null, colontmp__436210307, NTI956307479), Field1: nimCopy(null, colontmp__436210308, NTI956307480), Field2: nimCopy(null, colontmp__436210309, NTI956304929), Field3: nimCopy(null, colontmp__436210310, NTI956307489)}, NTI956307478);
    F.line = 212;
    textarea_436209957.push.apply(textarea_436209957, makeNimstrLit("Internal ordinary CFG form:\x0A"));;
    F.line = 213;
    textarea_436209957.push.apply(textarea_436209957, (sshow_956312593(gcfg_436207632[0]) || []).concat(makeNimstrLit("\x0A") || []));;
    F.line = 214;
    result_436209752 = toJSStr(textarea_436209957);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_436209752;

}
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
F.line = 215;
rawEcho(cstrToNimstr(toCFGtxt()));
framePtr = F.prev;

function HEX25_1342179105(keyVals_1342179108) {
            var Temporary4;

  var result_1342179109 = null;

  var F = {procname: "json.%", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((keyVals_1342179108).length == 0)) {
    F.line = 355;
    result_1342179109 = newJArray_1342177403();
    break BeforeRet;
    }
    
    F.line = 356;
    result_1342179109 = newJObject_1342177372();
    Label1: do {
      F.line = 357;
      var key_1342179125 = [];
      F.line = 357;
      var val_1342179126 = null;
      F.line = 8;
      var i_436210981 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210981 < (keyVals_1342179108).length)) break Label3;
            F.line = 357;
            key_1342179125 = keyVals_1342179108[chckIndx(i_436210981, 0, (keyVals_1342179108).length - 1)]["Field0"];
            F.line = 357;
            val_1342179126 = keyVals_1342179108[chckIndx(i_436210981, 0, (keyVals_1342179108).length - 1)]["Field1"];
            F.line = 357;
            var Temporary4 = result_1342179109;
            if (ConstSet65[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1342177283)); }
            HEX5BHEX5DHEX3D_1342177571(Temporary4.fields, key_1342179125, val_1342179126);
            F.line = 11;
            i_436210981 = addInt(i_436210981, 1);
          }
      } while (false);
    } while (false);
  } while (false);
  framePtr = F.prev;

  return result_1342179109;

}

function HEX25_1342179076(s_1342179077) {
  var result_1342179078 = null;

  var F = {procname: "json.%", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 312;
    result_1342179078 = {kind: 4, str: nimCopy(null, s_1342179077, NTI33554439), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
  framePtr = F.prev;

  return result_1342179078;

}

function HEX25_436210890(elements_436210892) {
  var result_436210893 = null;

  var F = {procname: "%.%", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 363;
    result_436210893 = newJArray_1342177403();
    Label1: do {
      F.line = 364;
      var elem_436210897 = [];
      F.line = 8;
      var i_436210984 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210984 < (elements_436210892).length)) break Label3;
            F.line = 364;
            elem_436210897 = elements_436210892[chckIndx(i_436210984, 0, (elements_436210892).length - 1)];
            F.line = 364;
            add_1342177502(result_436210893, HEX25_1342179076(elem_436210897));
            F.line = 11;
            i_436210984 = addInt(i_436210984, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436210893;

}

function HEX25_436210929(elements_436210931) {
  var result_436210932 = null;

  var F = {procname: "%.%", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 363;
    result_436210932 = newJArray_1342177403();
    Label1: do {
      F.line = 364;
      var elem_436210936 = [];
      F.line = 8;
      var i_436210992 = 0;
      Label2: do {
        F.line = 9;
          Label3: while (true) {
          if (!(i_436210992 < (elements_436210931).length)) break Label3;
            F.line = 364;
            elem_436210936 = elements_436210931[chckIndx(i_436210992, 0, (elements_436210931).length - 1)];
            F.line = 364;
            add_1342177502(result_436210932, HEX25_436210890(elem_436210936));
            F.line = 11;
            i_436210992 = addInt(i_436210992, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_436210932;

}

function HEX25_436210918(table_436210921) {
  var result_436210922 = null;

  var F = {procname: "%.%", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 368;
    result_436210922 = newJObject_1342177372();
    Label1: do {
      F.line = 369;
      var k_436210927 = [];
      F.line = 369;
      var v_436210928 = [];
      F.line = 1717;
      var L_436210987 = len_956307727(table_436210921);
      if ((0 < table_436210921.counter)) {
      F.line = 1299;
      var h_436210988 = table_436210921.first;
      Label2: do {
        F.line = 1300;
          Label3: while (true) {
          if (!(0 <= h_436210988)) break Label3;
            F.line = 1301;
            var nxt_436210990 = table_436210921.data[chckIndx(h_436210988, 0, (table_436210921.data).length - 1)].Field1;
            if (isFilled_570425375(table_436210921.data[chckIndx(h_436210988, 0, (table_436210921.data).length - 1)].Field0)) {
            F.line = 369;
            k_436210927 = table_436210921.data[chckIndx(h_436210988, 0, (table_436210921.data).length - 1)].Field2;
            F.line = 369;
            v_436210928 = table_436210921.data[chckIndx(h_436210988, 0, (table_436210921.data).length - 1)].Field3;
            F.line = 369;
            HEX5BHEX5DHEX3D_1342179209(result_436210922, k_436210927, HEX25_436210929(v_436210928));
            if (!((len_956307727(table_436210921) == L_436210987))) {
            F.line = 1720;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            F.line = 1304;
            h_436210988 = nxt_436210990;
          }
      } while (false);
      }
      
    } while (false);
  framePtr = F.prev;

  return result_436210922;

}

function toHexImpl_620757709(x_620757710, len_620757711, handleNegative_620757712) {
  var result_620757713 = [];

  var F = {procname: "strutils.toHexImpl", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 904;
    var n_620757715 = x_620757710;
    F.line = 905;
    result_620757713 = nimCopy(null, mnewString(len_620757711), NTI33554439);
    Label1: do {
      F.line = 906;
      var j_620757721 = 0;
      F.line = 6;
      var colontmp__436211011 = 0;
      F.line = 906;
      colontmp__436211011 = subInt(len_620757711, 1);
      F.line = 33;
      var res_436211012 = colontmp__436211011;
      Label2: do {
        F.line = 34;
          Label3: while (true) {
          if (!(0 <= res_436211012)) break Label3;
            F.line = 906;
            j_620757721 = res_436211012;
            F.line = 907;
            result_620757713[chckIndx(j_620757721, 0, (result_620757713).length - 1)] = makeNimstrLit("0123456789ABCDEF")[chckIndx((n_620757715 & 15), 0, (makeNimstrLit("0123456789ABCDEF")).length - 1)];
            F.line = 908;
            n_620757715 = (n_620757715 >>> 4);
            if (((n_620757715 == 0) && handleNegative_620757712)) {
            F.line = 910;
            n_620757715 = 4294967295;
            }
            
            F.line = 36;
            res_436211012 = subInt(res_436211012, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_620757713;

}

function toHex_620758840(x_620758842, len_620758843) {
  var result_620758844 = [];

  var F = {procname: "toHex.toHex", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 913;
    result_620758844 = nimCopy(null, toHexImpl_620757709((x_620758842 >>> 0), len_620758843, (x_620758842 < 0)), NTI33554439);
  framePtr = F.prev;

  return result_620758844;

}

function escapeJsonUnquoted_1342181638(s_1342181639, result_1342181640, result_1342181640_Idx) {
  var F = {procname: "json.escapeJsonUnquoted", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 667;
      var c_1342181641 = 0;
      F.line = 253;
      var i_436211007 = 0;
      F.line = 254;
      var L_436211008 = (s_1342181639).length;
      Label2: do {
        F.line = 255;
          Label3: while (true) {
          if (!(i_436211007 < L_436211008)) break Label3;
            F.line = 667;
            c_1342181641 = s_1342181639[chckIndx(i_436211007, 0, (s_1342181639).length - 1)];
            F.line = 667;
            switch (c_1342181641) {
            case 10:
              F.line = 669;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\n"));;
              break;
            case 8:
              F.line = 670;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\b"));;
              break;
            case 12:
              F.line = 671;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\f"));;
              break;
            case 9:
              F.line = 672;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\t"));;
              break;
            case 11:
              F.line = 673;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\u000b"));;
              break;
            case 13:
              F.line = 674;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\r"));;
              break;
            case 34:
              F.line = 675;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\\""));;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              F.line = 676;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], (makeNimstrLit("\\u000") || []).concat(HEX24_318767107(c_1342181641) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              F.line = 677;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], (makeNimstrLit("\\u00") || []).concat(toHex_620758840(c_1342181641, 2) || []));;
              break;
            case 92:
              F.line = 678;
              result_1342181640[result_1342181640_Idx].push.apply(result_1342181640[result_1342181640_Idx], makeNimstrLit("\\\\"));;
              break;
            default: 
              F.line = 679;
              addChar(result_1342181640[result_1342181640_Idx], c_1342181641);;
              break;
            }
            F.line = 257;
            i_436211007 = addInt(i_436211007, 1);
            if (!(((s_1342181639).length == L_436211008))) {
            F.line = 258;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function escapeJson_1342181659(s_1342181660, result_1342181661, result_1342181661_Idx) {
  var F = {procname: "json.escapeJson", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 689;
    result_1342181661[result_1342181661_Idx].push.apply(result_1342181661[result_1342181661_Idx], makeNimstrLit("\""));;
    F.line = 690;
    escapeJsonUnquoted_1342181638(s_1342181660, result_1342181661, result_1342181661_Idx);
    F.line = 691;
    result_1342181661[result_1342181661_Idx].push.apply(result_1342181661[result_1342181661_Idx], makeNimstrLit("\""));;
  framePtr = F.prev;

  
}

function nimFloatToString_335544438(a_335544439) {
  var result_335544440 = null;

  var F = {procname: "formatfloat.nimFloatToString", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 101;
        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_335544439))
      result_335544440 = a_335544439 === 0 && 1 / a_335544439 < 0 ? "-0.0" : a_335544439+".0"
    else {
      result_335544440 = a_335544439+""
      if(nimOnlyDigitsOrMinus(result_335544440)){
        result_335544440 = a_335544439+".0"
      }
    }
  
  framePtr = F.prev;

  return result_335544440;

}

function addFloat_33557372(result_33557374, result_33557374_Idx, x_33557375) {
  var F = {procname: "addFloat.addFloat", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system\\formatfloat.nim", line: 0};
  framePtr = F;
    F.line = 131;
    add_33556419(result_33557374, result_33557374_Idx, nimFloatToString_335544438(x_33557375));
  framePtr = F.prev;

  
}

function toUgly_1342181669(result_1342181670, result_1342181670_Idx, node_1342181671) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

  var F = {procname: "json.toUgly", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 707;
    var comma_1342181672 = false;
    F.line = 708;
    switch (node_1342181671.kind) {
    case 6:
      F.line = 710;
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit("["));;
      Label1: do {
        F.line = 711;
        var child_1342181676 = null;
        F.line = 233;
        var colontmp__436210995 = [];
        F.line = 711;
        var Temporary2 = node_1342181671;
        if (ConstSet66[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1342177283)); }
        colontmp__436210995 = Temporary2.elems;
        F.line = 235;
        var i_436210997 = 0;
        F.line = 236;
        var L_436210998 = (colontmp__436210995).length;
        Label3: do {
          F.line = 237;
            Label4: while (true) {
            if (!(i_436210997 < L_436210998)) break Label4;
              F.line = 711;
              child_1342181676 = colontmp__436210995[chckIndx(i_436210997, 0, (colontmp__436210995).length - 1)];
              if (comma_1342181672) {
              F.line = 712;
              result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit(","));;
              }
              else {
                F.line = 713;
                comma_1342181672 = true;
              }
              
              F.line = 711;
              toUgly_1342181669(result_1342181670, result_1342181670_Idx, child_1342181676);
              F.line = 239;
              i_436210997 = addInt(i_436210997, 1);
              if (!(((colontmp__436210995).length == L_436210998))) {
              F.line = 240;
              failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      F.line = 715;
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit("]"));;
      break;
    case 5:
      F.line = 717;
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit("{"));;
      Label5: do {
        F.line = 718;
        var key_1342181681 = [];
        F.line = 718;
        var value_1342181682 = null;
        F.line = 1691;
        var colontmp__436211001 = ({data: [], counter: 0, first: 0, last: 0});
        F.line = 718;
        var Temporary6 = node_1342181671;
        if (ConstSet67[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1342177283)); }
        colontmp__436211001 = nimCopy(colontmp__436211001, Temporary6.fields, NTI1342177294);
        F.line = 1717;
        var L_436211002 = len_1342179420(colontmp__436211001);
        if ((0 < colontmp__436211001.counter)) {
        F.line = 1299;
        var h_436211003 = colontmp__436211001.first;
        Label7: do {
          F.line = 1300;
            Label8: while (true) {
            if (!(0 <= h_436211003)) break Label8;
              F.line = 1301;
              var nxt_436211005 = colontmp__436211001.data[chckIndx(h_436211003, 0, (colontmp__436211001.data).length - 1)].Field1;
              if (isFilled_570425375(colontmp__436211001.data[chckIndx(h_436211003, 0, (colontmp__436211001.data).length - 1)].Field0)) {
              F.line = 718;
              key_1342181681 = colontmp__436211001.data[chckIndx(h_436211003, 0, (colontmp__436211001.data).length - 1)].Field2;
              F.line = 718;
              value_1342181682 = colontmp__436211001.data[chckIndx(h_436211003, 0, (colontmp__436211001.data).length - 1)].Field3;
              if (comma_1342181672) {
              F.line = 719;
              result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit(","));;
              }
              else {
                F.line = 720;
                comma_1342181672 = true;
              }
              
              F.line = 718;
              escapeJson_1342181659(key_1342181681, result_1342181670, result_1342181670_Idx);
              F.line = 718;
              result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit(":"));;
              F.line = 718;
              toUgly_1342181669(result_1342181670, result_1342181670_Idx, value_1342181682);
              if (!((len_1342179420(colontmp__436211001) == L_436211002))) {
              F.line = 1720;
              failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim(1720, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              F.line = 1304;
              h_436211003 = nxt_436211005;
            }
        } while (false);
        }
        
      } while (false);
      F.line = 724;
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit("}"));;
      break;
    case 4:
      if (node_1342181671.isUnquoted) {
      F.line = 727;
      var Temporary9 = node_1342181671;
      if (ConstSet68[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1342177283)); }
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], Temporary9.str);;
      }
      else {
        F.line = 729;
        var Temporary10 = node_1342181671;
        if (ConstSet69[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1342177283)); }
      escapeJson_1342181659(Temporary10.str, result_1342181670, result_1342181670_Idx);
      }
      
      break;
    case 2:
      F.line = 731;
      var Temporary11 = node_1342181671;
      if (ConstSet70[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1342177283)); }
      addInt_251658436(result_1342181670, result_1342181670_Idx, Temporary11.num);
      break;
    case 3:
      F.line = 733;
      var Temporary12 = node_1342181671;
      if (ConstSet71[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1342177283)); }
      addFloat_33557372(result_1342181670, result_1342181670_Idx, Temporary12.fnum);
      break;
    case 1:
      F.line = 735;
        var Temporary14 = node_1342181671;
        if (ConstSet72[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1342177283)); }
      if (Temporary14.bval) {
      Temporary13 = makeNimstrLit("true");
      }
      else {
      Temporary13 = makeNimstrLit("false");
      }
      
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], Temporary13);;
      break;
    case 0:
      F.line = 737;
      result_1342181670[result_1342181670_Idx].push.apply(result_1342181670[result_1342181670_Idx], makeNimstrLit("null"));;
      break;
    }
  framePtr = F.prev;

  
}

function HEX24_1342181772(node_1342181773) {
  var result_1342181774 = [[]];

  var F = {procname: "json.$", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\json.nim", line: 0};
  framePtr = F;
    F.line = 819;
    result_1342181774[0] = nimCopy(null, mnewString(0), NTI33554439);
    F.line = 820;
    toUgly_1342181669(result_1342181774, 0, node_1342181773);
  framePtr = F.prev;

  return result_1342181774[0];

}

function toCFGjson() {
  var result_436210889 = null;

  var F = {procname: "PDAtoCFGjs.toCFGjson", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 221;
    var gj_436210960 = HEX25_1342179105([nimCopy(null, {Field0: makeNimstrLit("V"), Field1: HEX25_436210890(gcfg_436207632[0].Field0)}, NTI436209557), nimCopy(null, {Field0: makeNimstrLit("T"), Field1: HEX25_436210890(gcfg_436207632[0].Field1)}, NTI436209557), nimCopy(null, {Field0: makeNimstrLit("P"), Field1: HEX25_436210918(gcfg_436207632[0].Field2)}, NTI436209557), nimCopy(null, {Field0: makeNimstrLit("S"), Field1: HEX25_436210890(gcfg_436207632[0].Field3)}, NTI436209557)]);
    F.line = 222;
    result_436210889 = toJSStr(HEX24_1342181772(gj_436210960));
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_436210889;

}
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
F.line = 223;
rawEcho(cstrToNimstr(toCFGjson()));
framePtr = F.prev;

function rawGet_956312819(t_956312822, key_956312823, hc_956312824, hc_956312824_Idx) {
            var Temporary3;

  var result_956312825 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956312824[hc_956312824_Idx] = hash_637534657(key_956312823);
    if ((hc_956312824[hc_956312824_Idx] == 0)) {
    F.line = 66;
    hc_956312824[hc_956312824_Idx] = 314159265;
    }
    
    if (((t_956312822.data).length == 0)) {
    F.line = 48;
    result_956312825 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956312876 = (hc_956312824[hc_956312824_Idx] & (t_956312822.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956312822.data[chckIndx(h_956312876, 0, (t_956312822.data).length - 1)].Field0)) break Label2;
            if (!(t_956312822.data[chckIndx(h_956312876, 0, (t_956312822.data).length - 1)].Field0 == hc_956312824[hc_956312824_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956312822.data[chckIndx(h_956312876, 0, (t_956312822.data).length - 1)].Field2, key_956312823);            }          if (Temporary3) {
          F.line = 56;
          result_956312825 = h_956312876;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956312876 = nextTry_570425378(h_956312876, (t_956312822.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956312825 = subInt(-1, h_956312876);
  } while (false);
  framePtr = F.prev;

  return result_956312825;

}

function HEX5BHEX5D_956312812(t_956312815, key_956312816) {
  var result_956312817 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym87_956312818 = [0];
    F.line = 243;
    var indexHEX60gensym87_956313039 = rawGet_956312819(t_956312815, key_956312816, hcHEX60gensym87_956312818, 0);
    if ((0 <= indexHEX60gensym87_956313039)) {
    F.line = 244;
    result_956312817 = nimCopy(null, t_956312815.data[chckIndx(indexHEX60gensym87_956313039, 0, (t_956312815.data).length - 1)].Field3, NTI956304922);
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_956312816);
    }
    
  framePtr = F.prev;

  return result_956312817;

}

function countBodies_956313106(gr_956313107) {
  var result_956313108 = 0;

  var F = {procname: "PDA2CFG_separated_re.countBodies", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 486;
    result_956313108 = 0;
    Label1: do {
      F.line = 487;
      var v_956313112 = [];
      F.line = 235;
      var i_436211745 = 0;
      F.line = 236;
      var L_436211746 = (gr_956313107.Field0).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436211745 < L_436211746)) break Label3;
            F.line = 487;
            v_956313112 = gr_956313107.Field0[chckIndx(i_436211745, 0, (gr_956313107.Field0).length - 1)];
            Label4: do {
              F.line = 488;
              var b_956313174 = [];
              F.line = 233;
              var colontmp__436211741 = [];
              F.line = 488;
              colontmp__436211741 = HEX5BHEX5D_956312812(gr_956313107.Field2, v_956313112);
              F.line = 235;
              var i_436211742 = 0;
              F.line = 236;
              var L_436211743 = (colontmp__436211741).length;
              Label5: do {
                F.line = 237;
                  Label6: while (true) {
                  if (!(i_436211742 < L_436211743)) break Label6;
                    F.line = 488;
                    b_956313174 = colontmp__436211741[chckIndx(i_436211742, 0, (colontmp__436211741).length - 1)];
                    F.line = 488;
                    result_956313108 = addInt(result_956313108, 1);
                    F.line = 239;
                    i_436211742 = addInt(i_436211742, 1);
                    if (!(((colontmp__436211741).length == L_436211743))) {
                    F.line = 240;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 239;
            i_436211745 = addInt(i_436211745, 1);
            if (!(((gr_956313107.Field0).length == L_436211746))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956313108;

}

function longestBody_956312752(gr_956312753) {
                    var Temporary7;

  var result_956312754 = 0;

  var F = {procname: "PDA2CFG_separated_re.longestBody", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 481;
    result_956312754 = 0;
    Label1: do {
      F.line = 482;
      var v_956312758 = [];
      F.line = 235;
      var i_436211755 = 0;
      F.line = 236;
      var L_436211756 = (gr_956312753.Field0).length;
      Label2: do {
        F.line = 237;
          Label3: while (true) {
          if (!(i_436211755 < L_436211756)) break Label3;
            F.line = 482;
            v_956312758 = gr_956312753.Field0[chckIndx(i_436211755, 0, (gr_956312753.Field0).length - 1)];
            Label4: do {
              F.line = 483;
              var b_956313099 = [];
              F.line = 233;
              var colontmp__436211751 = [];
              F.line = 483;
              colontmp__436211751 = HEX5BHEX5D_956312812(gr_956312753.Field2, v_956312758);
              F.line = 235;
              var i_436211752 = 0;
              F.line = 236;
              var L_436211753 = (colontmp__436211751).length;
              Label5: do {
                F.line = 237;
                  Label6: while (true) {
                  if (!(i_436211752 < L_436211753)) break Label6;
                    F.line = 483;
                    b_956313099 = colontmp__436211751[chckIndx(i_436211752, 0, (colontmp__436211751).length - 1)];
                    F.line = 483;
                    if ((result_956312754 < (b_956313099).length)) {
                    Temporary7 = (b_956313099).length;
                    }
                    else {
                    Temporary7 = result_956312754;
                    }
                    
                    result_956312754 = Temporary7;
                    F.line = 239;
                    i_436211752 = addInt(i_436211752, 1);
                    if (!(((colontmp__436211751).length == L_436211753))) {
                    F.line = 240;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 239;
            i_436211755 = addInt(i_436211755, 1);
            if (!(((gr_956312753.Field0).length == L_436211756))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956312754;

}

function newGrpmtx_956313180(m_956313181, n_956313182) {
  var result_956313183 = [];

  var F = {procname: "PDA2CFG_separated_re.newGrpmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 493;
      var i_956313188 = 0;
      F.line = 119;
      var i_436211762 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436211762 < m_956313181)) break Label3;
            F.line = 493;
            i_956313188 = i_436211762;
            F.line = 494;
            var row_956313189 = [];
            Label4: do {
              F.line = 495;
              var j_956313194 = 0;
              F.line = 119;
              var i_436211760 = 0;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436211760 < n_956313182)) break Label6;
                    F.line = 495;
                    j_956313194 = i_436211760;
                    F.line = 495;
                    row_956313189.push([]);;
                    F.line = 122;
                    i_436211760 = addInt(i_436211760, 1);
                  }
              } while (false);
            } while (false);
            F.line = 497;
            var Temporary7 = nimCopy(null, row_956313189, NTI956308020);
            result_956313183.push(Temporary7);;
            F.line = 122;
            i_436211762 = addInt(i_436211762, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956313183;

}

function makeGrpmtx_956313213(gr_956313214) {
  var result_956313215 = [];

  var F = {procname: "PDA2CFG_separated_re.makeGrpmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 502;
    var maxsklnum_956313216 = countBodies_956313106(gr_956313214);
    F.line = 503;
    var maxgrnum_956313217 = addInt(longestBody_956312752(gr_956313214), 1);
    F.line = 504;
    var m_956313218 = addInt(maxsklnum_956313216, 1);
    F.line = 504;
    var n_956313219 = addInt(maxgrnum_956313217, 1);
    F.line = 505;
    result_956313215 = nimCopy(null, newGrpmtx_956313180(m_956313218, n_956313219), NTI956308012);
    Label1: do {
      F.line = 506;
      var j_956313224 = 0;
      F.line = 119;
      var i_436211720 = 0;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436211720 < n_956313219)) break Label3;
            F.line = 506;
            j_956313224 = i_436211720;
            F.line = 506;
            result_956313215[chckIndx(0, 0, (result_956313215).length - 1)][chckIndx(j_956313224, 0, (result_956313215[chckIndx(0, 0, (result_956313215).length - 1)]).length - 1)].push.apply(result_956313215[chckIndx(0, 0, (result_956313215).length - 1)][chckIndx(j_956313224, 0, (result_956313215[chckIndx(0, 0, (result_956313215).length - 1)]).length - 1)], (makeNimstrLit("g") || []).concat(HEX24_318767107(j_956313224) || []));;
            F.line = 122;
            i_436211720 = addInt(i_436211720, 1);
          }
      } while (false);
    } while (false);
    F.line = 507;
    var q_956313225 = 0;
    F.line = 508;
    var i_956313226 = 1;
    Label4: do {
      F.line = 509;
      var v_956313230 = [];
      F.line = 235;
      var i_436211736 = 0;
      F.line = 236;
      var L_436211737 = (gr_956313214.Field0).length;
      Label5: do {
        F.line = 237;
          Label6: while (true) {
          if (!(i_436211736 < L_436211737)) break Label6;
            F.line = 509;
            v_956313230 = gr_956313214.Field0[chckIndx(i_436211736, 0, (gr_956313214.Field0).length - 1)];
            Label7: do {
              F.line = 510;
              var nb1_956313294 = 0;
              F.line = 510;
              var b_956313295 = [];
              F.line = 166;
              var colontmp__436211732 = [];
              F.line = 510;
              colontmp__436211732 = HEX5BHEX5D_956312812(gr_956313214.Field2, v_956313230);
              F.line = 168;
              var i_436211733 = 0;
              F.line = 169;
              var L_436211734 = (colontmp__436211732).length;
              Label8: do {
                F.line = 170;
                  Label9: while (true) {
                  if (!(i_436211733 < L_436211734)) break Label9;
                    F.line = 510;
                    nb1_956313294 = i_436211733;
                    F.line = 510;
                    b_956313295 = colontmp__436211732[chckIndx(i_436211733, 0, (colontmp__436211732).length - 1)];
                    if ((nb1_956313294 == 0)) {
                    F.line = 512;
                    result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)][chckIndx(0, 0, (result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)]).length - 1)] = nimCopy(null, v_956313230, NTI33554439);
                    F.line = 513;
                    result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)][chckIndx(1, 0, (result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)]).length - 1)] = nimCopy(null, HEX24_318767107(q_956313225), NTI33554439);
                    F.line = 513;
                    q_956313225 = addInt(q_956313225, 1);
                    Label10: do {
                      F.line = 514;
                      var j_956313305 = 0;
                      F.line = 514;
                      var s_956313306 = [];
                      F.line = 168;
                      var i_436211725 = 0;
                      F.line = 169;
                      var L_436211726 = (b_956313295).length;
                      Label11: do {
                        F.line = 170;
                          Label12: while (true) {
                          if (!(i_436211725 < L_436211726)) break Label12;
                            F.line = 514;
                            j_956313305 = i_436211725;
                            F.line = 514;
                            s_956313306 = b_956313295[chckIndx(i_436211725, 0, (b_956313295).length - 1)];
                            F.line = 515;
                            result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)][chckIndx(addInt(j_956313305, 2), 0, (result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)]).length - 1)] = nimCopy(null, HEX24_318767107(q_956313225), NTI33554439);
                            F.line = 514;
                            q_956313225 = addInt(q_956313225, 1);
                            F.line = 172;
                            i_436211725 = addInt(i_436211725, 1);
                            if (!(((b_956313295).length == L_436211726))) {
                            F.line = 173;
                            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      } while (false);
                    } while (false);
                    }
                    else {
                      Label13: do {
                        F.line = 517;
                        var j_956313316 = 0;
                        F.line = 517;
                        var s_956313317 = [];
                        F.line = 168;
                        var i_436211729 = 0;
                        F.line = 169;
                        var L_436211730 = (b_956313295).length;
                        Label14: do {
                          F.line = 170;
                            Label15: while (true) {
                            if (!(i_436211729 < L_436211730)) break Label15;
                              F.line = 517;
                              j_956313316 = i_436211729;
                              F.line = 517;
                              s_956313317 = b_956313295[chckIndx(i_436211729, 0, (b_956313295).length - 1)];
                              F.line = 518;
                              result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)][chckIndx(addInt(j_956313316, 2), 0, (result_956313215[chckIndx(i_956313226, 0, (result_956313215).length - 1)]).length - 1)] = nimCopy(null, HEX24_318767107(q_956313225), NTI33554439);
                              F.line = 517;
                              q_956313225 = addInt(q_956313225, 1);
                              F.line = 172;
                              i_436211729 = addInt(i_436211729, 1);
                              if (!(((b_956313295).length == L_436211730))) {
                              F.line = 173;
                              failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        } while (false);
                      } while (false);
                    }
                    
                    F.line = 510;
                    i_956313226 = addInt(i_956313226, 1);
                    if ((49 < q_956313225)) {
                    F.line = 520;
                    raiseException({message: makeNimstrLit("too many states in CFG transition diagram to draw"), parent: null, m_type: NTI33555115, name: null, trace: [], up: null}, "IOError");
                    }
                    
                    F.line = 172;
                    i_436211733 = addInt(i_436211733, 1);
                    if (!(((colontmp__436211732).length == L_436211734))) {
                    F.line = 173;
                    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            F.line = 239;
            i_436211736 = addInt(i_436211736, 1);
            if (!(((gr_956313214.Field0).length == L_436211737))) {
            F.line = 240;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956313215;

}

function initTable_956313342(initialSize_956313345) {
  var result_956313351 = ({data: [], counter: 0});

  var F = {procname: "initTable.initTable", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 163;
    var correctSizeHEX60gensym211_956313353 = slotsNeeded_570425386(chckRange(initialSize_956313345, 0, 2147483647));
    F.line = 167;
    result_956313351.counter = 0;
    F.line = 168;
    result_956313351.data = new Array(chckRange(correctSizeHEX60gensym211_956313353, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym211_956313353, 0, 2147483647) ; ++i) { result_956313351.data[i] = {Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0}}; }  framePtr = F.prev;

  return result_956313351;

}

function findAccIndex_956313327(row_956313328) {
  var result_956313329 = 0;

  var F = {procname: "PDA2CFG_separated_re.findAccIndex", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    Label1: do {
      F.line = 522;
      var j_956313335 = 0;
      F.line = 522;
      var s_956313336 = [];
      F.line = 168;
      var i_436211769 = 0;
      F.line = 169;
      var L_436211770 = (row_956313328).length;
      Label2: do {
        F.line = 170;
          Label3: while (true) {
          if (!(i_436211769 < L_436211770)) break Label3;
            F.line = 522;
            j_956313335 = i_436211769;
            F.line = 522;
            s_956313336 = row_956313328[chckIndx(i_436211769, 0, (row_956313328).length - 1)];
            if (!(eqStrings(s_956313336, []))) {
            F.line = 523;
            result_956313329 = j_956313335;
            }
            
            F.line = 172;
            i_436211769 = addInt(i_436211769, 1);
            if (!(((row_956313328).length == L_436211770))) {
            F.line = 173;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956313329;

}

function rawGet_956313476(t_956313479, key_956313480, hc_956313481, hc_956313481_Idx) {
            var Temporary3;

  var result_956313482 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956313481[hc_956313481_Idx] = hash_637534657(key_956313480);
    if ((hc_956313481[hc_956313481_Idx] == 0)) {
    F.line = 66;
    hc_956313481[hc_956313481_Idx] = 314159265;
    }
    
    if (((t_956313479.data).length == 0)) {
    F.line = 48;
    result_956313482 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956313533 = (hc_956313481[hc_956313481_Idx] & (t_956313479.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956313479.data[chckIndx(h_956313533, 0, (t_956313479.data).length - 1)].Field0)) break Label2;
            if (!(t_956313479.data[chckIndx(h_956313533, 0, (t_956313479.data).length - 1)].Field0 == hc_956313481[hc_956313481_Idx])) Temporary3 = false; else {              Temporary3 = eqStrings(t_956313479.data[chckIndx(h_956313533, 0, (t_956313479.data).length - 1)].Field1, key_956313480);            }          if (Temporary3) {
          F.line = 56;
          result_956313482 = h_956313533;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956313533 = nextTry_570425378(h_956313533, (t_956313479.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956313482 = subInt(-1, h_956313533);
  } while (false);
  framePtr = F.prev;

  return result_956313482;

}

function mustRehash_956313812(t_956313814) {
  var result_956313815 = false;

  var F = {procname: "mustRehash.mustRehash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
    if (!((t_956313814.counter < (t_956313814.data).length))) {
    F.line = 29;
    failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim(29, 9) `\x0At.counter < t.dataLen` "));
    }
    
    F.line = 30;
    result_956313815 = ((mulInt((t_956313814.data).length, 2) < mulInt(t_956313814.counter, 3)) || (subInt((t_956313814.data).length, t_956313814.counter) < 4));
  framePtr = F.prev;

  return result_956313815;

}

function rawInsert_956314261(t_956314265, data_956314266, data_956314266_Idx, key_956314267, val_956314268, hc_956314269, h_956314270) {
  var F = {procname: "rawInsert.rawInsert", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tableimpl.nim", line: 0};
  framePtr = F;
    F.line = 22;
    data_956314266[data_956314266_Idx][chckIndx(h_956314270, 0, (data_956314266[data_956314266_Idx]).length - 1)].Field1 = nimCopy(null, key_956314267, NTI33554439);
    F.line = 23;
    data_956314266[data_956314266_Idx][chckIndx(h_956314270, 0, (data_956314266[data_956314266_Idx]).length - 1)].Field2 = nimCopy(data_956314266[data_956314266_Idx][chckIndx(h_956314270, 0, (data_956314266[data_956314266_Idx]).length - 1)].Field2, val_956314268, NTI956308108);
    F.line = 24;
    data_956314266[data_956314266_Idx][chckIndx(h_956314270, 0, (data_956314266[data_956314266_Idx]).length - 1)].Field0 = hc_956314269;
  framePtr = F.prev;

  
}

function enlarge_956313967(t_956313970) {
  var F = {procname: "enlarge.enlarge", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 249;
    var n_956313973 = [];
    F.line = 250;
    n_956313973 = new Array(chckRange(mulInt((t_956313970.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_956313970.data).length, 2), 0, 2147483647) ; ++i) { n_956313973[i] = {Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0}}; }    F.line = 251;
    var Temporary1 = t_956313970.data; t_956313970.data = n_956313973; n_956313973 = Temporary1;    Label2: do {
      F.line = 252;
      var i_956314037 = 0;
      F.line = 43;
      var colontmp__436211775 = 0;
      F.line = 252;
      colontmp__436211775 = (n_956313973).length - 1;
      F.line = 65;
      var res_436211776 = 0;
      Label3: do {
        F.line = 66;
          Label4: while (true) {
          if (!(res_436211776 <= colontmp__436211775)) break Label4;
            F.line = 252;
            i_956314037 = res_436211776;
            F.line = 253;
            var eh_956314091 = n_956313973[chckIndx(i_956314037, 0, (n_956313973).length - 1)].Field0;
            if (isFilled_570425375(eh_956314091)) {
            F.line = 255;
            var j_956314095 = (eh_956314091 & (t_956313970.data).length - 1);
            Label5: do {
              F.line = 256;
                Label6: while (true) {
                if (!isFilled_570425375(t_956313970.data[chckIndx(j_956314095, 0, (t_956313970.data).length - 1)].Field0)) break Label6;
                  F.line = 257;
                  j_956314095 = nextTry_570425378(j_956314095, (t_956313970.data).length - 1);
                }
            } while (false);
            F.line = 259;
            rawInsert_956314261(t_956313970, t_956313970, "data", n_956313973[chckIndx(i_956314037, 0, (n_956313973).length - 1)].Field1, n_956313973[chckIndx(i_956314037, 0, (n_956313973).length - 1)].Field2, eh_956314091, j_956314095);
            }
            
            F.line = 68;
            res_436211776 = addInt(res_436211776, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  
}

function rawGetKnownHC_956314430(t_956314433, key_956314434, hc_956314435) {
  var result_956314436 = 0;

  var F = {procname: "rawGetKnownHC.rawGetKnownHC", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (((t_956314433.data).length == 0)) {
    F.line = 48;
    result_956314436 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956314487 = (hc_956314435 & (t_956314433.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956314433.data[chckIndx(h_956314487, 0, (t_956314433.data).length - 1)].Field0)) break Label2;
          if (((t_956314433.data[chckIndx(h_956314487, 0, (t_956314433.data).length - 1)].Field0 == hc_956314435) && eqStrings(t_956314433.data[chckIndx(h_956314487, 0, (t_956314433.data).length - 1)].Field1, key_956314434))) {
          F.line = 56;
          result_956314436 = h_956314487;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956314487 = nextTry_570425378(h_956314487, (t_956314433.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956314436 = subInt(-1, h_956314487);
  } while (false);
  framePtr = F.prev;

  return result_956314436;

}

function HEX5BHEX5DHEX3D_956313415(t_956313418, key_956313419, val_956313420) {
  var F = {procname: "[]=.[]=", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    if (((t_956313418.data).length == 0)) {
    F.line = 163;
    var correctSizeHEX60gensym215_956313470 = slotsNeeded_570425386(32);
    F.line = 167;
    t_956313418.counter = 0;
    F.line = 168;
    t_956313418.data = new Array(chckRange(correctSizeHEX60gensym215_956313470, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym215_956313470, 0, 2147483647) ; ++i) { t_956313418.data[i] = {Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0}}; }    }
    
    F.line = 57;
    var hc_956313475 = [0];
    F.line = 58;
    var index_956313705 = rawGet_956313476(t_956313418, key_956313419, hc_956313475, 0);
    if ((0 <= index_956313705)) {
    F.line = 59;
    t_956313418.data[chckIndx(index_956313705, 0, (t_956313418.data).length - 1)].Field2 = nimCopy(t_956313418.data[chckIndx(index_956313705, 0, (t_956313418.data).length - 1)].Field2, val_956313420, NTI956308108);
    }
    else {
      if (((t_956313418.data).length == 0)) {
      F.line = 163;
      var correctSizeHEX60gensym220_956313807 = slotsNeeded_570425386(32);
      F.line = 167;
      t_956313418.counter = 0;
      F.line = 168;
      t_956313418.data = new Array(chckRange(correctSizeHEX60gensym220_956313807, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym220_956313807, 0, 2147483647) ; ++i) { t_956313418.data[i] = {Field0: 0, Field1: [], Field2: {Field0: 0, Field1: 0}}; }      }
      
      if (mustRehash_956313812(t_956313418)) {
      F.line = 49;
      enlarge_956313967(t_956313418);
      F.line = 50;
      index_956313705 = rawGetKnownHC_956314430(t_956313418, key_956313419, hc_956313475[0]);
      }
      
      F.line = 51;
      index_956313705 = subInt(-1, index_956313705);
      F.line = 52;
      rawInsert_956314261(t_956313418, t_956313418, "data", key_956313419, val_956313420, hc_956313475[0], index_956313705);
      F.line = 60;
      t_956313418.counter = addInt(t_956313418.counter, 1);
    }
    
  framePtr = F.prev;

  
}

function makeHeadtable_956313337(gm_956313338) {
  var result_956313339 = [({data: [], counter: 0})];

  var F = {procname: "PDA2CFG_separated_re.makeHeadtable", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 527;
    result_956313339[0] = nimCopy(result_956313339[0], initTable_956313342(32), NTI956308113);
    Label1: do {
      F.line = 528;
      var i_956313372 = 0;
      F.line = 528;
      var row_956313373 = [];
      F.line = 168;
      var i_436211765 = 0;
      F.line = 169;
      var L_436211766 = (gm_956313338).length;
      Label2: do {
        F.line = 170;
          Label3: while (true) {
          if (!(i_436211765 < L_436211766)) break Label3;
            F.line = 528;
            i_956313372 = i_436211765;
            F.line = 528;
            row_956313373 = gm_956313338[chckIndx(i_436211765, 0, (gm_956313338).length - 1)];
            if (!(eqStrings(row_956313373[chckIndx(0, 0, (row_956313373).length - 1)], []))) {
            F.line = 530;
            var aj_956313374 = findAccIndex_956313327(row_956313373);
            F.line = 531;
            HEX5BHEX5DHEX3D_956313415(result_956313339[0], row_956313373[chckIndx(0, 0, (row_956313373).length - 1)], {Field0: i_956313372, Field1: aj_956313374});
            }
            
            F.line = 172;
            i_436211765 = addInt(i_436211765, 1);
            if (!(((gm_956313338).length == L_436211766))) {
            F.line = 173;
            failedAssertImpl_218103864(makeNimstrLit("C:\\nim-1.6.6\\lib\\system\\iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956313339[0];

}

function sizes_956313203(mtx_956313204) {
  var result_956313205 = {Field0: 0, Field1: 0};

  var F = {procname: "PDA2CFG_separated_re.sizes", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 499;
    var colontmp__436211789 = (mtx_956313204).length;
    F.line = 499;
    var colontmp__436211790 = (mtx_956313204[chckIndx(0, 0, (mtx_956313204).length - 1)]).length;
    F.line = 499;
    result_956313205 = nimCopy(result_956313205, {Field0: colontmp__436211789, Field1: colontmp__436211790}, NTI956308033);
  framePtr = F.prev;

  return result_956313205;

}

function makeElblmtx_956314676(gm_956314677, gr_956314678) {
                    var Temporary7;
                    var Temporary8;
                      var Temporary12;
                      var Temporary13;

  var result_956314679 = [];

  var F = {procname: "PDA2CFG_separated_re.makeElblmtx", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDA2CFG_separated_re.nim", line: 0};
  framePtr = F;
    F.line = 533;
    var colontmp__436211788 = sizes_956313203(gm_956314677);
    F.line = 533;
    var m_956314680 = colontmp__436211788["Field0"];
    F.line = 533;
    var n_956314681 = colontmp__436211788["Field1"];
    F.line = 534;
    result_956314679 = nimCopy(null, newGrpmtx_956313180(m_956314680, n_956314681), NTI956308012);
    F.line = 535;
    var headrow_956314682 = 0;
    F.line = 535;
    var head_956314683 = [];
    Label1: do {
      F.line = 536;
      var i_956314688 = 0;
      F.line = 119;
      var i_436211786 = 1;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436211786 < m_956314680)) break Label3;
            F.line = 536;
            i_956314688 = i_436211786;
            F.line = 537;
            var aj_956314689 = findAccIndex_956313327(gm_956314677[chckIndx(i_956314688, 0, (gm_956314677).length - 1)]);
            if (!(eqStrings(gm_956314677[chckIndx(i_956314688, 0, (gm_956314677).length - 1)][chckIndx(0, 0, (gm_956314677[chckIndx(i_956314688, 0, (gm_956314677).length - 1)]).length - 1)], []))) {
            F.line = 539;
            headrow_956314682 = i_956314688;
            F.line = 539;
            head_956314683 = nimCopy(null, gm_956314677[chckIndx(i_956314688, 0, (gm_956314677).length - 1)][chckIndx(0, 0, (gm_956314677[chckIndx(i_956314688, 0, (gm_956314677).length - 1)]).length - 1)], NTI33554439);
            F.line = 540;
            result_956314679[chckIndx(i_956314688, 0, (result_956314679).length - 1)][chckIndx(0, 0, (result_956314679[chckIndx(i_956314688, 0, (result_956314679).length - 1)]).length - 1)] = nimCopy(null, head_956314683, NTI33554439);
            Label4: do {
              F.line = 541;
              var j_956314694 = 0;
              F.line = 90;
              var res_436211781 = 2;
              Label5: do {
                F.line = 91;
                  Label6: while (true) {
                  if (!(res_436211781 <= aj_956314689)) break Label6;
                    F.line = 541;
                    j_956314694 = res_436211781;
                    F.line = 541;
                    result_956314679[chckIndx(i_956314688, 0, (result_956314679).length - 1)][chckIndx(j_956314694, 0, (result_956314679[chckIndx(i_956314688, 0, (result_956314679).length - 1)]).length - 1)] = nimCopy(null, (Temporary8 = (Temporary7 = HEX5BHEX5D_956312812(gr_956314678.Field2, head_956314683), Temporary7)[chckIndx(0, 0, (Temporary7).length - 1)], Temporary8)[chckIndx(subInt(j_956314694, 2), 0, (Temporary8).length - 1)], NTI33554439);
                    F.line = 93;
                    res_436211781 = addInt(res_436211781, 1);
                  }
              } while (false);
            } while (false);
            }
            else {
              Label9: do {
                F.line = 544;
                var j_956314757 = 0;
                F.line = 90;
                var res_436211784 = 2;
                Label10: do {
                  F.line = 91;
                    Label11: while (true) {
                    if (!(res_436211784 <= aj_956314689)) break Label11;
                      F.line = 544;
                      j_956314757 = res_436211784;
                      F.line = 544;
                      result_956314679[chckIndx(i_956314688, 0, (result_956314679).length - 1)][chckIndx(j_956314757, 0, (result_956314679[chckIndx(i_956314688, 0, (result_956314679).length - 1)]).length - 1)] = nimCopy(null, (Temporary13 = (Temporary12 = HEX5BHEX5D_956312812(gr_956314678.Field2, head_956314683), Temporary12)[chckIndx(subInt(i_956314688, headrow_956314682), 0, (Temporary12).length - 1)], Temporary13)[chckIndx(subInt(j_956314757, 2), 0, (Temporary13).length - 1)], NTI33554439);
                      F.line = 93;
                      res_436211784 = addInt(res_436211784, 1);
                    }
                } while (false);
              } while (false);
            }
            
            F.line = 122;
            i_436211786 = addInt(i_436211786, 1);
          }
      } while (false);
    } while (false);
  framePtr = F.prev;

  return result_956314679;

}

function HEX5BHEX5D_436211125(t_436211128, key_436211129) {
  var result_436211130 = {Field0: 0, Field1: 0};

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym20_436211131 = [0];
    F.line = 243;
    var indexHEX60gensym20_436211138 = rawGet_956313476(t_436211128, key_436211129, hcHEX60gensym20_436211131, 0);
    if ((0 <= indexHEX60gensym20_436211138)) {
    F.line = 244;
    result_436211130 = nimCopy(result_436211130, t_436211128.data[chckIndx(indexHEX60gensym20_436211138, 0, (t_436211128.data).length - 1)].Field2, NTI956308108);
    }
    else {
      F.line = 246;
    raiseKeyError_956301878(key_436211129);
    }
    
  framePtr = F.prev;

  return result_436211130;

}

function hash_637534378(x_637534380) {
  var result_637534381 = 0;

  var F = {procname: "hash.hash", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\hashes.nim", line: 0};
  framePtr = F;
    F.line = 210;
    result_637534381 = hashWangYi1_637534386(x_637534380);
  framePtr = F.prev;

  return result_637534381;

}

function rawGet_956314966(t_956314969, key_956314970, hc_956314971, hc_956314971_Idx) {
            var Temporary3;

  var result_956314972 = 0;

  var F = {procname: "rawGet.rawGet", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\hashcommon.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 64;
    hc_956314971[hc_956314971_Idx] = hash_637534378(key_956314970);
    if ((hc_956314971[hc_956314971_Idx] == 0)) {
    F.line = 66;
    hc_956314971[hc_956314971_Idx] = 314159265;
    }
    
    if (((t_956314969.data).length == 0)) {
    F.line = 48;
    result_956314972 = -1;
    break BeforeRet;
    }
    
    F.line = 49;
    var h_956315026 = (hc_956314971[hc_956314971_Idx] & (t_956314969.data).length - 1);
    Label1: do {
      F.line = 50;
        Label2: while (true) {
        if (!isFilled_570425375(t_956314969.data[chckIndx(h_956315026, 0, (t_956314969.data).length - 1)].Field0)) break Label2;
            if (!(t_956314969.data[chckIndx(h_956315026, 0, (t_956314969.data).length - 1)].Field0 == hc_956314971[hc_956314971_Idx])) Temporary3 = false; else {              Temporary3 = (t_956314969.data[chckIndx(h_956315026, 0, (t_956314969.data).length - 1)].Field1 == key_956314970);            }          if (Temporary3) {
          F.line = 56;
          result_956314972 = h_956315026;
          break BeforeRet;
          }
          
          F.line = 57;
          h_956315026 = nextTry_570425378(h_956315026, (t_956314969.data).length - 1);
        }
    } while (false);
    F.line = 58;
    result_956314972 = subInt(-1, h_956315026);
  } while (false);
  framePtr = F.prev;

  return result_956314972;

}

function raiseKeyError_436211315(key_436211317) {
  var F = {procname: "raiseKeyError.raiseKeyError", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 234;
    raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_318767107(key_436211317) || []), parent: null, m_type: NTI33555126, name: null, trace: [], up: null}, "KeyError");
  framePtr = F.prev;

  
}

function HEX5BHEX5D_436211248(t_436211251, key_436211252) {
  var result_436211253 = [];

  var F = {procname: "[].[]", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\collections\\tables.nim", line: 0};
  framePtr = F;
    F.line = 242;
    var hcHEX60gensym20_436211254 = [0];
    F.line = 243;
    var indexHEX60gensym20_436211261 = rawGet_956314966(t_436211251, key_436211252, hcHEX60gensym20_436211254, 0);
    if ((0 <= indexHEX60gensym20_436211261)) {
    F.line = 244;
    result_436211253 = nimCopy(null, t_436211251.data[chckIndx(indexHEX60gensym20_436211261, 0, (t_436211251.data).length - 1)].Field2, NTI33554439);
    }
    else {
      F.line = 246;
    raiseKeyError_436211315(key_436211252);
    }
    
  framePtr = F.prev;

  return result_436211253;

}

function integerOutOfRangeError_855638264() {
  var F = {procname: "parseutils.integerOutOfRangeError", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 426;
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
  framePtr = F.prev;

  
}

function rawParseInt_855638266(s_855638267, b_855638268, b_855638268_Idx, start_855638269) {
      var Temporary1;
          var Temporary4;
      var Temporary7;

  var result_855638270 = 0;

  var F = {procname: "parseutils.rawParseInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 434;
    var sign_855638271 = -1;
    F.line = 435;
    var i_855638272 = start_855638269;
    if ((i_855638272 < (s_855638267).length)) {
    if ((s_855638267[chckIndx(i_855638272, 0, (s_855638267).length - 1)] == 43)) {
    F.line = 437;
    i_855638272 += 1;
    }
    else {
    if ((s_855638267[chckIndx(i_855638272, 0, (s_855638267).length - 1)] == 45)) {
    F.line = 439;
    i_855638272 += 1;
    F.line = 440;
    sign_855638271 = 1;
    }
    }
    }
    
      if (!(i_855638272 < (s_855638267).length)) Temporary1 = false; else {        Temporary1 = (ConstSet73[s_855638267[chckIndx(i_855638272, 0, (s_855638267).length - 1)]] != undefined);      }    if (Temporary1) {
    F.line = 442;
    b_855638268[b_855638268_Idx] = 0;
    Label2: do {
      F.line = 443;
        Label3: while (true) {
          if (!(i_855638272 < (s_855638267).length)) Temporary4 = false; else {            Temporary4 = (ConstSet74[s_855638267[chckIndx(i_855638272, 0, (s_855638267).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          F.line = 444;
          var c_855638295 = (s_855638267[chckIndx(i_855638272, 0, (s_855638267).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_855638295) / 10) <= b_855638268[b_855638268_Idx])) {
          F.line = 446;
          b_855638268[b_855638268_Idx] = ((b_855638268[b_855638268_Idx] * 10) - c_855638295);
          }
          else {
            F.line = 448;
          integerOutOfRangeError_855638264();
          }
          
          F.line = 449;
          i_855638272 += 1;
          Label5: do {
            F.line = 450;
              Label6: while (true) {
              if (!((i_855638272 < (s_855638267).length) && (s_855638267[chckIndx(i_855638272, 0, (s_855638267).length - 1)] == 95))) break Label6;
                F.line = 450;
                i_855638272 += 1;
              }
          } while (false);
        }
    } while (false);
      if (!(sign_855638271 == -1)) Temporary7 = false; else {        Temporary7 = (b_855638268[b_855638268_Idx] == -9223372036854775808);      }    if (Temporary7) {
    F.line = 452;
    integerOutOfRangeError_855638264();
    }
    else {
      F.line = 454;
      b_855638268[b_855638268_Idx] = (b_855638268[b_855638268_Idx] * sign_855638271);
      F.line = 455;
      result_855638270 = (i_855638272 - start_855638269);
    }
    
    }
    
  framePtr = F.prev;

  return result_855638270;

}

function npuParseBiggestInt(s_855638313, number_855638314, number_855638314_Idx, start_855638315) {
  var result_855638316 = 0;

  var F = {procname: "parseutils.parseBiggestInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 469;
    var res_855638317 = [0];
    F.line = 472;
    result_855638316 = rawParseInt_855638266(s_855638313, res_855638317, 0, start_855638315);
    if (!((result_855638316 == 0))) {
    F.line = 474;
    number_855638314[number_855638314_Idx] = res_855638317[0];
    }
    
  framePtr = F.prev;

  return result_855638316;

}

function npuParseInt(s_855638319, number_855638320, number_855638320_Idx, start_855638321) {
      var Temporary1;

  var result_855638322 = 0;

  var F = {procname: "parseutils.parseInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\parseutils.nim", line: 0};
  framePtr = F;
    F.line = 487;
    var res_855638323 = [0];
    F.line = 488;
    result_855638322 = npuParseBiggestInt(s_855638319, res_855638323, 0, start_855638321);
      if ((res_855638323[0] < -2147483648)) Temporary1 = true; else {        Temporary1 = (2147483647 < res_855638323[0]);      }    if (Temporary1) {
    F.line = 491;
    integerOutOfRangeError_855638264();
    }
    
    if (!((result_855638322 == 0))) {
    F.line = 493;
    number_855638320[number_855638320_Idx] = chckRange(res_855638323[0], -2147483648, 2147483647);
    }
    
  framePtr = F.prev;

  return result_855638322;

}

function nsuParseInt(s_620757790) {
      var Temporary1;

  var result_620757791 = [0];

  var F = {procname: "strutils.parseInt", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\pure\\strutils.nim", line: 0};
  framePtr = F;
    F.line = 1069;
    result_620757791[0] = 0;
    F.line = 1070;
    var L_620757792 = npuParseInt(s_620757790, result_620757791, 0, 0);
      if (!((L_620757792 == (s_620757790).length))) Temporary1 = true; else {        Temporary1 = (L_620757792 == 0);      }    if (Temporary1) {
    F.line = 1072;
    raiseException({message: (makeNimstrLit("invalid integer: ") || []).concat(s_620757790 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    
  framePtr = F.prev;

  return result_620757791[0];

}

function HEX3DHEX3D_436211667(x_436211669, y_436211670) {
  var result_436211671 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "C:\\nim-1.6.6\\lib\\system.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    if (!((x_436211669["Field0"] == y_436211670["Field0"]))) {
    F.line = 1878;
    result_436211671 = false;
    break BeforeRet;
    }
    
    if (!((x_436211669["Field1"] == y_436211670["Field1"]))) {
    F.line = 1878;
    result_436211671 = false;
    break BeforeRet;
    }
    
    F.line = 1879;
    result_436211671 = true;
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_436211671;

}

function toCFGgv() {
                      var Temporary19;
                    var Temporary26;
                    var Temporary27;
                    var Temporary28;

  var result_436211015 = null;

  var F = {procname: "PDAtoCFGjs.toCFGgv", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
  framePtr = F;
  BeforeRet: do {
    F.line = 229;
    var grm_436211016 = makeGrpmtx_956313213(gcfg_436207632[0]);
    F.line = 230;
    var headtbl_436211017 = makeHeadtable_956313337(grm_436211016);
    F.line = 231;
    var grmlbl_436211018 = makeElblmtx_956314676(grm_436211016, gcfg_436207632[0]);
    F.line = 233;
    var spc_436211019 = (makeNimstrLit("digraph CFG_transition_diagram {\x0Asize = \"") || []).concat(gvsize_436207626[0] || [],makeNimstrLit("\"\x0Anodesep = ") || [],gvnodesep2_436207629[0] || [],makeNimstrLit("\x0Aranksep = ") || [],gvranksep2_436207630[0] || [],makeNimstrLit("\x0A") || []);
    F.line = 235;
    var colontmp__436211791 = sizes_956313203(grm_436211016);
    F.line = 235;
    var m_436211020 = colontmp__436211791["Field0"];
    F.line = 235;
    var n_436211021 = colontmp__436211791["Field1"];
    Label1: do {
      F.line = 236;
      var i_436211026 = 0;
      F.line = 119;
      var i_436211695 = 1;
      Label2: do {
        F.line = 120;
          Label3: while (true) {
          if (!(i_436211695 < m_436211020)) break Label3;
            F.line = 236;
            i_436211026 = i_436211695;
            if (!(eqStrings(grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(0, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)], []))) {
            F.line = 238;
            spc_436211019.push.apply(spc_436211019, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(0, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)] || []).concat(makeNimstrLit(" [shape = plaintext]\x0A") || []));;
            }
            
            F.line = 239;
            var aj_436211027 = findAccIndex_956313327(grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]);
            Label4: do {
              F.line = 240;
              var j_436211032 = 0;
              F.line = 119;
              var i_436211690 = 1;
              Label5: do {
                F.line = 120;
                  Label6: while (true) {
                  if (!(i_436211690 < aj_436211027)) break Label6;
                    F.line = 240;
                    j_436211032 = i_436211690;
                    if (!(eqStrings(grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(j_436211032, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)], []))) {
                    F.line = 241;
                    spc_436211019.push.apply(spc_436211019, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(j_436211032, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)] || []).concat(makeNimstrLit(" [shape = circle]\x0A") || []));;
                    }
                    
                    F.line = 122;
                    i_436211690 = addInt(i_436211690, 1);
                  }
              } while (false);
            } while (false);
            F.line = 236;
            spc_436211019.push.apply(spc_436211019, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(aj_436211027, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)] || []).concat(makeNimstrLit(" [shape = doublecircle]\x0A") || []));;
            F.line = 236;
            spc_436211019.push.apply(spc_436211019, makeNimstrLit("{rank = same;"));;
            Label7: do {
              F.line = 244;
              var j_436211037 = 0;
              F.line = 90;
              var res_436211693 = 0;
              Label8: do {
                F.line = 91;
                  Label9: while (true) {
                  if (!(res_436211693 <= aj_436211027)) break Label9;
                    F.line = 244;
                    j_436211037 = res_436211693;
                    if (!(eqStrings(grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(j_436211037, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)], []))) {
                    F.line = 245;
                    spc_436211019.push.apply(spc_436211019, (makeNimstrLit(" ") || []).concat(grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)][chckIndx(j_436211037, 0, (grm_436211016[chckIndx(i_436211026, 0, (grm_436211016).length - 1)]).length - 1)] || [],makeNimstrLit("[group = g") || [],HEX24_318767107(j_436211037) || [],makeNimstrLit("];") || []));;
                    }
                    
                    F.line = 93;
                    res_436211693 = addInt(res_436211693, 1);
                  }
              } while (false);
            } while (false);
            F.line = 236;
            spc_436211019.push.apply(spc_436211019, makeNimstrLit("}\x0A"));;
            F.line = 122;
            i_436211695 = addInt(i_436211695, 1);
          }
      } while (false);
    } while (false);
    F.line = 248;
    var headrow_436211038 = 0;
    F.line = 248;
    var head_436211039 = [];
    F.line = 249;
    var headrowini_436211040 = [];
    F.line = 249;
    var headrowaj_436211041 = 0;
    Label10: do {
      F.line = 250;
      var i_436211046 = 0;
      F.line = 119;
      var i_436211704 = 1;
      Label11: do {
        F.line = 120;
          Label12: while (true) {
          if (!(i_436211704 < m_436211020)) break Label12;
            F.line = 250;
            i_436211046 = i_436211704;
            if (!(eqStrings(grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(0, 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)], []))) {
            F.line = 252;
            headrow_436211038 = i_436211046;
            F.line = 253;
            head_436211039 = nimCopy(null, grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(0, 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)], NTI33554439);
            F.line = 254;
            headrowini_436211040 = nimCopy(null, grm_436211016[chckIndx(headrow_436211038, 0, (grm_436211016).length - 1)][chckIndx(1, 0, (grm_436211016[chckIndx(headrow_436211038, 0, (grm_436211016).length - 1)]).length - 1)], NTI33554439);
            F.line = 255;
            var aj_436211047 = findAccIndex_956313327(grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]);
            F.line = 255;
            headrowaj_436211041 = aj_436211047;
            Label13: do {
              F.line = 256;
              var j_436211052 = 0;
              F.line = 90;
              var res_436211699 = 1;
              Label14: do {
                F.line = 91;
                  Label15: while (true) {
                  if (!(res_436211699 <= aj_436211047)) break Label15;
                    F.line = 256;
                    j_436211052 = res_436211699;
                    F.line = 256;
                    spc_436211019.push.apply(spc_436211019, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(subInt(j_436211052, 1), 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)] || []).concat(makeNimstrLit(" -> ") || [],grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(j_436211052, 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)] || [],makeNimstrLit(" [weight = 2") || []));;
                    if ((j_436211052 == 1)) {
                    F.line = 258;
                    spc_436211019.push.apply(spc_436211019, makeNimstrLit("]\x0A"));;
                    }
                    else {
                      F.line = 260;
                      var elabel_436211053 = nimCopy(null, grmlbl_436211018[chckIndx(i_436211046, 0, (grmlbl_436211018).length - 1)][chckIndx(j_436211052, 0, (grmlbl_436211018[chckIndx(i_436211046, 0, (grmlbl_436211018).length - 1)]).length - 1)], NTI33554439);
                      F.line = 261;
                      spc_436211019.push.apply(spc_436211019, (makeNimstrLit(", label = \"") || []).concat(elabel_436211053 || [],makeNimstrLit("\"") || []));;
                      if (isVariable_956306413(elabel_436211053)) {
                      F.line = 262;
                      spc_436211019.push.apply(spc_436211019, makeNimstrLit(", style = dotted"));;
                      }
                      
                      F.line = 263;
                      spc_436211019.push.apply(spc_436211019, makeNimstrLit("]\x0A"));;
                    }
                    
                    F.line = 93;
                    res_436211699 = addInt(res_436211699, 1);
                  }
              } while (false);
            } while (false);
            }
            else {
              F.line = 265;
              var aj_436211054 = findAccIndex_956313327(grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]);
              Label16: do {
                F.line = 266;
                var j_436211059 = 0;
                F.line = 90;
                var res_436211702 = 2;
                Label17: do {
                  F.line = 91;
                    Label18: while (true) {
                    if (!(res_436211702 <= aj_436211054)) break Label18;
                      F.line = 266;
                      j_436211059 = res_436211702;
                      F.line = 266;
                      if ((j_436211059 == 2)) {
                      Temporary19 = headrowini_436211040;
                      }
                      else {
                      Temporary19 = grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(subInt(j_436211059, 1), 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)];
                      }
                      
                      spc_436211019.push.apply(spc_436211019, (Temporary19 || []).concat(makeNimstrLit(" -> ") || [],grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(j_436211059, 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)] || [],makeNimstrLit(" [weight = 2") || []));;
                      F.line = 269;
                      var elabel_436211060 = nimCopy(null, grmlbl_436211018[chckIndx(i_436211046, 0, (grmlbl_436211018).length - 1)][chckIndx(j_436211059, 0, (grmlbl_436211018[chckIndx(i_436211046, 0, (grmlbl_436211018).length - 1)]).length - 1)], NTI33554439);
                      F.line = 266;
                      spc_436211019.push.apply(spc_436211019, (makeNimstrLit(", label = \"") || []).concat(elabel_436211060 || [],makeNimstrLit("\"") || []));;
                      if (isVariable_956306413(elabel_436211060)) {
                      F.line = 271;
                      spc_436211019.push.apply(spc_436211019, makeNimstrLit(", style = dotted"));;
                      }
                      
                      F.line = 266;
                      spc_436211019.push.apply(spc_436211019, makeNimstrLit("]\x0A"));;
                      F.line = 93;
                      res_436211702 = addInt(res_436211702, 1);
                    }
                } while (false);
              } while (false);
              F.line = 273;
              spc_436211019.push.apply(spc_436211019, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)][chckIndx(aj_436211054, 0, (grm_436211016[chckIndx(i_436211046, 0, (grm_436211016).length - 1)]).length - 1)] || []).concat(makeNimstrLit(" -> ") || [],grm_436211016[chckIndx(headrow_436211038, 0, (grm_436211016).length - 1)][chckIndx(headrowaj_436211041, 0, (grm_436211016[chckIndx(headrow_436211038, 0, (grm_436211016).length - 1)]).length - 1)] || [],makeNimstrLit(" [weight = 1, color=\"black:invis:black\", arrowhead = onormal]\x0A") || []));;
            }
            
            F.line = 122;
            i_436211704 = addInt(i_436211704, 1);
          }
      } while (false);
    } while (false);
    Label20: do {
      F.line = 275;
      var i_436211065 = 0;
      F.line = 119;
      var i_436211711 = 1;
      Label21: do {
        F.line = 120;
          Label22: while (true) {
          if (!(i_436211711 < m_436211020)) break Label22;
            F.line = 275;
            i_436211065 = i_436211711;
            if (!(eqStrings(grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)][chckIndx(0, 0, (grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]).length - 1)], []))) {
            F.line = 277;
            headrow_436211038 = i_436211065;
            }
            
            Label23: do {
              F.line = 278;
              var j_436211070 = 0;
              F.line = 75;
              var colontmp__436211708 = 0;
              F.line = 278;
              colontmp__436211708 = findAccIndex_956313327(grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]);
              F.line = 90;
              var res_436211709 = 2;
              Label24: do {
                F.line = 91;
                  Label25: while (true) {
                  if (!(res_436211709 <= colontmp__436211708)) break Label25;
                    F.line = 278;
                    j_436211070 = res_436211709;
                    F.line = 279;
                    var s_436211071 = nimCopy(null, grmlbl_436211018[chckIndx(i_436211065, 0, (grmlbl_436211018).length - 1)][chckIndx(j_436211070, 0, (grmlbl_436211018[chckIndx(i_436211065, 0, (grmlbl_436211018).length - 1)]).length - 1)], NTI33554439);
                    if (isVariable_956306413(s_436211071)) {
                    F.line = 282;
                    if (eqStrings(grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)][chckIndx(subInt(j_436211070, 1), 0, (grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]).length - 1)], [])) {
                    Temporary26 = grm_436211016[chckIndx(headrow_436211038, 0, (grm_436211016).length - 1)][chckIndx(subInt(j_436211070, 1), 0, (grm_436211016[chckIndx(headrow_436211038, 0, (grm_436211016).length - 1)]).length - 1)];
                    }
                    else {
                    Temporary26 = grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)][chckIndx(subInt(j_436211070, 1), 0, (grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]).length - 1)];
                    }
                    
                    spc_436211019.push.apply(spc_436211019, (Temporary26 || []).concat(makeNimstrLit(" -> ") || [],(Temporary27 = grm_436211016[chckIndx(HEX5BHEX5D_436211125(headtbl_436211017, s_436211071).Field0, 0, (grm_436211016).length - 1)], Temporary27)[chckIndx(1, 0, (Temporary27).length - 1)] || [],makeNimstrLit(" [fontname=\"MS UI Gothic\", taillabel = \"/") || [],HEX5BHEX5D_436211248(maru_956316183, nsuParseInt(grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)][chckIndx(j_436211070, 0, (grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]).length - 1)])) || [],makeNimstrLit("\"") || []));;
                    if (((subInt(j_436211070, 1) == 2) && (HEX5BHEX5D_436211125(headtbl_436211017, s_436211071).Field0 == i_436211065))) {
                    F.line = 286;
                    spc_436211019.push.apply(spc_436211019, makeNimstrLit(", headport = n, tailport = n"));;
                    }
                    
                    F.line = 287;
                    spc_436211019.push.apply(spc_436211019, makeNimstrLit("]\x0A"));;
                    F.line = 289;
                    spc_436211019.push.apply(spc_436211019, ((Temporary28 = grm_436211016[chckIndx(HEX5BHEX5D_436211125(headtbl_436211017, s_436211071).Field0, 0, (grm_436211016).length - 1)], Temporary28)[chckIndx(HEX5BHEX5D_436211125(headtbl_436211017, s_436211071).Field1, 0, (Temporary28).length - 1)] || []).concat(makeNimstrLit(" -> ") || [],grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)][chckIndx(j_436211070, 0, (grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]).length - 1)] || [],makeNimstrLit(" [fontname=\"MS UI Gothic\", taillabel = \"") || [],HEX5BHEX5D_436211248(maru_956316183, nsuParseInt(grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)][chckIndx(j_436211070, 0, (grm_436211016[chckIndx(i_436211065, 0, (grm_436211016).length - 1)]).length - 1)])) || [],makeNimstrLit("/\", style = dashed, arrowhead = vee") || []));;
                    if (HEX3DHEX3D_436211667({Field0: HEX5BHEX5D_436211125(headtbl_436211017, s_436211071).Field0, Field1: HEX5BHEX5D_436211125(headtbl_436211017, s_436211071).Field1}, {Field0: i_436211065, Field1: addInt(j_436211070, 1)})) {
                    F.line = 294;
                    spc_436211019.push.apply(spc_436211019, makeNimstrLit(", headport = n, tailport = n"));;
                    }
                    
                    F.line = 295;
                    spc_436211019.push.apply(spc_436211019, makeNimstrLit("]\x0A"));;
                    }
                    
                    F.line = 93;
                    res_436211709 = addInt(res_436211709, 1);
                  }
              } while (false);
            } while (false);
            F.line = 122;
            i_436211711 = addInt(i_436211711, 1);
          }
      } while (false);
    } while (false);
    F.line = 297;
    spc_436211019.push.apply(spc_436211019, makeNimstrLit("edge[style = invis];\x0A"));;
    Label29: do {
      F.line = 298;
      var j_436211681 = 0;
      F.line = 119;
      var i_436211717 = 0;
      Label30: do {
        F.line = 120;
          Label31: while (true) {
          if (!(i_436211717 < n_436211021)) break Label31;
            F.line = 298;
            j_436211681 = i_436211717;
            F.line = 299;
            var prv_436211682 = [];
            Label32: do {
              F.line = 300;
              var i_436211687 = 0;
              F.line = 119;
              var i_436211715 = 1;
              Label33: do {
                F.line = 120;
                  Label34: while (true) {
                  if (!(i_436211715 < m_436211020)) break Label34;
                    F.line = 300;
                    i_436211687 = i_436211715;
                    if (!(eqStrings(grm_436211016[chckIndx(i_436211687, 0, (grm_436211016).length - 1)][chckIndx(j_436211681, 0, (grm_436211016[chckIndx(i_436211687, 0, (grm_436211016).length - 1)]).length - 1)], []))) {
                    if (!(eqStrings(prv_436211682, []))) {
                    F.line = 302;
                    spc_436211019.push.apply(spc_436211019, (prv_436211682 || []).concat(makeNimstrLit(" -> ") || [],grm_436211016[chckIndx(i_436211687, 0, (grm_436211016).length - 1)][chckIndx(j_436211681, 0, (grm_436211016[chckIndx(i_436211687, 0, (grm_436211016).length - 1)]).length - 1)] || [],makeNimstrLit("\x0A") || []));;
                    }
                    
                    F.line = 303;
                    prv_436211682 = nimCopy(null, grm_436211016[chckIndx(i_436211687, 0, (grm_436211016).length - 1)][chckIndx(j_436211681, 0, (grm_436211016[chckIndx(i_436211687, 0, (grm_436211016).length - 1)]).length - 1)], NTI33554439);
                    }
                    
                    F.line = 122;
                    i_436211715 = addInt(i_436211715, 1);
                  }
              } while (false);
            } while (false);
            F.line = 122;
            i_436211717 = addInt(i_436211717, 1);
          }
      } while (false);
    } while (false);
    F.line = 304;
    spc_436211019.push.apply(spc_436211019, makeNimstrLit("}"));;
    F.line = 305;
    result_436211015 = toJSStr(spc_436211019);
    break BeforeRet;
  } while (false);
  framePtr = F.prev;

  return result_436211015;

}
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
F.line = 306;
rawEcho(cstrToNimstr(toCFGgv()));
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module PDAtoCFGjs", prev: framePtr, filename: "C:\\Users\\root.moti-PC.001\\Desktop\\zoom\\B4semi\\Nim\\PDA2CFGnigui\\PDA2CFG_html\\PDAtoCFGjs.nim", line: 0};
framePtr = F;
framePtr = F.prev;
